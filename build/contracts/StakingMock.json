{
  "contractName": "StakingMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ERC20Address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "interestRatePerBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pausedSinceBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "lockPeriodInBlocks",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sinceInterestRateIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "name": "BindStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DeleteContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExcessTokenWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "name": "LiquidityUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "num_of_blocks",
          "type": "uint64"
        }
      ],
      "name": "LockPeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "NewInterestRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sinceBlock",
          "type": "uint256"
        }
      ],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardsPoolTokenTopUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardsPoolTokenWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sinceInterestRateIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "name": "StakeCompoundInterest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "liquidSinceBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "name": "UnbindStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DELEGATE_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DELETE_PROTECTION_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_accruedGlobalLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_accruedGlobalLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_accruedGlobalPrincipal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_blockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_earliestDelete",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_interestRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sinceBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_interestRatesNextIdx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_interestRatesStartIdx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_lockPeriodInBlocks",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_pausedSinceBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_rewardsPoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationBlock",
          "type": "uint256"
        }
      ],
      "name": "addInterestRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "bindStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payoutAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "deleteContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEarliestDeleteBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "for_address",
          "type": "address"
        }
      ],
      "name": "getLockedAssetsAggregateForUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "for_address",
          "type": "address"
        }
      ],
      "name": "getLockedAssetsForUser",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "principal",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "compoundInterest",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "liquidSinceBlock",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "for_address",
          "type": "address"
        }
      ],
      "name": "getNumberOfLockedAssetsForUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardsPoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "for_address",
          "type": "address"
        }
      ],
      "name": "getStakeForUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sinceBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sinceInterestRateIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "block_number",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "pauseSince",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "topUpRewardsPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "unbindStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "num_of_blocks",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "updateLockPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdrawCompoundInterest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdrawExcessTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromRewardsPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdrawPrincipal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdrawWholeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "setBlockNumber",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRatePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pausedSinceBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"lockPeriodInBlocks\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sinceInterestRateIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"name\":\"BindStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DeleteContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExcessTokenWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"name\":\"LiquidityUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"num_of_blocks\",\"type\":\"uint64\"}],\"name\":\"LockPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"NewInterestRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sinceBlock\",\"type\":\"uint256\"}],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsPoolTokenTopUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsPoolTokenWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sinceInterestRateIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"name\":\"StakeCompoundInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"liquidSinceBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"name\":\"UnbindStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELEGATE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELETE_PROTECTION_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_accruedGlobalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_accruedGlobalLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_accruedGlobalPrincipal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_blockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_earliestDelete\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_interestRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sinceBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_interestRatesNextIdx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_interestRatesStartIdx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_lockPeriodInBlocks\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_pausedSinceBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rewardsPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationBlock\",\"type\":\"uint256\"}],\"name\":\"addInterestRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"bindStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payoutAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEarliestDeleteBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"for_address\",\"type\":\"address\"}],\"name\":\"getLockedAssetsAggregateForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"for_address\",\"type\":\"address\"}],\"name\":\"getLockedAssetsForUser\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"principal\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"compoundInterest\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"liquidSinceBlock\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"for_address\",\"type\":\"address\"}],\"name\":\"getNumberOfLockedAssetsForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"for_address\",\"type\":\"address\"}],\"name\":\"getStakeForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sinceBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sinceInterestRateIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"block_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"pauseSince\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"setBlockNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"topUpRewardsPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"unbindStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"num_of_blocks\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"updateLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdrawCompoundInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdrawExcessTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdrawFromRewardsPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdrawPrincipal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdrawWholeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addInterestRate(uint256,uint256)\":{\"details\":\"expiration period\",\"params\":{\"expirationBlock\":\"- block number beyond which is the carrier Tx considered expired, and so rejected.                    This is for protection of Tx sender to exactly define lifecycle length of the Tx,                    and so avoiding uncertainty of how long Tx sender needs to wait for Tx processing.                    Tx can be withheld\",\"rate\":\"- signed interest rate value in [10**18] units => real_rate [1] = rate [10**18] / 10**18\"}},\"deleteContract(address,uint256)\":{\"details\":\"owner only + only on or after `_earliestDelete` block\",\"params\":{\"payoutAddress\":\"address to transfer the balances to. Ensure that this is able to handle ERC20 tokens\"}},\"getLockedAssetsForUser(address)\":{\"details\":\"Returns locked assets decomposed in to 3 separate arrays (principal, compound interest, liquid since block)     NOTE(pb): This method might be quite expensive, depending on size of locked assets\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"pauseSince(uint256,uint256)\":{\"details\":\"Delegate only\",\"params\":{\"block_number\":\"block number since which non-admin interaction will be paused (for all _getBlockNumber() >= block_number)\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"topUpRewardsPool(uint256,uint256)\":{\"details\":\"Even though this is considered as administrative action (is not affected by by contract paused state, it can be executed by anyone who wishes to top-up the rewards pool (funds are sent in to contract, *not* the other way around). The Rewards Pool is exclusively dedicated to cover withdrawals of user' compound interest, which is effectively the reward.\"},\"unbindStake(uint256,uint256)\":{\"details\":\"public access\",\"params\":{\"amount\":\"- value to un-bind from the stake                If `amount=0` then the **WHOLE** stake (including                compound interest) will be unbound.\"}},\"updateLockPeriod(uint64,uint256)\":{\"details\":\"Delegate only\",\"params\":{\"num_of_blocks\":\"length of the lock period\"}},\"withdraw(uint256,uint256)\":{\"details\":\"public access\",\"params\":{\"amount\":\"- value to withdraw\"}},\"withdrawCompoundInterest(uint256)\":{\"details\":\"public access\"},\"withdrawExcessTokens(address,uint256)\":{\"details\":\"Withdraw \\\"excess\\\" tokens, which were sent to contract directly via direct ERC20.transfer(...),     without interacting with API of this (Staking) contract, what could be done only by mistake.     Thus this method is meant to be used primarily for rescue purposes, enabling withdrawal of such     \\\"excess\\\" tokens out of contract.\",\"params\":{\"targetAddress\":\": address to send tokens to\",\"txExpirationBlock\":\": block number until which is the transaction valid (inclusive).                           When transaction is processed after this block, it fails.\"}},\"withdrawFromRewardsPool(uint256,address,uint256)\":{\"details\":\"Withdraw tokens from rewards pool.\",\"params\":{\"amount\":\": amount to withdraw.                If `amount == 0` then whole amount in rewards pool will be withdrawn.\",\"targetAddress\":\": address to send tokens to\"}},\"withdrawPrincipal(uint256)\":{\"details\":\"public access\"},\"withdrawWholeLiquidity(uint256)\":{\"details\":\"public access\"}}},\"userdoc\":{\"methods\":{\"addInterestRate(uint256,uint256)\":{\"notice\":\"Add new interest rate in to the ordered container of previously added interest rates\"},\"deleteContract(address,uint256)\":{\"notice\":\"Delete the contract, transfers the remaining token and ether balance to the specified payoutAddress\"},\"pauseSince(uint256,uint256)\":{\"notice\":\"Pauses all NON-administrative interaction with the contract since the specidfed block number \"},\"unbindStake(uint256,uint256)\":{\"notice\":\"Unbinds amount from the stake of sender of the transaction,        and *LOCKS* it for number of blocks defined by value of the        `_lockPeriodInBlocks` state of this contract at the point        of this call.        The locked amount can *NOT* be withdrawn from the contract        *BEFORE* the lock period ends.     *         Unbinding (=calling this method) also means, that compound        interest will be calculated for period since la.\"},\"updateLockPeriod(uint64,uint256)\":{\"notice\":\"Updates Lock Period value\"},\"withdraw(uint256,uint256)\":{\"notice\":\"Withdraws amount from sender' available liquidity pool back to sender address,        preferring withdrawal from compound interest dimension of liquidity.\"},\"withdrawCompoundInterest(uint256)\":{\"notice\":\"Withdraws *WHOLE* compound interest amount available to sender.\"},\"withdrawPrincipal(uint256)\":{\"notice\":\"Withdraws *WHOLE* compound interest amount available to sender.\"},\"withdrawWholeLiquidity(uint256)\":{\"notice\":\"Withdraws whole liquidity available to sender back to sender' address,\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/contracts/StakingMock.sol\":\"StakingMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/abdk-libraries/ABDKMath64x64.sol\":{\"keccak256\":\"0x67609bc0923563d05d3a8a7c681056f9702a92120777cb0bcbb40d0afbb4a015\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://55e817969394d4e0201a8cd3763ad6776bc9fddc986febe9b4acf120e8b7ad0d\",\"dweb:/ipfs/QmNMve5ZjUfA8DJYic4sYTrDEAN6VyxcC7jWUTX25Wmnnp\"]},\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/contracts/AssetLib.sol\":{\"keccak256\":\"0x627891fef396f63fae2a38078dd28861689cac7e2d50286eaddf6b9a1109376a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e187942e72c2ed510626977753274ead2201b9a6655bbebac608964837d91d49\",\"dweb:/ipfs/QmTiUziuoAVEo2twWu9qydMKuwKUHW4WojQxweJGnUTDgM\"]},\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/contracts/Finance.sol\":{\"keccak256\":\"0x8f3dbc7a80f8f3ded257ba936128ac28db612eb1051a023808d39961e182f100\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f8734f9bcb14a8dd03d4abda5b106024a61814bbfe8a4be6568ab6c475dfe7d\",\"dweb:/ipfs/QmXJNmJU6nDAuQ9mb3aS2waJ62gfFgFVcp5cnxWqLxaf3s\"]},\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/contracts/Staking.sol\":{\"keccak256\":\"0x3dbb71b791c2a9366adda5102e5a1502f320f6f8bcd722ee5307e7e48868de32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e92ddb6596494a28d897abf64cf28eed5dbc4ebad962b7622b96e0f06146fdef\",\"dweb:/ipfs/QmVNEfTqsPfMipBRwZo9v9szYpjyjqzdz7V7akHhvGuHXz\"]},\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/contracts/StakingMock.sol\":{\"keccak256\":\"0x232b3b0cc8c9a9b21c0664046d2badee15aac3f8050fb14156b511d54ede1151\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e38ac57982aa72283991671e195dd184b3f98a2a0d801ec3fbe2ee3013bbe437\",\"dweb:/ipfs/QmTFYnqDszc655s17EBtW3kWwGcdYRUjhmF8RaKos83ehP\"]},\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200396e3803806200396e833981810160405260808110156200003757600080fd5b508051602082015160408301516060909301519192909183838383620000686000336001600160e01b03620000f616565b600180546001600160a01b0319166001600160a01b038616179055620000a96205a66d620000956200010f565b6200011560201b620024211790919060201c565b600255620000c0816001600160e01b036200017916565b620000d4836001600160e01b03620001cd16565b620000e8826001600160e01b036200026916565b5050505050505050620003e2565b6200010b82826001600160e01b03620002cc16565b5050565b60115490565b60008282018381101562000170576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b600480546001600160401b0383166001600160401b0319909116811790915560408051918252517f6b24ea7c7a8ce7fd2e6a6cb675dbabcd38a90f83ddd581c4435610ce90456e8f9181900360200190a150565b600c546040805180820190915280620001ee6001600160e01b036200010f16565b815260209081018490526000838152600d8252604090208251815591810151600192830155600c546200022c9290916200242162000115821b17901c565b600c5560408051838152905182917fbcd200f406c53d9438c6cdc2966a1e99c35f336588c95bc3639e539df21c2f53919081900360200190a25050565b60006200027e6001600160e01b036200010f16565b90508082106200028f578162000291565b805b600381905560408051918252517f68b095021b1f40fe513109f513c66692f0b3219aee674a69f4efc57badb8201d9181900360200190a15050565b600082815260208181526040909120620002f19183906200247b6200034e821b17901c565b156200010b576200030a6001600160e01b036200036e16565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000170836001600160a01b0384166001600160e01b036200037216565b3390565b60006200038983836001600160e01b03620003ca16565b620003c15750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000173565b50600062000173565b60009081526001919091016020526040902054151590565b61357c80620003f26000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c806391d1485411610151578063ca15c873116100c3578063d9d8e78311610087578063d9d8e783146107fa578063dca2aa5c14610802578063e2bbb1581461081f578063ecd0c0c314610842578063f0895e521461084a578063f1209ef71461087757610274565b8063ca15c87314610784578063d547741f146107a1578063d7e0e975146107cd578063d8cd3999146107d5578063d9b202c9146107f257610274565b8063aa700ff211610115578063aa700ff2146106e0578063adf55101146106fd578063ba92a4c514610705578063c0ba241b14610728578063c30f75cf14610730578063c8984ab21461077c57610274565b806391d14854146106295780639608df4b14610669578063a217fddf14610695578063a8c3c8501461069d578063a8f1b4c4146106ba57610274565b806340e97903116101ea5780635f208f34116101ae5780635f208f3414610435578063658e28a41461053957806367ce50c01461055657806368bccfcf1461059557806388cedd5e146105c75780639010d07c146105ea57610274565b806340e97903146103955780634164b001146103bb578063441a3e70146103c357806352885d8d146103e657806353e052ac1461040957610274565b8063292911fb1161023c578063292911fb146103025780632f2ff15d1461030a57806332a1bd7014610336578063347908df1461033e57806336568abe14610361578063372646bb1461038d57610274565b8063085313ec146102795780630c450f9d14610293578063133840391461029b578063248a9ca3146102c05780632514c50a146102dd575b600080fd5b61028161087f565b60408051918252519081900360200190f35b610281610886565b6102be600480360360408110156102b157600080fd5b508035906020013561088c565b005b610281600480360360208110156102d657600080fd5b503561095a565b6102e561096f565b6040805167ffffffffffffffff9092168252519081900360200190f35b61028161097f565b6102be6004803603604081101561032057600080fd5b50803590602001356001600160a01b0316610985565b6102816109f1565b6102be6004803603604081101561035457600080fd5b50803590602001356109f7565b6102be6004803603604081101561037757600080fd5b50803590602001356001600160a01b0316610ac0565b610281610b21565b610281600480360360208110156103ab57600080fd5b50356001600160a01b0316610b28565b610281610b46565b6102be600480360360408110156103d957600080fd5b5080359060200135610b4c565b6102be600480360360408110156103fc57600080fd5b5080359060200135610c2d565b6102be6004803603604081101561041f57600080fd5b506001600160a01b0381351690602001356110c6565b61045b6004803603602081101561044b57600080fd5b50356001600160a01b031661132a565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156104a357818101518382015260200161048b565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156104e25781810151838201526020016104ca565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610521578181015183820152602001610509565b50505050905001965050505050505060405180910390f35b6102be6004803603602081101561054f57600080fd5b50356114bd565b61057c6004803603602081101561056c57600080fd5b50356001600160a01b0316611596565b6040805192835260208301919091528051918290030190f35b6102be600480360360608110156105ab57600080fd5b508035906001600160a01b0360208201351690604001356115af565b6102be600480360360408110156105dd57600080fd5b50803590602001356118c1565b61060d6004803603604081101561060057600080fd5b5080359060200135611a53565b604080516001600160a01b039092168252519081900360200190f35b6106556004803603604081101561063f57600080fd5b50803590602001356001600160a01b0316611a7a565b604080519115158252519081900360200190f35b6102be6004803603604081101561067f57600080fd5b506001600160a01b038135169060200135611a98565b610281611ccc565b6102be600480360360208110156106b357600080fd5b5035611cd1565b61057c600480360360208110156106d057600080fd5b50356001600160a01b0316611cd6565b61057c600480360360208110156106f657600080fd5b5035611cf9565b610281611d12565b6102be6004803603604081101561071b57600080fd5b5080359060200135611d18565b610281611e8c565b6107566004803603602081101561074657600080fd5b50356001600160a01b0316611eb1565b604080519485526020850193909352838301919091526060830152519081900360800190f35b61057c611ee2565b6102816004803603602081101561079a57600080fd5b5035611eeb565b6102be600480360360408110156107b757600080fd5b50803590602001356001600160a01b0316611f02565b610281611f5b565b6102be600480360360208110156107eb57600080fd5b5035611f61565b61057c61203b565b610281612044565b6102be6004803603602081101561081857600080fd5b503561204a565b6102be6004803603604081101561083557600080fd5b508035906020013561213b565b61060d612343565b6102be6004803603604081101561086057600080fd5b5067ffffffffffffffff8135169060200135612352565b61028161241b565b6002545b90565b60055481565b610894612490565b806108c65750604080516c44454c45474154455f524f4c4560981b8152905190819003600d0190206108c69033611a7a565b6109015760405162461bcd60e51b81526004018080602001828103825260248152602001806134646024913960400191505060405180910390fd5b808061090b6124a1565b111561094c576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b610955836124a7565b505050565b60009081526020819052604090206002015490565b60045467ffffffffffffffff1681565b60065481565b6000828152602081905260409020600201546109a8906109a3612530565b611a7a565b6109e35760405162461bcd60e51b815260040180806020018281038252602f815260200180613435602f913960400191505060405180910390fd5b6109ed8282612534565b5050565b60025481565b8080610a016124a1565b1115610a42576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b610a4a612490565b80610a7c5750604080516c44454c45474154455f524f4c4560981b8152905190819003600d019020610a7c9033611a7a565b610ab75760405162461bcd60e51b81526004018080602001828103825260248152602001806134646024913960400191505060405180910390fd5b610955836125a3565b610ac8612530565b6001600160a01b0316816001600160a01b031614610b175760405162461bcd60e51b815260040180806020018281038252602f815260200180613518602f913960400191505060405180910390fd5b6109ed82826125f9565b6205a66d81565b6001600160a01b03166000908152600f602052604090206002015490565b600c5481565b8080610b566124a1565b1115610b97576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b610b9f6124a1565b60035411610be2576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b336000610bed6124a1565b90506000610bfb8383612668565b50915050610c0761338a565b610c17828863ffffffff6128c716565b9050610c24848289612940565b50505050505050565b8080610c376124a1565b1115610c78576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b610c806124a1565b60035411610cc3576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b6000610ccd6124a1565b9050336000610cdc8284612aed565b90506000610cec82600201612c66565b9050610cf661338a565b8715610ef85781881115610d51576040805162461bcd60e51b815260206004820152601b60248201527f416d6f756e7420697320686967686572207468616e207374616b650000000000604482015290519081900360640190fd5b60045467ffffffffffffffff16610e29576001600160a01b0384166000908152601060205260409020610d8f9060028501908a63ffffffff612c8016565b9050610da260078263ffffffff612ca516565b80516020808301516040805193845291830152805187926001600160a01b038816926000805160206134d883398151915292918290030190a38051602080830151604080519384529183015280516001600160a01b038716927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a2610ef3565b6001600160a01b0384166000908152600f6020908152604082206002810180546001810182559084529190922060045460039092020190610e7b90889067ffffffffffffffff1663ffffffff61242116565b8155610e9460028601600183018c63ffffffff612c8016565b9250610ea760098463ffffffff612ca516565b610eb7828463ffffffff612ca516565b80548351602080860151604080519384529183015280516001600160a01b038a16926000805160206134d883398151915292908290030190a350505b6110bc565b81610f07575050505050610955565b5060408051808201909152600283018054825260038401805460208401526000918290555560045467ffffffffffffffff16610ffd576001600160a01b0384166000908152601060205260409020610f65908263ffffffff612ca516565b610f7660078263ffffffff612ca516565b80516020808301516040805193845291830152805187926001600160a01b038816926000805160206134d883398151915292918290030190a38051602080830151604080519384529183015280516001600160a01b038716927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a26110bc565b6001600160a01b0384166000908152600f602090815260408220600281018054600181018255908452919092206004546003909202019061104f90889067ffffffffffffffff1663ffffffff61242116565b8155825160018201556020830151600282015561107360098463ffffffff612ca516565b611083828463ffffffff612ca516565b805460018201546002830154604080519283526020830191909152805133926000805160206134d883398151915292908290030190a350505b5050505050505050565b80806110d06124a1565b1115611111576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b611119612490565b611163576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156111ae57600080fd5b505afa1580156111c2573d6000803e3d6000fd5b505050506040513d60208110156111d857600080fd5b50516005546006549192506000916111f59163ffffffff61242116565b90506000611209838363ffffffff612cdf16565b6001546040805163a9059cbb60e01b81526001600160a01b038a8116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b15801561126157600080fd5b505af1158015611275573d6000803e3d6000fd5b505050506040513d602081101561128b57600080fd5b50516112de576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e6473206f6e20636f6e74722e20616464722e604482015290519081900360640190fd5b604080516001600160a01b03881681526020810183905281517f7f66376a5ef2f39ab4ee2ee6e400606624e66929dba5d82df5b14dd0070a8a87929181900390910190a1505050505050565b6001600160a01b0381166000908152600f602052604090206002018054606091829182919080156114b4578067ffffffffffffffff8111801561136c57600080fd5b50604051908082528060200260200182016040528015611396578160200160208202803683370190505b5094508067ffffffffffffffff811180156113b057600080fd5b506040519080825280602002602001820160405280156113da578160200160208202803683370190505b5093508067ffffffffffffffff811180156113f457600080fd5b5060405190808252806020026020018201604052801561141e578160200160208202803683370190505b50925060005b818110156114b257600083828154811061143a57fe5b906000526020600020906003020190506000816001019050806000015488848151811061146357fe5b602002602001018181525050806001015487848151811061148057fe5b602002602001018181525050816000015486848151811061149d57fe5b60209081029190910101525050600101611424565b505b50509193909250565b80806114c76124a1565b1115611508576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b6115106124a1565b60035411611553576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b33600061155e6124a1565b9050600061156c8383612668565b5091505061157861338a565b81548082526000835561158e9085908390612940565b505050505050565b6010602052600090815260409020805460019091015482565b80806115b96124a1565b11156115fa576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b611602612490565b61164c576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b8361165b5760055493506116b2565b6005548411156116b2576040805162461bcd60e51b815260206004820152601f60248201527f416d6f756e7420686967686572207468616e207265776172647320706f6f6c00604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156116fd57600080fd5b505afa158015611711573d6000803e3d6000fd5b505050506040513d602081101561172757600080fd5b5051600654909150600090611742908763ffffffff61242116565b905081811115611799576040805162461bcd60e51b815260206004820152601760248201527f436f6e747261637420696e636f6e73697374656e63792e000000000000000000604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038881166004830152602482018a90529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156117ef57600080fd5b505af1158015611803573d6000803e3d6000fd5b505050506040513d602081101561181957600080fd5b505161186c576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e6473206f6e20636f6e74722e20616464722e604482015290519081900360640190fd5b600580548790039055604080516001600160a01b03871681526020810188905281517f8a652d32cc9efc0a4f0fc3708c9fb81d5a924a7b9af2a37c46e9e4910d0dc325929181900390910190a1505050505050565b80806118cb6124a1565b111561190c576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b6119146124a1565b60035411611957576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b600083116119ac576040805162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d75737420626520686967686572207468616e207a65726f00604482015290519081900360640190fd5b60006119b66124a1565b905060006119c43383612668565b5091505060006119d43384612aed565b90506119de61338a565b6119f283600284018963ffffffff612d2116565b9050611a0560078263ffffffff612d3316565b600182015481516020808401516040805193845291830152805133927f0fb741c5ad2cad8215be7b4cab4e3f202f907d4540668ebf954f8e742efd89cf92908290030190a350505050505050565b6000828152602081905260408120611a71908363ffffffff612d6116565b90505b92915050565b6000828152602081905260408120611a71908363ffffffff612d6d16565b8080611aa26124a1565b1115611ae3576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b611aeb612490565b611b35576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b611b3d6124a1565b6002541015611b93576040805162461bcd60e51b815260206004820152601b60248201527f4561726c696573742064656c657465206e6f7420726561636865640000000000604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611bde57600080fd5b505afa158015611bf2573d6000803e3d6000fd5b505050506040513d6020811015611c0857600080fd5b50516001546040805163a9059cbb60e01b81526001600160a01b03888116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b158015611c6257600080fd5b505af1158015611c76573d6000803e3d6000fd5b505050506040513d6020811015611c8c57600080fd5b5051611c9757600080fd5b6040517fe4dedc7f698868c432fb679313d1381b06601dfb7174d9b18b2e35378b67633390600090a1836001600160a01b0316ff5b600081565b601155565b6001600160a01b03166000908152600f6020526040902080546001909101549091565b600d602052600090815260409020805460019091015482565b60055490565b8080611d226124a1565b1115611d63576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b82611d6d57610955565b600154604080516323b872dd60e01b81523360048201523060248201526044810186905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b158015611dc757600080fd5b505af1158015611ddb573d6000803e3d6000fd5b505050506040513d6020811015611df157600080fd5b5051611e36576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b600554611e49908463ffffffff61242116565b600555604080513381526020810185905281517fb562e06b275d420e5848bb9083041a1c68466a478df92491b473ce99a4c68f68929181900390910190a1505050565b604080516c44454c45474154455f524f4c4560981b8152905190819003600d01902081565b6001600160a01b03166000908152600e60205260409020600281015460038201548254600190930154919390929190565b60075460085482565b6000818152602081905260408120611a7490612d82565b600082815260208190526040902060020154611f20906109a3612530565b610b175760405162461bcd60e51b81526004018080602001828103825260308152602001806134886030913960400191505060405180910390fd5b60115481565b8080611f6b6124a1565b1115611fac576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b611fb46124a1565b60035411611ff7576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b3360006120026124a1565b905060006120108383612668565b5091505061201c61338a565b60018201805460208301819052600090915561158e9085908390612940565b600954600a5482565b600b5481565b80806120546124a1565b1115612095576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b61209d6124a1565b600354116120e0576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b3360006120eb6124a1565b905060006120f98383612668565b5060408051808201909152815481526001820154602082015290925061212a9150849061212584612c66565b612940565b600060018201819055905550505050565b80806121456124a1565b1115612186576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b61218e6124a1565b600354116121d1576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b821580159061230657600154604080516323b872dd60e01b81523360048201523060248201526044810187905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561223457600080fd5b505af1158015612248573d6000803e3d6000fd5b505050506040513d602081101561225e57600080fd5b50516122a3576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b6006546122b6908563ffffffff61242116565b6006556007546122cc908563ffffffff61242116565b60075560408051858152905133917f7ff07ce9a287649537e4b012e45cf012d90228b12e2b56bb03515a6b5436fcdf919081900360200190a25b60006123106124a1565b9050600061231e3383612668565b50915050821561158e57805461233a908763ffffffff61242116565b90555050505050565b6001546001600160a01b031681565b808061235c6124a1565b111561239d576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b6123a5612490565b806123d75750604080516c44454c45474154455f524f4c4560981b8152905190819003600d0190206123d79033611a7a565b6124125760405162461bcd60e51b81526004018080602001828103825260248152602001806134646024913960400191505060405180910390fd5b61095583612d8d565b60035481565b600082820183811015611a71576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000611a71836001600160a01b038416612de3565b600061249c8133611a7a565b905090565b60115490565b600c5460408051808201909152806124bd6124a1565b815260209081018490526000838152600d82526040902082518155910151600191820155600c546124f39163ffffffff61242116565b600c5560408051838152905182917fbcd200f406c53d9438c6cdc2966a1e99c35f336588c95bc3639e539df21c2f53919081900360200190a25050565b3390565b6000828152602081905260409020612552908263ffffffff61247b16565b156109ed5761255f612530565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006125ad6124a1565b90508082106125bc57816125be565b805b600381905560408051918252517f68b095021b1f40fe513109f513c66692f0b3219aee674a69f4efc57badb8201d9181900360200190a15050565b6000828152602081905260409020612617908263ffffffff612e2d16565b156109ed57612624612530565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b61267061338a565b6001600160a01b0383166000908152600f6020908152604080832060109092528220919060028101825b81548110156127d7576126ab6133a4565b8282815481106126b757fe5b6000918252602091829020604080518082018252600390930290910180548352815180830190925260018101548252600201548184015291810191909152805190915088101561270a57506001016127d2565b60208101515187516127219163ffffffff61242116565b87526020808201518101519088015161273f9163ffffffff61242116565b60208801528254600019018281146127a05783818154811061275d57fe5b906000526020600020906003020184848154811061277757fe5b600091825260209091208254600390920201908155600180830154908201556002918201549101555b838054806127aa57fe5b6000828152602081206003600019909301928302018181556001810182905560020155905550505b61269a565b508054612811576001600160a01b0387166000908152600f60205260408120818155600181018290559061280e60028301826133c3565b50505b8451151580612824575060008560200151115b925082156128be578451602080870151604080519384529183015280516001600160a01b038a16927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a261288660098663ffffffff612d3316565b80541561289d5761289d828663ffffffff612d3316565b6128ae60078663ffffffff612ca516565b6128be848663ffffffff612ca516565b50509250925092565b6128cf61338a565b818360010154106129005760018301546128ef908363ffffffff612cdf16565b600184015560208101829052611a74565b600183015461291690839063ffffffff612cdf16565b808252835461292a9163ffffffff612cdf16565b8355600190920180546020840152600090555090565b801561095557816020015160055410156129a1576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e647320696e207265776172647320706f6f6c604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156129f757600080fd5b505af1158015612a0b573d6000803e3d6000fd5b505050506040513d6020811015612a2157600080fd5b5051612a66576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b6020820151600554612a7d9163ffffffff612cdf16565b6005558151600654612a949163ffffffff612cdf16565b600655612aa860078363ffffffff612d3316565b81516020808401516040805193845291830152805133927ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56892908290030190a2505050565b6001600160a01b0382166000908152600e6020526040812090612b1260028301612c66565b90508015612bf157815460018301545b600c54811015612bd3576000818152600d602052604090208054831015612b90576040805162461bcd60e51b815260206004820152601860248201527f73696e6365426c6f636b20696e636f6e73697374656e63790000000000000000604482015290519081900360640190fd5b600c5486906001840190811015612bb3576000818152600d602052604090205491505b612bc4868460010154878503612e42565b95509093505050600101612b22565b506002830154612bea90839063ffffffff612cdf16565b6003840155505b828255600c54612c02576000612c09565b6001600c54035b600183018190556002830154600384015460408051928352602083019190915280516001600160a01b038816927f6b6b43cdaf8f2ae06bdc6f6be433bb374b703ce8c88db4adce9dd8aefe44fe6d92908290030190a35092915050565b60018101548154600091611a74919063ffffffff61242116565b612c8861338a565b612c9284836128c7565b9050612c9e8382612ca5565b9392505050565b80518254612cb89163ffffffff61242116565b825560208101516001830154612cd39163ffffffff61242116565b82600101819055505050565b6000611a7183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612e82565b612d2961338a565b612c928483612f19565b80518254612d469163ffffffff612cdf16565b825560208101516001830154612cd39163ffffffff612cdf16565b6000611a718383612f85565b6000611a71836001600160a01b038416612fe9565b6000611a7482613001565b6004805467ffffffffffffffff831667ffffffffffffffff19909116811790915560408051918252517f6b24ea7c7a8ce7fd2e6a6cb675dbabcd38a90f83ddd581c4435610ce90456e8f9181900360200190a150565b6000612def8383612fe9565b612e2557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611a74565b506000611a74565b6000611a71836001600160a01b038416613005565b6000612e7a612e74612e6e612e5760016130cb565b612e6987670de0b6b3a76400006130e9565b613120565b84613154565b856131a2565b949350505050565b60008184841115612f115760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612ed6578181015183820152602001612ebe565b50505050905090810190601f168015612f035780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b612f2161338a565b82548211612f45578254612f3b908363ffffffff612cdf16565b8355818152611a74565b8254612f5890839063ffffffff612cdf16565b602082018190526001840154612f739163ffffffff612cdf16565b60018401558254815260009092555090565b81546000908210612fc75760405162461bcd60e51b81526004018080602001828103825260228152602001806134136022913960400191505060405180910390fd5b826000018281548110612fd657fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b600081815260018301602052604081205480156130c1578354600019808301919081019060009087908390811061303857fe5b906000526020600020015490508087600001848154811061305557fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061308557fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611a74565b6000915050611a74565b6000677fffffffffffffff8211156130e257600080fd5b5060401b90565b6000816130f557600080fd5b6000613101848461320a565b905060016001607f1b036001600160801b0382161115611a7157600080fd5b6000600f83810b9083900b0160016001607f1b0319811280159061314b575060016001607f1b038113155b611a7157600080fd5b600061316060016130cb565b90505b8115611a745760018216156131895761317c8184613354565b905060018203915061319d565b6131938384613354565b9250600182901c91505b613163565b6000816131b157506000611a74565b600083600f0b12156131c257600080fd5b600f83900b6001600160801b038316810260401c90608084901c026001600160c01b038111156131f157600080fd5b60401b811981111561320257600080fd5b019392505050565b60008161321657600080fd5b60006001600160c01b03841161323b5782604085901b8161323357fe5b049050613340565b60c084811c6401000000008110613254576020918201911c5b620100008110613266576010918201911c5b6101008110613277576008918201911c5b60108110613287576004918201911c5b60048110613297576002918201911c5b600281106132a6576001820191505b60bf820360018603901c6001018260ff0387901b816132c157fe5b0492506001600160801b038311156132d857600080fd5b608085901c83026001600160801b038616840260c088901c604089901b82811015613304576001820391505b608084901b9290038281101561331b576001820391505b829003608084901c821461332b57fe5b88818161333457fe5b04870196505050505050505b6001600160801b03811115611a7157600080fd5b6000600f83810b9083900b0260401d60016001607f1b0319811280159061314b575060016001607f1b03811315611a7157600080fd5b604051806040016040528060008152602001600081525090565b6040518060400160405280600081526020016133be61338a565b905290565b50805460008255600302906000526020600020908101906133e491906133e7565b50565b61088391905b8082111561340e5760008082556001820181905560028201556003016133ed565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7443616c6c6572206973206e656974686572206f776e6572206e6f722064656c6567617465416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b655472616e73616374696f6e2065787069726564000000000000000000000000005bfe1e16d75ca1fa001989652cd88c5b8ee8a59b5df6df99836337def4d1c82d436f6e747261637420686173206265656e207061757365640000000000000000416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220a11ad47fd9010363cdae40ef8c0303628df1257425d726b9eb6f18f5410995da64736f6c63430006080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102745760003560e01c806391d1485411610151578063ca15c873116100c3578063d9d8e78311610087578063d9d8e783146107fa578063dca2aa5c14610802578063e2bbb1581461081f578063ecd0c0c314610842578063f0895e521461084a578063f1209ef71461087757610274565b8063ca15c87314610784578063d547741f146107a1578063d7e0e975146107cd578063d8cd3999146107d5578063d9b202c9146107f257610274565b8063aa700ff211610115578063aa700ff2146106e0578063adf55101146106fd578063ba92a4c514610705578063c0ba241b14610728578063c30f75cf14610730578063c8984ab21461077c57610274565b806391d14854146106295780639608df4b14610669578063a217fddf14610695578063a8c3c8501461069d578063a8f1b4c4146106ba57610274565b806340e97903116101ea5780635f208f34116101ae5780635f208f3414610435578063658e28a41461053957806367ce50c01461055657806368bccfcf1461059557806388cedd5e146105c75780639010d07c146105ea57610274565b806340e97903146103955780634164b001146103bb578063441a3e70146103c357806352885d8d146103e657806353e052ac1461040957610274565b8063292911fb1161023c578063292911fb146103025780632f2ff15d1461030a57806332a1bd7014610336578063347908df1461033e57806336568abe14610361578063372646bb1461038d57610274565b8063085313ec146102795780630c450f9d14610293578063133840391461029b578063248a9ca3146102c05780632514c50a146102dd575b600080fd5b61028161087f565b60408051918252519081900360200190f35b610281610886565b6102be600480360360408110156102b157600080fd5b508035906020013561088c565b005b610281600480360360208110156102d657600080fd5b503561095a565b6102e561096f565b6040805167ffffffffffffffff9092168252519081900360200190f35b61028161097f565b6102be6004803603604081101561032057600080fd5b50803590602001356001600160a01b0316610985565b6102816109f1565b6102be6004803603604081101561035457600080fd5b50803590602001356109f7565b6102be6004803603604081101561037757600080fd5b50803590602001356001600160a01b0316610ac0565b610281610b21565b610281600480360360208110156103ab57600080fd5b50356001600160a01b0316610b28565b610281610b46565b6102be600480360360408110156103d957600080fd5b5080359060200135610b4c565b6102be600480360360408110156103fc57600080fd5b5080359060200135610c2d565b6102be6004803603604081101561041f57600080fd5b506001600160a01b0381351690602001356110c6565b61045b6004803603602081101561044b57600080fd5b50356001600160a01b031661132a565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156104a357818101518382015260200161048b565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156104e25781810151838201526020016104ca565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610521578181015183820152602001610509565b50505050905001965050505050505060405180910390f35b6102be6004803603602081101561054f57600080fd5b50356114bd565b61057c6004803603602081101561056c57600080fd5b50356001600160a01b0316611596565b6040805192835260208301919091528051918290030190f35b6102be600480360360608110156105ab57600080fd5b508035906001600160a01b0360208201351690604001356115af565b6102be600480360360408110156105dd57600080fd5b50803590602001356118c1565b61060d6004803603604081101561060057600080fd5b5080359060200135611a53565b604080516001600160a01b039092168252519081900360200190f35b6106556004803603604081101561063f57600080fd5b50803590602001356001600160a01b0316611a7a565b604080519115158252519081900360200190f35b6102be6004803603604081101561067f57600080fd5b506001600160a01b038135169060200135611a98565b610281611ccc565b6102be600480360360208110156106b357600080fd5b5035611cd1565b61057c600480360360208110156106d057600080fd5b50356001600160a01b0316611cd6565b61057c600480360360208110156106f657600080fd5b5035611cf9565b610281611d12565b6102be6004803603604081101561071b57600080fd5b5080359060200135611d18565b610281611e8c565b6107566004803603602081101561074657600080fd5b50356001600160a01b0316611eb1565b604080519485526020850193909352838301919091526060830152519081900360800190f35b61057c611ee2565b6102816004803603602081101561079a57600080fd5b5035611eeb565b6102be600480360360408110156107b757600080fd5b50803590602001356001600160a01b0316611f02565b610281611f5b565b6102be600480360360208110156107eb57600080fd5b5035611f61565b61057c61203b565b610281612044565b6102be6004803603602081101561081857600080fd5b503561204a565b6102be6004803603604081101561083557600080fd5b508035906020013561213b565b61060d612343565b6102be6004803603604081101561086057600080fd5b5067ffffffffffffffff8135169060200135612352565b61028161241b565b6002545b90565b60055481565b610894612490565b806108c65750604080516c44454c45474154455f524f4c4560981b8152905190819003600d0190206108c69033611a7a565b6109015760405162461bcd60e51b81526004018080602001828103825260248152602001806134646024913960400191505060405180910390fd5b808061090b6124a1565b111561094c576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b610955836124a7565b505050565b60009081526020819052604090206002015490565b60045467ffffffffffffffff1681565b60065481565b6000828152602081905260409020600201546109a8906109a3612530565b611a7a565b6109e35760405162461bcd60e51b815260040180806020018281038252602f815260200180613435602f913960400191505060405180910390fd5b6109ed8282612534565b5050565b60025481565b8080610a016124a1565b1115610a42576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b610a4a612490565b80610a7c5750604080516c44454c45474154455f524f4c4560981b8152905190819003600d019020610a7c9033611a7a565b610ab75760405162461bcd60e51b81526004018080602001828103825260248152602001806134646024913960400191505060405180910390fd5b610955836125a3565b610ac8612530565b6001600160a01b0316816001600160a01b031614610b175760405162461bcd60e51b815260040180806020018281038252602f815260200180613518602f913960400191505060405180910390fd5b6109ed82826125f9565b6205a66d81565b6001600160a01b03166000908152600f602052604090206002015490565b600c5481565b8080610b566124a1565b1115610b97576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b610b9f6124a1565b60035411610be2576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b336000610bed6124a1565b90506000610bfb8383612668565b50915050610c0761338a565b610c17828863ffffffff6128c716565b9050610c24848289612940565b50505050505050565b8080610c376124a1565b1115610c78576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b610c806124a1565b60035411610cc3576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b6000610ccd6124a1565b9050336000610cdc8284612aed565b90506000610cec82600201612c66565b9050610cf661338a565b8715610ef85781881115610d51576040805162461bcd60e51b815260206004820152601b60248201527f416d6f756e7420697320686967686572207468616e207374616b650000000000604482015290519081900360640190fd5b60045467ffffffffffffffff16610e29576001600160a01b0384166000908152601060205260409020610d8f9060028501908a63ffffffff612c8016565b9050610da260078263ffffffff612ca516565b80516020808301516040805193845291830152805187926001600160a01b038816926000805160206134d883398151915292918290030190a38051602080830151604080519384529183015280516001600160a01b038716927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a2610ef3565b6001600160a01b0384166000908152600f6020908152604082206002810180546001810182559084529190922060045460039092020190610e7b90889067ffffffffffffffff1663ffffffff61242116565b8155610e9460028601600183018c63ffffffff612c8016565b9250610ea760098463ffffffff612ca516565b610eb7828463ffffffff612ca516565b80548351602080860151604080519384529183015280516001600160a01b038a16926000805160206134d883398151915292908290030190a350505b6110bc565b81610f07575050505050610955565b5060408051808201909152600283018054825260038401805460208401526000918290555560045467ffffffffffffffff16610ffd576001600160a01b0384166000908152601060205260409020610f65908263ffffffff612ca516565b610f7660078263ffffffff612ca516565b80516020808301516040805193845291830152805187926001600160a01b038816926000805160206134d883398151915292918290030190a38051602080830151604080519384529183015280516001600160a01b038716927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a26110bc565b6001600160a01b0384166000908152600f602090815260408220600281018054600181018255908452919092206004546003909202019061104f90889067ffffffffffffffff1663ffffffff61242116565b8155825160018201556020830151600282015561107360098463ffffffff612ca516565b611083828463ffffffff612ca516565b805460018201546002830154604080519283526020830191909152805133926000805160206134d883398151915292908290030190a350505b5050505050505050565b80806110d06124a1565b1115611111576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b611119612490565b611163576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156111ae57600080fd5b505afa1580156111c2573d6000803e3d6000fd5b505050506040513d60208110156111d857600080fd5b50516005546006549192506000916111f59163ffffffff61242116565b90506000611209838363ffffffff612cdf16565b6001546040805163a9059cbb60e01b81526001600160a01b038a8116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b15801561126157600080fd5b505af1158015611275573d6000803e3d6000fd5b505050506040513d602081101561128b57600080fd5b50516112de576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e6473206f6e20636f6e74722e20616464722e604482015290519081900360640190fd5b604080516001600160a01b03881681526020810183905281517f7f66376a5ef2f39ab4ee2ee6e400606624e66929dba5d82df5b14dd0070a8a87929181900390910190a1505050505050565b6001600160a01b0381166000908152600f602052604090206002018054606091829182919080156114b4578067ffffffffffffffff8111801561136c57600080fd5b50604051908082528060200260200182016040528015611396578160200160208202803683370190505b5094508067ffffffffffffffff811180156113b057600080fd5b506040519080825280602002602001820160405280156113da578160200160208202803683370190505b5093508067ffffffffffffffff811180156113f457600080fd5b5060405190808252806020026020018201604052801561141e578160200160208202803683370190505b50925060005b818110156114b257600083828154811061143a57fe5b906000526020600020906003020190506000816001019050806000015488848151811061146357fe5b602002602001018181525050806001015487848151811061148057fe5b602002602001018181525050816000015486848151811061149d57fe5b60209081029190910101525050600101611424565b505b50509193909250565b80806114c76124a1565b1115611508576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b6115106124a1565b60035411611553576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b33600061155e6124a1565b9050600061156c8383612668565b5091505061157861338a565b81548082526000835561158e9085908390612940565b505050505050565b6010602052600090815260409020805460019091015482565b80806115b96124a1565b11156115fa576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b611602612490565b61164c576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b8361165b5760055493506116b2565b6005548411156116b2576040805162461bcd60e51b815260206004820152601f60248201527f416d6f756e7420686967686572207468616e207265776172647320706f6f6c00604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156116fd57600080fd5b505afa158015611711573d6000803e3d6000fd5b505050506040513d602081101561172757600080fd5b5051600654909150600090611742908763ffffffff61242116565b905081811115611799576040805162461bcd60e51b815260206004820152601760248201527f436f6e747261637420696e636f6e73697374656e63792e000000000000000000604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038881166004830152602482018a90529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156117ef57600080fd5b505af1158015611803573d6000803e3d6000fd5b505050506040513d602081101561181957600080fd5b505161186c576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e6473206f6e20636f6e74722e20616464722e604482015290519081900360640190fd5b600580548790039055604080516001600160a01b03871681526020810188905281517f8a652d32cc9efc0a4f0fc3708c9fb81d5a924a7b9af2a37c46e9e4910d0dc325929181900390910190a1505050505050565b80806118cb6124a1565b111561190c576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b6119146124a1565b60035411611957576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b600083116119ac576040805162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d75737420626520686967686572207468616e207a65726f00604482015290519081900360640190fd5b60006119b66124a1565b905060006119c43383612668565b5091505060006119d43384612aed565b90506119de61338a565b6119f283600284018963ffffffff612d2116565b9050611a0560078263ffffffff612d3316565b600182015481516020808401516040805193845291830152805133927f0fb741c5ad2cad8215be7b4cab4e3f202f907d4540668ebf954f8e742efd89cf92908290030190a350505050505050565b6000828152602081905260408120611a71908363ffffffff612d6116565b90505b92915050565b6000828152602081905260408120611a71908363ffffffff612d6d16565b8080611aa26124a1565b1115611ae3576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b611aeb612490565b611b35576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b611b3d6124a1565b6002541015611b93576040805162461bcd60e51b815260206004820152601b60248201527f4561726c696573742064656c657465206e6f7420726561636865640000000000604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611bde57600080fd5b505afa158015611bf2573d6000803e3d6000fd5b505050506040513d6020811015611c0857600080fd5b50516001546040805163a9059cbb60e01b81526001600160a01b03888116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b158015611c6257600080fd5b505af1158015611c76573d6000803e3d6000fd5b505050506040513d6020811015611c8c57600080fd5b5051611c9757600080fd5b6040517fe4dedc7f698868c432fb679313d1381b06601dfb7174d9b18b2e35378b67633390600090a1836001600160a01b0316ff5b600081565b601155565b6001600160a01b03166000908152600f6020526040902080546001909101549091565b600d602052600090815260409020805460019091015482565b60055490565b8080611d226124a1565b1115611d63576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b82611d6d57610955565b600154604080516323b872dd60e01b81523360048201523060248201526044810186905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b158015611dc757600080fd5b505af1158015611ddb573d6000803e3d6000fd5b505050506040513d6020811015611df157600080fd5b5051611e36576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b600554611e49908463ffffffff61242116565b600555604080513381526020810185905281517fb562e06b275d420e5848bb9083041a1c68466a478df92491b473ce99a4c68f68929181900390910190a1505050565b604080516c44454c45474154455f524f4c4560981b8152905190819003600d01902081565b6001600160a01b03166000908152600e60205260409020600281015460038201548254600190930154919390929190565b60075460085482565b6000818152602081905260408120611a7490612d82565b600082815260208190526040902060020154611f20906109a3612530565b610b175760405162461bcd60e51b81526004018080602001828103825260308152602001806134886030913960400191505060405180910390fd5b60115481565b8080611f6b6124a1565b1115611fac576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b611fb46124a1565b60035411611ff7576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b3360006120026124a1565b905060006120108383612668565b5091505061201c61338a565b60018201805460208301819052600090915561158e9085908390612940565b600954600a5482565b600b5481565b80806120546124a1565b1115612095576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b61209d6124a1565b600354116120e0576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b3360006120eb6124a1565b905060006120f98383612668565b5060408051808201909152815481526001820154602082015290925061212a9150849061212584612c66565b612940565b600060018201819055905550505050565b80806121456124a1565b1115612186576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b61218e6124a1565b600354116121d1576040805162461bcd60e51b815260206004820152601860248201526000805160206134f8833981519152604482015290519081900360640190fd5b821580159061230657600154604080516323b872dd60e01b81523360048201523060248201526044810187905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561223457600080fd5b505af1158015612248573d6000803e3d6000fd5b505050506040513d602081101561225e57600080fd5b50516122a3576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b6006546122b6908563ffffffff61242116565b6006556007546122cc908563ffffffff61242116565b60075560408051858152905133917f7ff07ce9a287649537e4b012e45cf012d90228b12e2b56bb03515a6b5436fcdf919081900360200190a25b60006123106124a1565b9050600061231e3383612668565b50915050821561158e57805461233a908763ffffffff61242116565b90555050505050565b6001546001600160a01b031681565b808061235c6124a1565b111561239d576040805162461bcd60e51b815260206004820152601360248201526000805160206134b8833981519152604482015290519081900360640190fd5b6123a5612490565b806123d75750604080516c44454c45474154455f524f4c4560981b8152905190819003600d0190206123d79033611a7a565b6124125760405162461bcd60e51b81526004018080602001828103825260248152602001806134646024913960400191505060405180910390fd5b61095583612d8d565b60035481565b600082820183811015611a71576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000611a71836001600160a01b038416612de3565b600061249c8133611a7a565b905090565b60115490565b600c5460408051808201909152806124bd6124a1565b815260209081018490526000838152600d82526040902082518155910151600191820155600c546124f39163ffffffff61242116565b600c5560408051838152905182917fbcd200f406c53d9438c6cdc2966a1e99c35f336588c95bc3639e539df21c2f53919081900360200190a25050565b3390565b6000828152602081905260409020612552908263ffffffff61247b16565b156109ed5761255f612530565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006125ad6124a1565b90508082106125bc57816125be565b805b600381905560408051918252517f68b095021b1f40fe513109f513c66692f0b3219aee674a69f4efc57badb8201d9181900360200190a15050565b6000828152602081905260409020612617908263ffffffff612e2d16565b156109ed57612624612530565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b61267061338a565b6001600160a01b0383166000908152600f6020908152604080832060109092528220919060028101825b81548110156127d7576126ab6133a4565b8282815481106126b757fe5b6000918252602091829020604080518082018252600390930290910180548352815180830190925260018101548252600201548184015291810191909152805190915088101561270a57506001016127d2565b60208101515187516127219163ffffffff61242116565b87526020808201518101519088015161273f9163ffffffff61242116565b60208801528254600019018281146127a05783818154811061275d57fe5b906000526020600020906003020184848154811061277757fe5b600091825260209091208254600390920201908155600180830154908201556002918201549101555b838054806127aa57fe5b6000828152602081206003600019909301928302018181556001810182905560020155905550505b61269a565b508054612811576001600160a01b0387166000908152600f60205260408120818155600181018290559061280e60028301826133c3565b50505b8451151580612824575060008560200151115b925082156128be578451602080870151604080519384529183015280516001600160a01b038a16927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a261288660098663ffffffff612d3316565b80541561289d5761289d828663ffffffff612d3316565b6128ae60078663ffffffff612ca516565b6128be848663ffffffff612ca516565b50509250925092565b6128cf61338a565b818360010154106129005760018301546128ef908363ffffffff612cdf16565b600184015560208101829052611a74565b600183015461291690839063ffffffff612cdf16565b808252835461292a9163ffffffff612cdf16565b8355600190920180546020840152600090555090565b801561095557816020015160055410156129a1576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e647320696e207265776172647320706f6f6c604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156129f757600080fd5b505af1158015612a0b573d6000803e3d6000fd5b505050506040513d6020811015612a2157600080fd5b5051612a66576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b6020820151600554612a7d9163ffffffff612cdf16565b6005558151600654612a949163ffffffff612cdf16565b600655612aa860078363ffffffff612d3316565b81516020808401516040805193845291830152805133927ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56892908290030190a2505050565b6001600160a01b0382166000908152600e6020526040812090612b1260028301612c66565b90508015612bf157815460018301545b600c54811015612bd3576000818152600d602052604090208054831015612b90576040805162461bcd60e51b815260206004820152601860248201527f73696e6365426c6f636b20696e636f6e73697374656e63790000000000000000604482015290519081900360640190fd5b600c5486906001840190811015612bb3576000818152600d602052604090205491505b612bc4868460010154878503612e42565b95509093505050600101612b22565b506002830154612bea90839063ffffffff612cdf16565b6003840155505b828255600c54612c02576000612c09565b6001600c54035b600183018190556002830154600384015460408051928352602083019190915280516001600160a01b038816927f6b6b43cdaf8f2ae06bdc6f6be433bb374b703ce8c88db4adce9dd8aefe44fe6d92908290030190a35092915050565b60018101548154600091611a74919063ffffffff61242116565b612c8861338a565b612c9284836128c7565b9050612c9e8382612ca5565b9392505050565b80518254612cb89163ffffffff61242116565b825560208101516001830154612cd39163ffffffff61242116565b82600101819055505050565b6000611a7183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612e82565b612d2961338a565b612c928483612f19565b80518254612d469163ffffffff612cdf16565b825560208101516001830154612cd39163ffffffff612cdf16565b6000611a718383612f85565b6000611a71836001600160a01b038416612fe9565b6000611a7482613001565b6004805467ffffffffffffffff831667ffffffffffffffff19909116811790915560408051918252517f6b24ea7c7a8ce7fd2e6a6cb675dbabcd38a90f83ddd581c4435610ce90456e8f9181900360200190a150565b6000612def8383612fe9565b612e2557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611a74565b506000611a74565b6000611a71836001600160a01b038416613005565b6000612e7a612e74612e6e612e5760016130cb565b612e6987670de0b6b3a76400006130e9565b613120565b84613154565b856131a2565b949350505050565b60008184841115612f115760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612ed6578181015183820152602001612ebe565b50505050905090810190601f168015612f035780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b612f2161338a565b82548211612f45578254612f3b908363ffffffff612cdf16565b8355818152611a74565b8254612f5890839063ffffffff612cdf16565b602082018190526001840154612f739163ffffffff612cdf16565b60018401558254815260009092555090565b81546000908210612fc75760405162461bcd60e51b81526004018080602001828103825260228152602001806134136022913960400191505060405180910390fd5b826000018281548110612fd657fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b600081815260018301602052604081205480156130c1578354600019808301919081019060009087908390811061303857fe5b906000526020600020015490508087600001848154811061305557fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061308557fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611a74565b6000915050611a74565b6000677fffffffffffffff8211156130e257600080fd5b5060401b90565b6000816130f557600080fd5b6000613101848461320a565b905060016001607f1b036001600160801b0382161115611a7157600080fd5b6000600f83810b9083900b0160016001607f1b0319811280159061314b575060016001607f1b038113155b611a7157600080fd5b600061316060016130cb565b90505b8115611a745760018216156131895761317c8184613354565b905060018203915061319d565b6131938384613354565b9250600182901c91505b613163565b6000816131b157506000611a74565b600083600f0b12156131c257600080fd5b600f83900b6001600160801b038316810260401c90608084901c026001600160c01b038111156131f157600080fd5b60401b811981111561320257600080fd5b019392505050565b60008161321657600080fd5b60006001600160c01b03841161323b5782604085901b8161323357fe5b049050613340565b60c084811c6401000000008110613254576020918201911c5b620100008110613266576010918201911c5b6101008110613277576008918201911c5b60108110613287576004918201911c5b60048110613297576002918201911c5b600281106132a6576001820191505b60bf820360018603901c6001018260ff0387901b816132c157fe5b0492506001600160801b038311156132d857600080fd5b608085901c83026001600160801b038616840260c088901c604089901b82811015613304576001820391505b608084901b9290038281101561331b576001820391505b829003608084901c821461332b57fe5b88818161333457fe5b04870196505050505050505b6001600160801b03811115611a7157600080fd5b6000600f83810b9083900b0260401d60016001607f1b0319811280159061314b575060016001607f1b03811315611a7157600080fd5b604051806040016040528060008152602001600081525090565b6040518060400160405280600081526020016133be61338a565b905290565b50805460008255600302906000526020600020908101906133e491906133e7565b50565b61088391905b8082111561340e5760008082556001820181905560028201556003016133ed565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7443616c6c6572206973206e656974686572206f776e6572206e6f722064656c6567617465416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b655472616e73616374696f6e2065787069726564000000000000000000000000005bfe1e16d75ca1fa001989652cd88c5b8ee8a59b5df6df99836337def4d1c82d436f6e747261637420686173206265656e207061757365640000000000000000416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220a11ad47fd9010363cdae40ef8c0303628df1257425d726b9eb6f18f5410995da64736f6c63430006080033",
  "immutableReferences": {},
  "sourceMap": "871:733:7:-:0;;;943:447;5:9:-1;2:2;;;27:1;24;17:12;2:2;943:447:7;;;;;;;;;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;943:447:7;;;;;;;;;;;;;;;;;;;;;;;7175:42:6;1762:4:9;7206:10:6;-1:-1:-1;;;;;7175:10:6;:42;:::i;:::-;7228:6;:29;;-1:-1:-1;;;;;;7228:29:6;-1:-1:-1;;;;;7228:29:6;;;;;7285:47;4527:6;7285:17;:15;:17::i;:::-;:21;;;;;;:47;;;;:::i;:::-;7267:15;:65;7657:37;7675:18;-1:-1:-1;;;;;7657:17:6;:37;:::i;:::-;7704:38;7721:20;-1:-1:-1;;;;;7704:16:6;:38;:::i;:::-;7752:46;7764:16;-1:-1:-1;;;;;7752:11:6;:46;:::i;:::-;6992:813;;;;943:447:7;;;;871:733;;6578:110:9;6656:25;6667:4;6673:7;-1:-1:-1;;;;;6656:10:9;:25;:::i;:::-;6578:110;;:::o;1397:103:7:-;1481:12;;1397:103;:::o;874:176:10:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;-1:-1:-1;874:176:10;;;;;:::o;26705:154:6:-;26777:19;:35;;-1:-1:-1;;;;;26777:35:6;;-1:-1:-1;;;;;;26777:35:6;;;;;;;;26827:25;;;;;;;;;;;;;;;;26705:154;:::o;26196:390::-;26274:21;;26327:148;;;;;;;;;;26376:17;-1:-1:-1;;;;;26376:15:6;:17;:::i;:::-;26327:148;;;;;;;;;-1:-1:-1;26305:19:6;;;:14;:19;;;;;:170;;;;;;;;;;;;;26509:21;;:28;;:21;;:25;;;;;:28;;:::i;:::-;26485:21;:52;26553:26;;;;;;;;26569:3;;26553:26;;;;;;;;;;26196:390;;:::o;27124:255::-;27191:25;27219:17;-1:-1:-1;;;;;27219:15:6;:17;:::i;:::-;27191:45;;27281:17;27266:12;:32;:67;;27321:12;27266:67;;;27301:17;27266:67;27246:17;:87;;;27348:24;;;;;;;;;;;;;;;;27124:255;;:::o;7015:184:9:-;7088:6;:12;;;;;;;;;;;:33;;7113:7;;7088:24;;;;;:33;;:::i;:::-;7084:109;;;7169:12;-1:-1:-1;;;;;7169:10:9;:12;:::i;:::-;-1:-1:-1;;;;;7142:40:9;7160:7;-1:-1:-1;;;;;7142:40:9;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;4864:141:15:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:15;;-1:-1:-1;;;;;4957:4:15;:41;:::i;590:104:8:-;677:10;590:104;:::o;1611:404:15:-;1674:4;1695:21;1705:3;1710:5;-1:-1:-1;;;;;1695:9:15;:21;:::i;:::-;1690:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1732:11:15;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:15;1986:12;;3776:127;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;871:733:7:-;;;;;;;",
  "deployedSourceMap": "871:733:7:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;871:733:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;18099:104:6;;;:::i;:::-;;;;;;;;;;;;;;;;5604:34;;;:::i;8444:217::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;8444:217:6;;;;;;;:::i;:::-;;4272:112:9;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4272:112:9;;:::i;5443:33:6:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5771:38;;;:::i;4634:223:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4634:223:9;;;;;;-1:-1:-1;;;;;4634:223:9;;:::i;5364:30:6:-;;;:::i;21694:199::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;21694:199:6;;;;;;;:::i;5808:205:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5808:205:9;;;;;;-1:-1:-1;;;;;5808:205:9;;:::i;4476:57:6:-;;;:::i;18210:159::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;18210:159:6;-1:-1:-1;;;;;18210:159:6;;:::i;5976:36::-;;;:::i;9783:495::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;9783:495:6;;;;;;;:::i;14338:3640::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;14338:3640:6;;;;;;;:::i;23915:782::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;23915:782:6;;;;;;;;:::i;18891:847::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;18891:847:6;-1:-1:-1;;;;;18891:847:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18891:847:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18891:847:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18891:847:6;;;;;;;;;;;;;;;;;;;;;10413:529;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;10413:529:6;;:::i;6166:52::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6166:52:6;-1:-1:-1;;;;;6166:52:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;22162:1120;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;22162:1120:6;;;-1:-1:-1;;;;;22162:1120:6;;;;;;;;;;:::i;12281:1290::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;12281:1290:6;;;;;;;:::i;3955:136:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3955:136:9;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3955:136:9;;;;;;;;;;;;;;2940:137;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2940:137:9;;;;;;-1:-1:-1;;;;;2940:137:9;;:::i;:::-;;;;;;;;;;;;;;;;;;25021:449:6;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;25021:449:6;;;;;;;;:::i;1717:49:9:-;;;:::i;1507:95:7:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1507:95:7;;:::i;18376:277:6:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;18376:277:6;-1:-1:-1;;;;;18376:277:6;;:::i;6018:62::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6018:62:6;;:::i;17985:107::-;;;:::i;20608:438::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;20608:438:6;;;;;;;:::i;4404:66::-;;;:::i;19745:426::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;19745:426:6;-1:-1:-1;;;;;19745:426:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5815:45;;;:::i;3245:125:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3245:125:9;;:::i;5091:226::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5091:226:9;;;;;;-1:-1:-1;;;;;5091:226:9;;:::i;909:27:7:-;;;:::i;11077:564:6:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;11077:564:6;;:::i;5875:42::-;;;:::i;5933:37::-;;;:::i;11783:491::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;11783:491:6;;:::i;8668:833::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;8668:833:6;;;;;;;:::i;4590:20::-;;;:::i;21191:212::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;21191:212:6;;;;;;;;;:::i;5405:32::-;;;:::i;18099:104::-;18181:15;;18099:104;;:::o;5604:34::-;;;;:::o;8444:217::-;6446:10;:8;:10::i;:::-;:48;;;-1:-1:-1;4444:26:6;;;-1:-1:-1;;;4444:26:6;;;;;;;;;;;;6460:34;;6483:10;6460:7;:34::i;:::-;6438:97;;;;-1:-1:-1;;;6438:97:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8601:15:::1;6651;6630:17;:15;:17::i;:::-;:36;;6622:68;;;::::0;;-1:-1:-1;;;6622:68:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;::::1;;8632:22:::2;8649:4;8632:16;:22::i;:::-;6545:1:::1;8444:217:::0;;:::o;4272:112:9:-;4329:7;4355:12;;;;;;;;;;:22;;;;4272:112::o;5443:33:6:-;;;;;;:::o;5771:38::-;;;;:::o;4634:223:9:-;4725:6;:12;;;;;;;;;;:22;;;4717:45;;4749:12;:10;:12::i;:::-;4717:7;:45::i;:::-;4709:105;;;;-1:-1:-1;;;4709:105:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;5364:30:6:-;;;;:::o;21694:199::-;21807:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6446:10:::1;:8;:10::i;:::-;:48;;;-1:-1:-1::0;4444:26:6::1;::::0;;-1:-1:-1;;;4444:26:6;;;;;;;;::::1;::::0;;;6460:34:::1;::::0;6483:10:::1;6460:7;:34::i;:::-;6438:97;;;;-1:-1:-1::0;;;6438:97:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21861:25:::2;21873:12;21861:11;:25::i;5808:205:9:-:0;5905:12;:10;:12::i;:::-;-1:-1:-1;;;;;5894:23:9;:7;-1:-1:-1;;;;;5894:23:9;;5886:83;;;;-1:-1:-1;;;5886:83:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;4476:57:6:-;4527:6;4476:57;:::o;18210:159::-;-1:-1:-1;;;;;18328:20:6;18293:14;18328:20;;;:7;:20;;;;;:27;;:34;;18210:159::o;5976:36::-;;;;:::o;9783:495::-;9914:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6779:17:::1;:15;:17::i;:::-;6759;;:37;6751:74;;;::::0;;-1:-1:-1;;;6751:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6751:74:6;;;;;;;;;;;;;::::1;;9988:10:::2;9971:14;10029:17;:15;:17::i;:::-;10008:38;;10059:32;10096:37;10114:6;10122:10;10096:17;:37::i;:::-;10056:77;;;;10144:29;;:::i;:::-;10176:43;:9:::0;10212:6;10176:43:::2;:35;:43;:::i;:::-;10144:75;;10229:42;10247:6;10255:7;10264:6;10229:17;:42::i;:::-;6835:1;;;;9783:495:::0;;;:::o;14338:3640::-;14517:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6779:17:::1;:15;:17::i;:::-;6759;;:37;6751:74;;;::::0;;-1:-1:-1;;;6751:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6751:74:6;;;;;;;;;;;;;::::1;;14574:18:::2;14595:17;:15;:17::i;:::-;14574:38:::0;-1:-1:-1;14639:10:6::2;14622:14;14681:48;14639:10:::0;14574:38;14681:28:::2;:48::i;:::-;14659:70;;14740:23;14766;:5;:11;;:21;:23::i;:::-;14740:49;;14799:29;;:::i;:::-;14843:10:::0;;14839:3133:::2;;15599:15;15589:6;:25;;15581:65;;;::::0;;-1:-1:-1;;;15581:65:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;15665:19;::::0;::::2;;15661:1049;;-1:-1:-1::0;;;;;15762:18:6;::::2;;::::0;;;:10:::2;:18;::::0;;;;15719:70:::2;::::0;:11:::2;::::0;::::2;::::0;15782:6;15719:70:::2;:42;:70;:::i;:::-;15709:80:::0;-1:-1:-1;15807:37:6::2;:23;15709:80:::0;15807:37:::2;:28;:37;:::i;:::-;15899:17:::0;;15918:24:::2;::::0;;::::2;::::0;15867:76:::2;::::0;;;;;;;::::2;::::0;;;15887:10;;-1:-1:-1;;;;;15867:76:6;::::2;::::0;-1:-1:-1;;;;;;;;;;;15867:76:6;;;;;;;::::2;15992:17:::0;;16011:24:::2;::::0;;::::2;::::0;15966:70:::2;::::0;;;;;;;::::2;::::0;;;-1:-1:-1;;;;;15966:70:6;::::2;::::0;::::2;::::0;;;;;;;::::2;15661:1049;;;-1:-1:-1::0;;;;;16099:15:6;::::2;16075:21;16099:15:::0;;;:7:::2;:15;::::0;;;;;;16169:13:::2;::::0;::::2;27:10:-1::0;;16169:20:6::2;23:18:-1::0;::::2;45:23:::0;;16169:20:6;;;;;;;16256:19:::2;::::0;16169:20:::2;::::0;;::::2;;::::0;16241:35:::2;::::0;:10;;16256:19:::2;;16241:35;:14;:35;:::i;:::-;16207:69:::0;;16304:72:::2;:11;::::0;::::2;16347:20;::::0;::::2;16369:6:::0;16304:72:::2;:42;:72;:::i;:::-;16294:82:::0;-1:-1:-1;16395:34:6::2;:20;16294:82:::0;16395:34:::2;:25;:34;:::i;:::-;16447:30;:6:::0;16469:7;16447:30:::2;:21;:30;:::i;:::-;16618:31:::0;;16651:17;;16670:24:::2;::::0;;::::2;::::0;16598:97:::2;::::0;;;;;;;::::2;::::0;;;-1:-1:-1;;;;;16598:97:6;::::2;::::0;-1:-1:-1;;;;;;;;;;;16598:97:6;;;;;;;::::2;15661:1049;;;14839:3133;;;16744:20:::0;16740:108:::2;;16827:7;;;;;;;16740:108;-1:-1:-1::0;16862:21:6::2;::::0;;;;::::2;::::0;;;16872:11:::2;::::0;::::2;16862:21:::0;;;;;;;;;::::2;::::0;::::2;::::0;-1:-1:-1;16897:25:6;;;;16936:32;16987:19:::2;::::0;::::2;;16983:979;;-1:-1:-1::0;;;;;17031:18:6;::::2;;::::0;;;:10:::2;:18;::::0;;;;:32:::2;::::0;17055:7;17031:32:::2;:23;:32;:::i;:::-;17081:37;:23;17110:7:::0;17081:37:::2;:28;:37;:::i;:::-;17173:17:::0;;17192:24:::2;::::0;;::::2;::::0;17141:76:::2;::::0;;;;;;;::::2;::::0;;;17161:10;;-1:-1:-1;;;;;17141:76:6;::::2;::::0;-1:-1:-1;;;;;;;;;;;17141:76:6;;;;;;;::::2;17266:17:::0;;17285:24:::2;::::0;;::::2;::::0;17240:70:::2;::::0;;;;;;;::::2;::::0;;;-1:-1:-1;;;;;17240:70:6;::::2;::::0;::::2;::::0;;;;;;;::::2;16983:979;;;-1:-1:-1::0;;;;;17373:15:6;::::2;17349:21;17373:15:::0;;;:7:::2;:15;::::0;;;;;;17443:13:::2;::::0;::::2;27:10:-1::0;;17443:20:6::2;23:18:-1::0;::::2;45:23:::0;;17443:20:6;;;;;;;17530:19:::2;::::0;17443:20:::2;::::0;;::::2;;::::0;17515:35:::2;::::0;:10;;17530:19:::2;;17515:35;:14;:35;:::i;:::-;17481:69:::0;;17568:30;;:20:::2;::::0;::::2;:30:::0;::::2;::::0;::::2;::::0;;;;;17617:34:::2;:20;17591:7:::0;17617:34:::2;:25;:34;:::i;:::-;17669:30;:6:::0;17691:7;17669:30:::2;:21;:30;:::i;:::-;17844:31:::0;;17877:20:::2;::::0;::::2;:30:::0;17909:37;;;;17820:127:::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;;17832:10:::2;::::0;-1:-1:-1;;;;;;;;;;;17820:127:6;;;;;;;::::2;16983:979;;;6835:1;;;;;14338:3640:::0;;;:::o;23915:782::-;24047:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6298:10:::1;:8;:10::i;:::-;6290:45;;;::::0;;-1:-1:-1;;;6290:45:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6290:45:6;;;;;;;;;;;;;::::1;;24124:6:::2;::::0;:31:::2;::::0;;-1:-1:-1;;;24124:31:6;;24149:4:::2;24124:31;::::0;::::2;::::0;;;24098:23:::2;::::0;-1:-1:-1;;;;;24124:6:6::2;::::0;:16:::2;::::0;:31;;;;;::::2;::::0;;;;;;;;:6;:31;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;24124:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;24124:31:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;24124:31:6;24230:19:::2;::::0;24202:23:::2;::::0;24124:31;;-1:-1:-1;24165:34:6::2;::::0;24202:48:::2;::::0;::::2;:27;:48;:::i;:::-;24165:85:::0;-1:-1:-1;24456:20:6::2;24479:47;:15:::0;24165:85;24479:47:::2;:19;:47;:::i;:::-;24544:6;::::0;:44:::2;::::0;;-1:-1:-1;;;24544:44:6;;-1:-1:-1;;;;;24544:44:6;;::::2;;::::0;::::2;::::0;;;;;;;;;24456:70;;-1:-1:-1;24544:6:6;::::2;::::0;:15:::2;::::0;:44;;;;;::::2;::::0;;;;;;;;;:6:::2;::::0;:44;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;24544:44:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;24544:44:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;24544:44:6;24536:89:::2;;;::::0;;-1:-1:-1;;;24536:89:6;;::::2;;::::0;::::2;::::0;;;;;;;::::2;::::0;;;;;;;;;;;;;::::2;;24640:50;::::0;;-1:-1:-1;;;;;24640:50:6;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;;;;;;;;::::2;6345:1;;;23915:782:::0;;;:::o;18891:847::-;-1:-1:-1;;;;;19131:20:6;;19094:34;19131:20;;;:7;:20;;;;;:27;;19185:19;;18982:26;;;;;;19131:27;19218:10;;19214:518;;19270:6;19256:21;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;19256:21:6;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;144:17;;-1:-1;19256:21:6;;19244:33;;19324:6;19310:21;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;19310:21:6;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;144:17;;-1:-1;19310:21:6;;19291:40;;19378:6;19364:21;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;19364:21:6;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;144:17;;-1:-1;19364:21:6;-1:-1:-1;19345:40:6;-1:-1:-1;19405:9:6;19400:322;19422:6;19418:1;:10;19400:322;;;19453:22;19478:12;19491:1;19478:15;;;;;;;;;;;;;;;;;;19453:40;;19511:24;19538:2;:8;;19511:35;;19579:1;:11;;;19564:9;19574:1;19564:12;;;;;;;;;;;;;:26;;;;;19630:1;:18;;;19608:16;19625:1;19608:19;;;;;;;;;;;;;:40;;;;;19688:2;:19;;;19666:16;19683:1;19666:19;;;;;;;;;;;;;;;;;:41;-1:-1:-1;;19430:3:6;;19400:322;;;;19214:518;18891:847;;;;;;;:::o;10413:529::-;10529:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6779:17:::1;:15;:17::i;:::-;6759;;:37;6751:74;;;::::0;;-1:-1:-1;;;6751:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6751:74:6;;;;;;;;;;;;;::::1;;10603:10:::2;10586:14;10644:17;:15;:17::i;:::-;10623:38;;10674:32;10712:37;10730:6;10738:10;10712:17;:37::i;:::-;10671:78;;;;10760:29;;:::i;:::-;10819:19:::0;;10799:39;;;10819:19:::2;10848:23:::0;;10882:53:::2;::::0;10900:6;;10799:7;;10882:17:::2;:53::i;:::-;6835:1;;;;10413:529:::0;;:::o;6166:52::-;;;;;;;;;;;;;;;;;;;:::o;22162:1120::-;22330:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6298:10:::1;:8;:10::i;:::-;6290:45;;;::::0;;-1:-1:-1;;;6290:45:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6290:45:6;;;;;;;;;;;;;::::1;;22385:11:::0;22381:174:::2;;22421:19;;22412:28;;22381:174;;;22489:19;;22479:6;:29;;22471:73;;;::::0;;-1:-1:-1;;;22471:73:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;22769:6;::::0;:31:::2;::::0;;-1:-1:-1;;;22769:31:6;;22794:4:::2;22769:31;::::0;::::2;::::0;;;22743:23:::2;::::0;-1:-1:-1;;;;;22769:6:6::2;::::0;:16:::2;::::0;:31;;;;;::::2;::::0;;;;;;;;:6;:31;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;22769:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;22769:31:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;22769:31:6;22847:23:::2;::::0;22769:31;;-1:-1:-1;22810:34:6::2;::::0;22847:35:::2;::::0;22875:6;22847:35:::2;:27;:35;:::i;:::-;22810:72;;22930:15;22900:26;:45;;22892:81;;;::::0;;-1:-1:-1;;;22892:81:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;22992:6;::::0;:38:::2;::::0;;-1:-1:-1;;;22992:38:6;;-1:-1:-1;;;;;22992:38:6;;::::2;;::::0;::::2;::::0;;;;;;;;;:6;;;::::2;::::0;:15:::2;::::0;:38;;;;;::::2;::::0;;;;;;;;:6:::2;::::0;:38;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;22992:38:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;22992:38:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;22992:38:6;22984:83:::2;;;::::0;;-1:-1:-1;;;22984:83:6;;::::2;;::::0;::::2;::::0;;;;;;;::::2;::::0;;;;;;;;;;;;;::::2;;23181:19;:29:::0;;;;::::2;::::0;;23226:49:::2;::::0;;-1:-1:-1;;;;;23226:49:6;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;;;;;;;;::::2;6345:1;;22162:1120:::0;;;;:::o;12281:1290::-;12413:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6779:17:::1;:15;:17::i;:::-;6759;;:37;6751:74;;;::::0;;-1:-1:-1;;;6751:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6751:74:6;;;;;;;;;;;;;::::1;;12487:1:::2;12478:6;:10;12470:54;;;::::0;;-1:-1:-1;;;12470:54:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;12535:18;12556:17;:15;:17::i;:::-;12535:38;;12587:32;12625:41;12643:10;12655;12625:17;:41::i;:::-;12584:82;;;;13012:19;13034:52;13063:10;13075;13034:28;:52::i;:::-;13012:74;;13096:29;;:::i;:::-;13128:54;:9:::0;13162:11:::2;::::0;::::2;13175:6:::0;13128:54:::2;:33;:54;:::i;:::-;13096:86:::0;-1:-1:-1;13192:37:6::2;:23;13096:86:::0;13192:37:::2;:28;:37;:::i;:::-;13478:28;::::0;::::2;::::0;13508:17;;13527:24:::2;::::0;;::::2;::::0;13456:96:::2;::::0;;;;;;;::::2;::::0;;;13466:10:::2;::::0;13456:96:::2;::::0;;;;;;;::::2;6835:1;;;;12281:1290:::0;;;:::o;3955:136:9:-;4028:7;4054:12;;;;;;;;;;:30;;4078:5;4054:30;:23;:30;:::i;:::-;4047:37;;3955:136;;;;;:::o;2940:137::-;3009:4;3032:12;;;;;;;;;;:38;;3062:7;3032:38;:29;:38;:::i;25021:449:6:-;25139:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6298:10:::1;:8;:10::i;:::-;6290:45;;;::::0;;-1:-1:-1;;;6290:45:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6290:45:6;;;;;;;;;;;;;::::1;;25213:17:::2;:15;:17::i;:::-;25194:15;;:36;;25186:76;;;::::0;;-1:-1:-1;;;25186:76:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;25298:6;::::0;:31:::2;::::0;;-1:-1:-1;;;25298:31:6;;25323:4:::2;25298:31;::::0;::::2;::::0;;;25272:23:::2;::::0;-1:-1:-1;;;;;25298:6:6::2;::::0;:16:::2;::::0;:31;;;;;::::2;::::0;;;;;;;;:6;:31;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;25298:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;25298:31:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;25298:31:6;25347:6:::2;::::0;:47:::2;::::0;;-1:-1:-1;;;25347:47:6;;-1:-1:-1;;;;;25347:47:6;;::::2;;::::0;::::2;::::0;;;;;;;;;25298:31;;-1:-1:-1;25347:6:6;::::2;::::0;:15:::2;::::0;:47;;;;;25298:31:::2;::::0;25347:47;;;;;;;;:6:::2;::::0;:47;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;25347:47:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;25347:47:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;25347:47:6;25339:56:::2;;12:1:-1;9::::0;2:12:::2;25339:56:6;25410:16;::::0;::::2;::::0;;;::::2;25449:13;-1:-1:-1::0;;;;;25436:27:6::2;;1717:49:9::0;1762:4;1717:49;:::o;1507:95:7:-;1569:12;:26;1507:95::o;18376:277:6:-;-1:-1:-1;;;;;18550:20:6;18460:17;18550:20;;;:7;:20;;;;;18598:19;;18619:26;;;;;18598:19;;18376:277::o;6018:62::-;;;;;;;;;;;;;;;;;;;:::o;17985:107::-;18066:19;;17985:107;:::o;20608:438::-;20747:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;20784:11;20780:48:::1;;20811:7;;20780:48;20846:6;::::0;:54:::1;::::0;;-1:-1:-1;;;20846:54:6;;20866:10:::1;20846:54;::::0;::::1;::::0;20886:4:::1;20846:54:::0;;;;;;;;;;;;-1:-1:-1;;;;;20846:6:6;;::::1;::::0;:19:::1;::::0;:54;;;;;::::1;::::0;;;;;;;;;:6:::1;::::0;:54;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;20846:54:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;20846:54:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;20846:54:6;20838:82:::1;;;::::0;;-1:-1:-1;;;20838:82:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;20838:82:6;;;;;;;;;;;;;::::1;;20952:19;::::0;:31:::1;::::0;20976:6;20952:31:::1;:23;:31;:::i;:::-;20930:19;:53:::0;20998:41:::1;::::0;;21020:10:::1;20998:41:::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;;::::1;20608:438:::0;;;:::o;4404:66::-;4444:26;;;-1:-1:-1;;;4444:26:6;;;;;;;;;;;;4404:66;:::o;19745:426::-;-1:-1:-1;;;;;19942:20:6;19813:17;19942:20;;;:7;:20;;;;;19984:11;;;:21;20034:28;;;;20085:16;;20034:28;20136;;;;19984:21;;20034:28;;20085:16;20136:28;19745:426::o;5815:45::-;;;;;;:::o;3245:125:9:-;3308:7;3334:12;;;;;;;;;;:29;;:27;:29::i;5091:226::-;5183:6;:12;;;;;;;;;;:22;;;5175:45;;5207:12;:10;:12::i;5175:45::-;5167:106;;;;-1:-1:-1;;;5167:106:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:27:7;;;;:::o;11077:564:6:-;11200:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6779:17:::1;:15;:17::i;:::-;6759;;:37;6751:74;;;::::0;;-1:-1:-1;;;6751:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6751:74:6;;;;;;;;;;;;;::::1;;11274:10:::2;11257:14;11315:17;:15;:17::i;:::-;11294:38;;11345:32;11383:37;11401:6;11409:10;11383:17;:37::i;:::-;11342:78;;;;11431:29;;:::i;:::-;11497:26;::::0;::::2;::::0;;11470:24:::2;::::0;::::2;:53:::0;;;11562:1:::2;11533:30:::0;;;11574:60:::2;::::0;11592:6;;11470:7;;11574:17:::2;:60::i;5875:42::-:0;;;;;;:::o;5933:37::-;;;;:::o;11783:491::-;11904:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6779:17:::1;:15;:17::i;:::-;6759;;:37;6751:74;;;::::0;;-1:-1:-1;;;6751:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6751:74:6;;;;;;;;;;;;;::::1;;11978:10:::2;11961:14;12019:17;:15;:17::i;:::-;11998:38;;12049:32;12087:37;12105:6;12113:10;12087:17;:37::i;:::-;-1:-1:-1::0;12135:59:6::2;::::0;;;;::::2;::::0;;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;12046:78;;-1:-1:-1;12135:59:6::2;::::0;-1:-1:-1;12153:6:6;;12172:21:::2;12046:78:::0;12172:19:::2;:21::i;:::-;12135:17;:59::i;:::-;12233:1;12204:26;::::0;::::2;:30:::0;;;12244:23;;-1:-1:-1;;;;11783:491:6:o;8668:833::-;8798:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6779:17:::1;:15;:17::i;:::-;6759;;:37;6751:74;;;::::0;;-1:-1:-1;;;6751:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6751:74:6;;;;;;;;;;;;;::::1;;8876:10:::0;;;;;8896:353:::2;;8937:6;::::0;:54:::2;::::0;;-1:-1:-1;;;8937:54:6;;8957:10:::2;8937:54;::::0;::::2;::::0;8977:4:::2;8937:54:::0;;;;;;;;;;;;-1:-1:-1;;;;;8937:6:6;;::::2;::::0;:19:::2;::::0;:54;;;;;::::2;::::0;;;;;;;;;:6:::2;::::0;:54;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;8937:54:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;8937:54:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;8937:54:6;8929:82:::2;;;::::0;;-1:-1:-1;;;8929:82:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;8929:82:6;;;;;;;;;;;;;::::2;;9051:23;::::0;:35:::2;::::0;9079:6;9051:35:::2;:27;:35;:::i;:::-;9025:23;:61:::0;9136:23:::2;:33:::0;:45:::2;::::0;9174:6;9136:45:::2;:37;:45;:::i;:::-;9100:23;:81:::0;9200:38:::2;::::0;;;;;;;9219:10:::2;::::0;9200:38:::2;::::0;;;;;::::2;::::0;;::::2;8896:353;9259:18;9280:17;:15;:17::i;:::-;9259:38;;9310:32;9347:41;9365:10;9377;9347:17;:41::i;:::-;9307:81;;;;9403:13;9399:96;;;9454:19:::0;;:31:::2;::::0;9478:6;9454:31:::2;:23;:31;:::i;:::-;9432:53:::0;;-1:-1:-1;;;;;8668:833:6:o;4590:20::-;;;-1:-1:-1;;;;;4590:20:6;;:::o;21191:212::-;21310:17;6651:15;6630:17;:15;:17::i;:::-;:36;;6622:68;;;;;-1:-1:-1;;;6622:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6622:68:6;;;;;;;;;;;;;;;6446:10:::1;:8;:10::i;:::-;:48;;;-1:-1:-1::0;4444:26:6::1;::::0;;-1:-1:-1;;;4444:26:6;;;;;;;;::::1;::::0;;;6460:34:::1;::::0;6483:10:::1;6460:7;:34::i;:::-;6438:97;;;;-1:-1:-1::0;;;6438:97:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21364:32:::2;21382:13;21364:17;:32::i;5405:::-:0;;;;:::o;874:176:10:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;4864:141:15;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:15;;4957:4;:41::i;25854:111:6:-;25896:4;25919:39;25896:4;25947:10;25919:7;:39::i;:::-;25912:46;;25854:111;:::o;1397:103:7:-;1481:12;;1397:103;:::o;26196:390:6:-;26274:21;;26327:148;;;;;;;;;;26376:17;:15;:17::i;:::-;26327:148;;;;;;;;;-1:-1:-1;26305:19:6;;;:14;:19;;;;;:170;;;;;;;;;;;;26509:21;;:28;;;:25;:28;:::i;:::-;26485:21;:52;26553:26;;;;;;;;26569:3;;26553:26;;;;;;;;;;26196:390;;:::o;590:104:8:-;677:10;590:104;:::o;7015:184:9:-;7088:6;:12;;;;;;;;;;:33;;7113:7;7088:33;:24;:33;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:9;7160:7;-1:-1:-1;;;;;7142:40:9;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;27124:255:6:-;27191:25;27219:17;:15;:17::i;:::-;27191:45;;27281:17;27266:12;:32;:67;;27321:12;27266:67;;;27301:17;27266:67;27246:17;:87;;;27348:24;;;;;;;;;;;;;;;;27124:255;;:::o;7205:188:9:-;7279:6;:12;;;;;;;;;;:36;;7307:7;7279:36;:27;:36;:::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;-1:-1:-1;;;;;7336:40:9;7354:7;-1:-1:-1;;;;;7336:40:9;7348:4;7336:40;;;;;;;;;;7205:188;;:::o;31800:2691:6:-;31894:39;;:::i;:::-;-1:-1:-1;;;;;32023:15:6;;31935:32;32023:15;;;:7;:15;;;;;;;;32120:10;:18;;;;;;31935:32;32085:13;;;31935:32;32149:1673;32171:19;;32167:23;;32149:1673;;;32208:20;;:::i;:::-;32231:12;32244:1;32231:15;;;;;;;;;;;;;;;;;32208:38;;;;;;;;32231:15;;;;;;;32208:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32265:18;;32208:38;;-1:-1:-1;32265:29:6;-1:-1:-1;32261:191:6;;;-1:-1:-1;32314:3:6;;32429:8;;32261:191;32528:7;;;;:17;32496:27;;:50;;;:31;:50;:::i;:::-;32466:80;;32840:7;;;;;:24;;;32801:34;;;;:64;;;:38;:64;:::i;:::-;32764:34;;;:101;33166:19;;-1:-1:-1;;33166:23:6;33207:13;;;33203:92;;33258:12;33271:8;33258:22;;;;;;;;;;;;;;;;;;33240:12;33253:1;33240:15;;;;;;;;;;;;;;;;:40;;:15;;;;;:40;;;;;;;;;;;;;;;;;;;;33203:92;33793:12;:18;;;;;;;;;;;;;;;-1:-1:-1;;33793:18:6;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;32149:1673:6;;;;-1:-1:-1;33887:19:6;;33883:77;;-1:-1:-1;;;;;33934:15:6;;;;;;:7;:15;;;;;33927:22;;;;;;;;;33934:15;33927:22;;;;33934:15;33927:22;:::i;:::-;;;33883:77;33982:27;;:31;;;:73;;;34054:1;34017:17;:34;;;:38;33982:73;33970:85;;34069:9;34065:420;;;34126:27;;34155:34;;;;;34100:90;;;;;;;;;;;;-1:-1:-1;;;;;34100:90:6;;;;;;;;;;;;34205:44;:20;34231:17;34205:44;:25;:44;:::i;:::-;34267:19;;:23;34263:102;;34310:40;:6;34332:17;34310:40;:21;:40;:::i;:::-;34379:47;:23;34408:17;34379:47;:28;:47;:::i;:::-;34441:33;:9;34456:17;34441:33;:14;:33;:::i;:::-;31800:2691;;;;;;;:::o;2944:671:1:-;3040:20;;:::i;:::-;3105:6;3080:4;:21;;;:31;3076:533;;3151:21;;;;:33;;3177:6;3151:33;:25;:33;:::i;:::-;3127:21;;;:57;3198:24;;;:33;;;3076:533;;;3293:21;;;;3282:33;;:6;;:33;:10;:33;:::i;:::-;3262:53;;;3459:14;;:37;;;:18;:37;:::i;:::-;3442:54;;3538:21;;;;;;3511:24;;;:48;3442:14;3573:25;;-1:-1:-1;3511:24:1;2944:671::o;28076:817:6:-;28190:10;;28186:701;;28247:7;:24;;;28224:19;;:47;;28216:92;;;;;-1:-1:-1;;;28216:92:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28330:6;;:31;;;-1:-1:-1;;;28330:31:6;;-1:-1:-1;;;;;28330:31:6;;;;;;;;;;;;;;;:6;;;;;:15;;:31;;;;;;;;;;;;;;:6;;:31;;;2:2:-1;;;;27:1;24;17:12;2:2;28330:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28330:31:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;28330:31:6;28322:59;;;;;-1:-1:-1;;;28322:59:6;;;;;;;;;;;;-1:-1:-1;;;28322:59:6;;;;;;;;;;;;;;;28442:24;;;;28418:19;;:49;;;:23;:49;:::i;:::-;28396:19;:71;28535:17;;28507:23;;:46;;;:27;:46;:::i;:::-;28481:23;:72;28567:37;:23;28596:7;28567:37;:28;:37;:::i;:::-;28831:17;;28850:24;;;;;28810:65;;;;;;;;;;;;28819:10;;28810:65;;;;;;;;;28076:817;;;:::o;28900:2893::-;-1:-1:-1;;;;;29048:15:6;;29005:19;29048:15;;;:7;:15;;;;;;29093:23;:11;;;:21;:23::i;:::-;29073:43;-1:-1:-1;29130:13:6;;29126:1368;;29259:16;;29538:28;;;;29523:879;29572:21;;29568:1;:25;29523:879;;;29618:37;29658:17;;;:14;:17;;;;;29886:19;;:34;-1:-1:-1;29886:34:6;29878:71;;;;;-1:-1:-1;;;29878:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;30057:21;;29987:8;;30030:1;30026:5;;;30053:25;;30049:192;;;30102:42;30147:17;;;:14;:17;;;;;30198:24;;-1:-1:-1;30049:192:6;30271:75;30296:9;30307:8;:13;;;30334:11;30322:9;:23;30271:24;:75::i;:::-;30259:87;-1:-1:-1;30378:9:6;;-1:-1:-1;;;29595:3:6;;29523:879;;;-1:-1:-1;30461:11:6;;;:21;30447:36;;:9;;:36;:13;:36;:::i;:::-;30416:28;;;:67;-1:-1:-1;29126:1368:6;30504:27;;;30573:21;;:57;;30629:1;30573:57;;;30625:1;30601:21;;:25;30573:57;30541:28;;;:90;;;31734:11;;;:21;31757:28;;;;31674:112;;;;;;;;;;;;;;;-1:-1:-1;;;;;31674:112:6;;;;;;;;;;;;28900:2893;;;;;:::o;1046:150:1:-;1166:22;;;;1146:15;;1116:7;;1146:43;;:15;:43;:19;:43;:::i;4355:238::-;4474:20;;:::i;:::-;4520:39;4546:4;4552:6;4520:25;:39::i;:::-;4510:49;;4569:17;4574:2;4578:7;4569:4;:17::i;:::-;4355:238;;;;;:::o;1594:220::-;1710:16;;1693:12;;:34;;;:16;:34;:::i;:::-;1678:49;;1783:23;;;;1759:19;;;;:48;;;:23;:48;:::i;:::-;1737:2;:19;;:70;;;;1594:220;;:::o;1321:134:10:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;3873:224:1:-;3985:20;;:::i;:::-;4031:32;4050:4;4056:6;4031:18;:32::i;2065:230::-;2187:16;;2168:14;;:36;;;:18;:36;:::i;:::-;2151:53;;2264:23;;;;2238:21;;;;:50;;;:25;:50;:::i;6085:147:15:-;6159:7;6201:22;6205:3;6217:5;6201:3;:22::i;5401:156::-;5481:4;5504:46;5514:3;-1:-1:-1;;;;;5534:14:15;;5504:9;:46::i;5638:115::-;5701:7;5727:19;5735:3;5727:7;:19::i;26705:154:6:-;26777:19;:35;;;;;-1:-1:-1;;26777:35:6;;;;;;;;26827:25;;;;;;;;;;;;;;;;26705:154;:::o;1611:404:15:-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1732:11:15;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:15;1986:12;;5173:147;5246:4;5269:44;5277:3;-1:-1:-1;;;;;5297:14:15;;5269:7;:44::i;1386:457:3:-;1489:7;1519:317;1552:260;1574:197;1614:26;1638:1;1614:22;:26::i;:::-;1662:87;1709:5;1742:6;1662:18;:87::i;:::-;1574:17;:197::i;:::-;1793:1;1552:3;:260::i;:::-;1826:9;1519:18;:317::i;:::-;1512:324;1386:457;-1:-1:-1;;;;1386:457:3:o;1746:187:10:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1851:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:10;;;1746:187::o;2302:635:1:-;2391:20;;:::i;:::-;2431:14;;:24;-1:-1:-1;2427:504:1;;2488:14;;:26;;2507:6;2488:26;:18;:26;:::i;:::-;2471:43;;2528:26;;;2427:504;;;2622:14;;2611:26;;:6;;:26;:10;:26;:::i;:::-;2584:24;;;:53;;;2788:21;;;;:51;;;:25;:51;:::i;:::-;2764:21;;;:75;2874:14;;2854:34;;2874:14;2902:18;;;-1:-1:-1;2854:34:1;2302:635::o;4423:201:15:-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:15;;;;-1:-1:-1;;;4509:73:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;3984:107::-;4066:18;;3984:107::o;2183:1512::-;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:15;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;;1928:134:0;1981:6;2009:18;2004:1;:23;;1995:33;;12:1:-1;9;2:12;1995:33:0;-1:-1:-1;2054:2:0;2049:7;;1928:134::o;8234:203::-;8294:6;8317;8308:16;;12:1:-1;9;2:12;8308:16:0;8330:14;8347:12;8354:1;8357;8347:5;:12::i;:::-;8330:29;-1:-1:-1;;;;;;;;;;;8374:29:0;;;;8365:39;;12:1:-1;9;2:12;3364:191:0;3421:6;3451:13;:9;;;:13;;;;;-1:-1:-1;;;;;;3479:19:0;;;;;:42;;-1:-1:-1;;;;;;3502:19:0;;;3479:42;3470:52;;12:1:-1;9;2:12;1012:367:3;1078:8;1106:26;1130:1;1106:22;:26::i;:::-;1102:30;;1143:230;1150:5;;1143:230;;1179:1;1175:5;;:9;1171:192;;1208:24;1227:1;1230;1208:17;:24::i;:::-;1204:28;;1255:1;1250:6;;;;1171:192;;;1299:24;1318:1;1321;1299:17;:24::i;:::-;1295:28;;1347:1;1341:7;;;;;1171:192;1143:230;;5958:455:0;6017:7;6036:6;6032:20;;-1:-1:-1;6051:1:0;6044:8;;6032:20;6073:1;6068;:6;;;;6059:16;;12:1:-1;9;2:12;6059:16:0;6096:11;;;;-1:-1:-1;;;;;6111:38:0;;6096:54;;6155:2;6095:62;;6196:3;6191:8;;;6176:24;-1:-1:-1;;;;;6216:56:0;;;6207:66;;12:1:-1;9;2:12;6207:66:0;6286:2;6279:9;6316:71;;6304:83;;;6295:93;;12:1:-1;9;2:12;6295:93:0;6401:7;;5958:455;-1:-1:-1;;;5958:455:0:o;20447:1218::-;20507:7;20531:6;20522:16;;12:1:-1;9;2:12;20522:16:0;20545:14;-1:-1:-1;;;;;20570:1:0;:55;20566:1005;;20654:1;20648:2;20643:1;:7;;20642:13;;;;;;20633:22;;20566:1005;;;20688:3;20712:8;;;20738:11;20732:17;;20728:48;;20760:2;20764:9;;;;20753;20728:48;20793:7;20787:2;:13;20783:44;;20811:2;20815:9;;;;20804;20783:44;20844:5;20838:2;:11;20834:40;;20860:1;20863:8;;;;20853;20834:40;20891:4;20885:2;:10;20881:39;;20906:1;20909:8;;;;20899;20881:39;20937:3;20931:2;:9;20927:38;;20951:1;20954:8;;;;20944;20927:38;20982:3;20976:2;:9;20972:23;;20994:1;20987:8;;;;20972:23;21081:3;21075;:9;21070:1;21066;:5;:18;;21088:1;21065:24;21057:3;21051;:9;21046:1;:14;;21045:45;;;;;;21036:54;;-1:-1:-1;;;;;21107:6:0;:44;;21098:54;;12:1:-1;9;2:12;21098:54:0;21189:3;21184:8;;;21174:19;;-1:-1:-1;;;;;21224:38:0;;21214:49;;21290:3;21285:8;;;21319:2;21314:7;;;21334;;;21330:20;;;21349:1;21343:7;;;;21330:20;21422:3;21416:9;;;;21358:8;;21437:7;;;21433:20;;;21452:1;21446:7;;;;21433:20;21461:8;;;21535:3;21529:9;;;21523:15;;21515:24;;;;21563:1;21558:2;:6;;;;;;21548:16;;;;20566:1005;;;;;;;-1:-1:-1;;;;;21586:6:0;:44;;21577:54;;12:1:-1;9;2:12;4186:197:0;4243:6;4273:13;:9;;;:13;;;;;4290:2;4273:19;-1:-1:-1;;;;;;4307:19:0;;;;;:42;;-1:-1:-1;;;;;;4330:19:0;;;4298:52;;12:1:-1;9;2:12;-1:-1;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier:Apache-2.0\n//------------------------------------------------------------------------------\n//\n//   Copyright 2020 Fetch.AI Limited\n//\n//   Licensed under the Apache License, Version 2.0 (the \"License\");\n//   you may not use this file except in compliance with the License.\n//   You may obtain a copy of the License at\n//\n//       http://www.apache.org/licenses/LICENSE-2.0\n//\n//   Unless required by applicable law or agreed to in writing, software\n//   distributed under the License is distributed on an \"AS IS\" BASIS,\n//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//   See the License for the specific language governing permissions and\n//   limitations under the License.\n//\n//------------------------------------------------------------------------------\n\npragma solidity ^0.6.0;\n\nimport \"./Staking.sol\";\n\n\ncontract StakingMock is Staking {\n    uint256 public _blockNumber;\n\n    constructor(\n          address ERC20Address\n        , uint256 interestRatePerBlock\n        , uint256 pausedSinceBlock\n        , uint64  lockPeriodInBlocks) \n    public Staking(\n        ERC20Address, interestRatePerBlock, pausedSinceBlock, lockPeriodInBlocks)\n    {\n        // NOTE(pb): Unnecessary, only wastes gas. The data mamber is implicitly initialised to default value( zero in the case of integral types). \n        //_blockNumber = 0;\n    }\n\n\n    function _getBlockNumber() internal view override returns(uint256) {\n        return _blockNumber;\n    }\n\n\n    function setBlockNumber(uint256 blockNumber) public {\n        _blockNumber = blockNumber;\n    }\n}\n",
  "sourcePath": "/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/contracts/StakingMock.sol",
  "ast": {
    "absolutePath": "/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/contracts/StakingMock.sol",
    "exportedSymbols": {
      "StakingMock": [
        5534
      ]
    },
    "id": 5535,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5491,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "820:23:7"
      },
      {
        "absolutePath": "/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/contracts/Staking.sol",
        "file": "./Staking.sol",
        "id": 5492,
        "nodeType": "ImportDirective",
        "scope": 5535,
        "sourceUnit": 5490,
        "src": "845:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5493,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5489,
              "src": "895:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$5489",
                "typeString": "contract Staking"
              }
            },
            "id": 5494,
            "nodeType": "InheritanceSpecifier",
            "src": "895:7:7"
          }
        ],
        "contractDependencies": [
          5489,
          5557,
          5840
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5534,
        "linearizedBaseContracts": [
          5534,
          5489,
          5840,
          5557
        ],
        "name": "StakingMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d7e0e975",
            "id": 5496,
            "mutability": "mutable",
            "name": "_blockNumber",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5534,
            "src": "909:27:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5495,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "909:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5513,
              "nodeType": "Block",
              "src": "1206:184:7",
              "statements": []
            },
            "documentation": null,
            "id": 5514,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5507,
                    "name": "ERC20Address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5498,
                    "src": "1128:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5508,
                    "name": "interestRatePerBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5500,
                    "src": "1142:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5509,
                    "name": "pausedSinceBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5502,
                    "src": "1164:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5510,
                    "name": "lockPeriodInBlocks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5504,
                    "src": "1182:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  }
                ],
                "id": 5511,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5506,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5489,
                  "src": "1111:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$5489_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1111:90:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5498,
                  "mutability": "mutable",
                  "name": "ERC20Address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5514,
                  "src": "966:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5500,
                  "mutability": "mutable",
                  "name": "interestRatePerBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5514,
                  "src": "997:28:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5502,
                  "mutability": "mutable",
                  "name": "pausedSinceBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5514,
                  "src": "1036:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5504,
                  "mutability": "mutable",
                  "name": "lockPeriodInBlocks",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5514,
                  "src": "1071:26:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 5503,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "954:144:7"
            },
            "returnParameters": {
              "id": 5512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1206:0:7"
            },
            "scope": 5534,
            "src": "943:447:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5018
            ],
            "body": {
              "id": 5522,
              "nodeType": "Block",
              "src": "1464:36:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5520,
                    "name": "_blockNumber",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5496,
                    "src": "1481:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5519,
                  "id": 5521,
                  "nodeType": "Return",
                  "src": "1474:19:7"
                }
              ]
            },
            "documentation": null,
            "id": 5523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getBlockNumber",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5516,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1438:8:7"
            },
            "parameters": {
              "id": 5515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1421:2:7"
            },
            "returnParameters": {
              "id": 5519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5518,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5523,
                  "src": "1455:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1454:9:7"
            },
            "scope": 5534,
            "src": "1397:103:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5532,
              "nodeType": "Block",
              "src": "1559:43:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5528,
                      "name": "_blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5496,
                      "src": "1569:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5529,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5525,
                      "src": "1584:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1569:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5531,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:26:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a8c3c850",
            "id": 5533,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBlockNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5525,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5533,
                  "src": "1531:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1530:21:7"
            },
            "returnParameters": {
              "id": 5527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1559:0:7"
            },
            "scope": 5534,
            "src": "1507:95:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5535,
        "src": "871:733:7"
      }
    ],
    "src": "820:785:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/contracts/StakingMock.sol",
    "exportedSymbols": {
      "StakingMock": [
        5534
      ]
    },
    "id": 5535,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5491,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "820:23:7"
      },
      {
        "absolutePath": "/Users/pb/code/fetch/cosmos/staking/contracts/ethereum/contracts/Staking.sol",
        "file": "./Staking.sol",
        "id": 5492,
        "nodeType": "ImportDirective",
        "scope": 5535,
        "sourceUnit": 5490,
        "src": "845:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5493,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5489,
              "src": "895:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$5489",
                "typeString": "contract Staking"
              }
            },
            "id": 5494,
            "nodeType": "InheritanceSpecifier",
            "src": "895:7:7"
          }
        ],
        "contractDependencies": [
          5489,
          5557,
          5840
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5534,
        "linearizedBaseContracts": [
          5534,
          5489,
          5840,
          5557
        ],
        "name": "StakingMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d7e0e975",
            "id": 5496,
            "mutability": "mutable",
            "name": "_blockNumber",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5534,
            "src": "909:27:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5495,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "909:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5513,
              "nodeType": "Block",
              "src": "1206:184:7",
              "statements": []
            },
            "documentation": null,
            "id": 5514,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5507,
                    "name": "ERC20Address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5498,
                    "src": "1128:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5508,
                    "name": "interestRatePerBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5500,
                    "src": "1142:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5509,
                    "name": "pausedSinceBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5502,
                    "src": "1164:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5510,
                    "name": "lockPeriodInBlocks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5504,
                    "src": "1182:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  }
                ],
                "id": 5511,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5506,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5489,
                  "src": "1111:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$5489_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1111:90:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5498,
                  "mutability": "mutable",
                  "name": "ERC20Address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5514,
                  "src": "966:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5500,
                  "mutability": "mutable",
                  "name": "interestRatePerBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5514,
                  "src": "997:28:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5502,
                  "mutability": "mutable",
                  "name": "pausedSinceBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5514,
                  "src": "1036:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5504,
                  "mutability": "mutable",
                  "name": "lockPeriodInBlocks",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5514,
                  "src": "1071:26:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 5503,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "954:144:7"
            },
            "returnParameters": {
              "id": 5512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1206:0:7"
            },
            "scope": 5534,
            "src": "943:447:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5018
            ],
            "body": {
              "id": 5522,
              "nodeType": "Block",
              "src": "1464:36:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5520,
                    "name": "_blockNumber",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5496,
                    "src": "1481:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5519,
                  "id": 5521,
                  "nodeType": "Return",
                  "src": "1474:19:7"
                }
              ]
            },
            "documentation": null,
            "id": 5523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getBlockNumber",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5516,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1438:8:7"
            },
            "parameters": {
              "id": 5515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1421:2:7"
            },
            "returnParameters": {
              "id": 5519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5518,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5523,
                  "src": "1455:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1454:9:7"
            },
            "scope": 5534,
            "src": "1397:103:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5532,
              "nodeType": "Block",
              "src": "1559:43:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5528,
                      "name": "_blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5496,
                      "src": "1569:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5529,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5525,
                      "src": "1584:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1569:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5531,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:26:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a8c3c850",
            "id": 5533,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBlockNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5525,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5533,
                  "src": "1531:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1530:21:7"
            },
            "returnParameters": {
              "id": 5527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1559:0:7"
            },
            "scope": 5534,
            "src": "1507:95:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5535,
        "src": "871:733:7"
      }
    ],
    "src": "820:785:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.8+commit.0bbfe453.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-09-25T09:50:41.057Z",
  "devdoc": {
    "methods": {
      "addInterestRate(uint256,uint256)": {
        "details": "expiration period",
        "params": {
          "expirationBlock": "- block number beyond which is the carrier Tx considered expired, and so rejected.                    This is for protection of Tx sender to exactly define lifecycle length of the Tx,                    and so avoiding uncertainty of how long Tx sender needs to wait for Tx processing.                    Tx can be withheld",
          "rate": "- signed interest rate value in [10**18] units => real_rate [1] = rate [10**18] / 10**18"
        }
      },
      "deleteContract(address,uint256)": {
        "details": "owner only + only on or after `_earliestDelete` block",
        "params": {
          "payoutAddress": "address to transfer the balances to. Ensure that this is able to handle ERC20 tokens"
        }
      },
      "getLockedAssetsForUser(address)": {
        "details": "Returns locked assets decomposed in to 3 separate arrays (principal, compound interest, liquid since block)     NOTE(pb): This method might be quite expensive, depending on size of locked assets"
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "pauseSince(uint256,uint256)": {
        "details": "Delegate only",
        "params": {
          "block_number": "block number since which non-admin interaction will be paused (for all _getBlockNumber() >= block_number)"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "topUpRewardsPool(uint256,uint256)": {
        "details": "Even though this is considered as administrative action (is not affected by by contract paused state, it can be executed by anyone who wishes to top-up the rewards pool (funds are sent in to contract, *not* the other way around). The Rewards Pool is exclusively dedicated to cover withdrawals of user' compound interest, which is effectively the reward."
      },
      "unbindStake(uint256,uint256)": {
        "details": "public access",
        "params": {
          "amount": "- value to un-bind from the stake                If `amount=0` then the **WHOLE** stake (including                compound interest) will be unbound."
        }
      },
      "updateLockPeriod(uint64,uint256)": {
        "details": "Delegate only",
        "params": {
          "num_of_blocks": "length of the lock period"
        }
      },
      "withdraw(uint256,uint256)": {
        "details": "public access",
        "params": {
          "amount": "- value to withdraw"
        }
      },
      "withdrawCompoundInterest(uint256)": {
        "details": "public access"
      },
      "withdrawExcessTokens(address,uint256)": {
        "details": "Withdraw \"excess\" tokens, which were sent to contract directly via direct ERC20.transfer(...),     without interacting with API of this (Staking) contract, what could be done only by mistake.     Thus this method is meant to be used primarily for rescue purposes, enabling withdrawal of such     \"excess\" tokens out of contract.",
        "params": {
          "targetAddress": ": address to send tokens to",
          "txExpirationBlock": ": block number until which is the transaction valid (inclusive).                           When transaction is processed after this block, it fails."
        }
      },
      "withdrawFromRewardsPool(uint256,address,uint256)": {
        "details": "Withdraw tokens from rewards pool.",
        "params": {
          "amount": ": amount to withdraw.                If `amount == 0` then whole amount in rewards pool will be withdrawn.",
          "targetAddress": ": address to send tokens to"
        }
      },
      "withdrawPrincipal(uint256)": {
        "details": "public access"
      },
      "withdrawWholeLiquidity(uint256)": {
        "details": "public access"
      }
    }
  },
  "userdoc": {
    "methods": {
      "addInterestRate(uint256,uint256)": {
        "notice": "Add new interest rate in to the ordered container of previously added interest rates"
      },
      "deleteContract(address,uint256)": {
        "notice": "Delete the contract, transfers the remaining token and ether balance to the specified payoutAddress"
      },
      "pauseSince(uint256,uint256)": {
        "notice": "Pauses all NON-administrative interaction with the contract since the specidfed block number "
      },
      "unbindStake(uint256,uint256)": {
        "notice": "Unbinds amount from the stake of sender of the transaction,        and *LOCKS* it for number of blocks defined by value of the        `_lockPeriodInBlocks` state of this contract at the point        of this call.        The locked amount can *NOT* be withdrawn from the contract        *BEFORE* the lock period ends.     *         Unbinding (=calling this method) also means, that compound        interest will be calculated for period since la."
      },
      "updateLockPeriod(uint64,uint256)": {
        "notice": "Updates Lock Period value"
      },
      "withdraw(uint256,uint256)": {
        "notice": "Withdraws amount from sender' available liquidity pool back to sender address,        preferring withdrawal from compound interest dimension of liquidity."
      },
      "withdrawCompoundInterest(uint256)": {
        "notice": "Withdraws *WHOLE* compound interest amount available to sender."
      },
      "withdrawPrincipal(uint256)": {
        "notice": "Withdraws *WHOLE* compound interest amount available to sender."
      },
      "withdrawWholeLiquidity(uint256)": {
        "notice": "Withdraws whole liquidity available to sender back to sender' address,"
      }
    }
  }
}
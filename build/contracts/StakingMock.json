{
  "contractName": "StakingMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ERC20Address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "interestRatePerBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pausedSinceBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "lockPeriodInBlocks",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sinceInterestRateIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "name": "BindStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DeleteContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExcessTokenWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "name": "LiquidityUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "numOfBlocks",
          "type": "uint64"
        }
      ],
      "name": "LockPeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "NewInterestRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sinceBlock",
          "type": "uint256"
        }
      ],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardsPoolTokenTopUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardsPoolTokenWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sinceInterestRateIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "name": "StakeCompoundInterest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "liquidSinceBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "name": "UnbindStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DELEGATE_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DELETE_PROTECTION_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_accruedGlobalLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_accruedGlobalLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_accruedGlobalPrincipal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_blockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_earliestDelete",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_interestRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sinceBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_interestRatesNextIdx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_interestRatesStartIdx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_lockPeriodInBlocks",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_pausedSinceBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_rewardsPoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationBlock",
          "type": "uint256"
        }
      ],
      "name": "addInterestRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "bindStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payoutAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "deleteContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEarliestDeleteBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forAddress",
          "type": "address"
        }
      ],
      "name": "getLockedAssetsAggregateForUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forAddress",
          "type": "address"
        }
      ],
      "name": "getLockedAssetsForUser",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "principal",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "compoundInterest",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "liquidSinceBlock",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forAddress",
          "type": "address"
        }
      ],
      "name": "getNumberOfLockedAssetsForUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardsPoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forAddress",
          "type": "address"
        }
      ],
      "name": "getStakeForUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "compoundInterest",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sinceBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sinceInterestRateIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "pauseSince",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "topUpRewardsPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "unbindStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "numOfBlocks",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "updateLockPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdrawCompoundInterest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdrawExcessTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromRewardsPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdrawPrincipal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "txExpirationBlock",
          "type": "uint256"
        }
      ],
      "name": "withdrawWholeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "setBlockNumber",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRatePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pausedSinceBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"lockPeriodInBlocks\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sinceInterestRateIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"name\":\"BindStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DeleteContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExcessTokenWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"name\":\"LiquidityUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"numOfBlocks\",\"type\":\"uint64\"}],\"name\":\"LockPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"NewInterestRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sinceBlock\",\"type\":\"uint256\"}],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsPoolTokenTopUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsPoolTokenWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sinceInterestRateIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"name\":\"StakeCompoundInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"liquidSinceBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"name\":\"UnbindStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELEGATE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELETE_PROTECTION_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_accruedGlobalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_accruedGlobalLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_accruedGlobalPrincipal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_blockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_earliestDelete\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_interestRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sinceBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_interestRatesNextIdx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_interestRatesStartIdx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_lockPeriodInBlocks\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_pausedSinceBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rewardsPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationBlock\",\"type\":\"uint256\"}],\"name\":\"addInterestRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"bindStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payoutAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEarliestDeleteBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forAddress\",\"type\":\"address\"}],\"name\":\"getLockedAssetsAggregateForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forAddress\",\"type\":\"address\"}],\"name\":\"getLockedAssetsForUser\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"principal\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"compoundInterest\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"liquidSinceBlock\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forAddress\",\"type\":\"address\"}],\"name\":\"getNumberOfLockedAssetsForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forAddress\",\"type\":\"address\"}],\"name\":\"getStakeForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sinceBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sinceInterestRateIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"pauseSince\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"setBlockNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"topUpRewardsPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"unbindStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"numOfBlocks\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"updateLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdrawCompoundInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdrawExcessTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdrawFromRewardsPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdrawPrincipal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txExpirationBlock\",\"type\":\"uint256\"}],\"name\":\"withdrawWholeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addInterestRate(uint256,uint256)\":{\"details\":\"expiration period\",\"params\":{\"expirationBlock\":\"- block number beyond which is the carrier Tx considered expired, and so rejected.                    This is for protection of Tx sender to exactly define lifecycle length of the Tx,                    and so avoiding uncertainty of how long Tx sender needs to wait for Tx processing.                    Tx can be withheld\",\"rate\":\"- signed interest rate value in [10**18] units => real_rate [1] = rate [10**18] / 10**18\"}},\"deleteContract(address,uint256)\":{\"details\":\"owner only + only on or after `_earliestDelete` block\",\"params\":{\"payoutAddress\":\"address to transfer the balances to. Ensure that this is able to handle ERC20 tokens\"}},\"getLockedAssetsForUser(address)\":{\"details\":\"Returns locked assets decomposed in to 3 separate arrays (principal, compound interest, liquid since block)     NOTE(pb): This method might be quite expensive, depending on size of locked assets\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"pauseSince(uint256,uint256)\":{\"details\":\"Delegate only\",\"params\":{\"blockNumber\":\"block number since which non-admin interaction will be paused (for all _getBlockNumber() >= blockNumber)\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"topUpRewardsPool(uint256,uint256)\":{\"details\":\"Even though this is considered as administrative action (is not affected by by contract paused state, it can be executed by anyone who wishes to top-up the rewards pool (funds are sent in to contract, *not* the other way around). The Rewards Pool is exclusively dedicated to cover withdrawals of user' compound interest, which is effectively the reward.\"},\"unbindStake(uint256,uint256)\":{\"details\":\"public access\",\"params\":{\"amount\":\"- value to un-bind from the stake                If `amount=0` then the **WHOLE** stake (including                compound interest) will be unbound.\"}},\"updateLockPeriod(uint64,uint256)\":{\"details\":\"Delegate only\",\"params\":{\"numOfBlocks\":\"length of the lock period\"}},\"withdraw(uint256,uint256)\":{\"details\":\"public access\",\"params\":{\"amount\":\"- value to withdraw\"}},\"withdrawCompoundInterest(uint256)\":{\"details\":\"public access\"},\"withdrawExcessTokens(address,uint256)\":{\"details\":\"Withdraw \\\"excess\\\" tokens, which were sent to contract directly via direct ERC20.transfer(...),     without interacting with API of this (Staking) contract, what could be done only by mistake.     Thus this method is meant to be used primarily for rescue purposes, enabling withdrawal of such     \\\"excess\\\" tokens out of contract.\",\"params\":{\"targetAddress\":\": address to send tokens to\",\"txExpirationBlock\":\": block number until which is the transaction valid (inclusive).                           When transaction is processed after this block, it fails.\"}},\"withdrawFromRewardsPool(uint256,address,uint256)\":{\"details\":\"Withdraw tokens from rewards pool.\",\"params\":{\"amount\":\": amount to withdraw.                If `amount == 0` then whole amount in rewards pool will be withdrawn.\",\"targetAddress\":\": address to send tokens to\"}},\"withdrawPrincipal(uint256)\":{\"details\":\"public access\"},\"withdrawWholeLiquidity(uint256)\":{\"details\":\"public access\"}}},\"userdoc\":{\"methods\":{\"addInterestRate(uint256,uint256)\":{\"notice\":\"Add new interest rate in to the ordered container of previously added interest rates\"},\"deleteContract(address,uint256)\":{\"notice\":\"Delete the contract, transfers the remaining token and ether balance to the specified payoutAddress\"},\"pauseSince(uint256,uint256)\":{\"notice\":\"Pauses all NON-administrative interaction with the contract since the specidfed block number \"},\"unbindStake(uint256,uint256)\":{\"notice\":\"Unbinds amount from the stake of sender of the transaction,        and *LOCKS* it for number of blocks defined by value of the        `_lockPeriodInBlocks` state of this contract at the point        of this call.        The locked amount can *NOT* be withdrawn from the contract        *BEFORE* the lock period ends.     *         Unbinding (=calling this method) also means, that compound        interest will be calculated for period since la.\"},\"updateLockPeriod(uint64,uint256)\":{\"notice\":\"Updates Lock Period value\"},\"withdraw(uint256,uint256)\":{\"notice\":\"Withdraws amount from sender' available liquidity pool back to sender address,        preferring withdrawal from compound interest dimension of liquidity.\"},\"withdrawCompoundInterest(uint256)\":{\"notice\":\"Withdraws *WHOLE* compound interest amount available to sender.\"},\"withdrawPrincipal(uint256)\":{\"notice\":\"Withdraws *WHOLE* compound interest amount available to sender.\"},\"withdrawWholeLiquidity(uint256)\":{\"notice\":\"Withdraws whole liquidity available to sender back to sender' address,\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/contracts/StakingMock.sol\":\"StakingMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/abdk-libraries/ABDKMath64x64.sol\":{\"keccak256\":\"0x67609bc0923563d05d3a8a7c681056f9702a92120777cb0bcbb40d0afbb4a015\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://55e817969394d4e0201a8cd3763ad6776bc9fddc986febe9b4acf120e8b7ad0d\",\"dweb:/ipfs/QmNMve5ZjUfA8DJYic4sYTrDEAN6VyxcC7jWUTX25Wmnnp\"]},\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/contracts/AssetLib.sol\":{\"keccak256\":\"0x627891fef396f63fae2a38078dd28861689cac7e2d50286eaddf6b9a1109376a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e187942e72c2ed510626977753274ead2201b9a6655bbebac608964837d91d49\",\"dweb:/ipfs/QmTiUziuoAVEo2twWu9qydMKuwKUHW4WojQxweJGnUTDgM\"]},\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/contracts/Finance.sol\":{\"keccak256\":\"0x1295bbe45c79971d2f7228e9ab5ce2b6563aec12cff2539704a2a5f69433225f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://85de9e0ddb40020077f653f294cf9cbcffeb276fa82702e210805396c08c2698\",\"dweb:/ipfs/QmeqoWfLk21PN5ebnLbp58GifGsrheksRPYqKFmLyd1P97\"]},\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/contracts/Staking.sol\":{\"keccak256\":\"0x53912db09c77d22c3a3880515ac7e9effb7d820598f27bddb970a10a8c95c92c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ddf0503ac09a8af192e946efb3248600e3cf71e6cd0c5ad68842380c332eaf60\",\"dweb:/ipfs/QmbbJ18e8MRoU1C3L59YnVHCoKfd1mgeCoYjQArmF25JQA\"]},\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/contracts/StakingMock.sol\":{\"keccak256\":\"0x232b3b0cc8c9a9b21c0664046d2badee15aac3f8050fb14156b511d54ede1151\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e38ac57982aa72283991671e195dd184b3f98a2a0d801ec3fbe2ee3013bbe437\",\"dweb:/ipfs/QmTFYnqDszc655s17EBtW3kWwGcdYRUjhmF8RaKos83ehP\"]},\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"/Users/pb/code/fetch/cosmos/ledger-staking-contract/openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200396a3803806200396a833981810160405260808110156200003757600080fd5b508051602082015160408301516060909301519192909183838383620000686000336001600160e01b03620000f616565b600180546001600160a01b0319166001600160a01b038616179055620000a96205a66d620000956200010f565b6200011560201b6200241e1790919060201c565b600255620000c0816001600160e01b036200017916565b620000d4836001600160e01b03620001cd16565b620000e8826001600160e01b036200026916565b5050505050505050620003e2565b6200010b82826001600160e01b03620002cc16565b5050565b60115490565b60008282018381101562000170576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b600480546001600160401b0383166001600160401b0319909116811790915560408051918252517f6b24ea7c7a8ce7fd2e6a6cb675dbabcd38a90f83ddd581c4435610ce90456e8f9181900360200190a150565b600c546040805180820190915280620001ee6001600160e01b036200010f16565b815260209081018490526000838152600d8252604090208251815591810151600192830155600c546200022c9290916200241e62000115821b17901c565b600c5560408051838152905182917fbcd200f406c53d9438c6cdc2966a1e99c35f336588c95bc3639e539df21c2f53919081900360200190a25050565b60006200027e6001600160e01b036200010f16565b90508082106200028f578162000291565b805b600381905560408051918252517f68b095021b1f40fe513109f513c66692f0b3219aee674a69f4efc57badb8201d9181900360200190a15050565b600082815260208181526040909120620002f1918390620024786200034e821b17901c565b156200010b576200030a6001600160e01b036200036e16565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000170836001600160a01b0384166001600160e01b036200037216565b3390565b60006200038983836001600160e01b03620003ca16565b620003c15750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000173565b50600062000173565b60009081526001919091016020526040902054151590565b61357880620003f26000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c806391d1485411610151578063ca15c873116100c3578063d9d8e78311610087578063d9d8e783146107fa578063dca2aa5c14610802578063e2bbb1581461081f578063ecd0c0c314610842578063f0895e521461084a578063f1209ef71461087757610274565b8063ca15c87314610784578063d547741f146107a1578063d7e0e975146107cd578063d8cd3999146107d5578063d9b202c9146107f257610274565b8063aa700ff211610115578063aa700ff2146106e0578063adf55101146106fd578063ba92a4c514610705578063c0ba241b14610728578063c30f75cf14610730578063c8984ab21461077c57610274565b806391d14854146106295780639608df4b14610669578063a217fddf14610695578063a8c3c8501461069d578063a8f1b4c4146106ba57610274565b806340e97903116101ea5780635f208f34116101ae5780635f208f3414610435578063658e28a41461053957806367ce50c01461055657806368bccfcf1461059557806388cedd5e146105c75780639010d07c146105ea57610274565b806340e97903146103955780634164b001146103bb578063441a3e70146103c357806352885d8d146103e657806353e052ac1461040957610274565b8063292911fb1161023c578063292911fb146103025780632f2ff15d1461030a57806332a1bd7014610336578063347908df1461033e57806336568abe14610361578063372646bb1461038d57610274565b8063085313ec146102795780630c450f9d14610293578063133840391461029b578063248a9ca3146102c05780632514c50a146102dd575b600080fd5b61028161087f565b60408051918252519081900360200190f35b610281610886565b6102be600480360360408110156102b157600080fd5b508035906020013561088c565b005b610281600480360360208110156102d657600080fd5b503561095a565b6102e561096f565b6040805167ffffffffffffffff9092168252519081900360200190f35b61028161097f565b6102be6004803603604081101561032057600080fd5b50803590602001356001600160a01b0316610985565b6102816109f1565b6102be6004803603604081101561035457600080fd5b50803590602001356109f7565b6102be6004803603604081101561037757600080fd5b50803590602001356001600160a01b0316610ac0565b610281610b21565b610281600480360360208110156103ab57600080fd5b50356001600160a01b0316610b28565b610281610b46565b6102be600480360360408110156103d957600080fd5b5080359060200135610b4c565b6102be600480360360408110156103fc57600080fd5b5080359060200135610c2d565b6102be6004803603604081101561041f57600080fd5b506001600160a01b0381351690602001356110c6565b61045b6004803603602081101561044b57600080fd5b50356001600160a01b031661132a565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156104a357818101518382015260200161048b565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156104e25781810151838201526020016104ca565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610521578181015183820152602001610509565b50505050905001965050505050505060405180910390f35b6102be6004803603602081101561054f57600080fd5b50356114bd565b61057c6004803603602081101561056c57600080fd5b50356001600160a01b0316611596565b6040805192835260208301919091528051918290030190f35b6102be600480360360608110156105ab57600080fd5b508035906001600160a01b0360208201351690604001356115af565b6102be600480360360408110156105dd57600080fd5b50803590602001356118c1565b61060d6004803603604081101561060057600080fd5b5080359060200135611a50565b604080516001600160a01b039092168252519081900360200190f35b6106556004803603604081101561063f57600080fd5b50803590602001356001600160a01b0316611a77565b604080519115158252519081900360200190f35b6102be6004803603604081101561067f57600080fd5b506001600160a01b038135169060200135611a95565b610281611cc9565b6102be600480360360208110156106b357600080fd5b5035611cce565b61057c600480360360208110156106d057600080fd5b50356001600160a01b0316611cd3565b61057c600480360360208110156106f657600080fd5b5035611cf6565b610281611d0f565b6102be6004803603604081101561071b57600080fd5b5080359060200135611d15565b610281611e89565b6107566004803603602081101561074657600080fd5b50356001600160a01b0316611eae565b604080519485526020850193909352838301919091526060830152519081900360800190f35b61057c611edf565b6102816004803603602081101561079a57600080fd5b5035611ee8565b6102be600480360360408110156107b757600080fd5b50803590602001356001600160a01b0316611eff565b610281611f58565b6102be600480360360208110156107eb57600080fd5b5035611f5e565b61057c612038565b610281612041565b6102be6004803603602081101561081857600080fd5b5035612047565b6102be6004803603604081101561083557600080fd5b5080359060200135612138565b61060d612340565b6102be6004803603604081101561086057600080fd5b5067ffffffffffffffff813516906020013561234f565b610281612418565b6002545b90565b60055481565b61089461248d565b806108c65750604080516c44454c45474154455f524f4c4560981b8152905190819003600d0190206108c69033611a77565b6109015760405162461bcd60e51b81526004018080602001828103825260248152602001806134606024913960400191505060405180910390fd5b808061090b61249e565b111561094c576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b610955836124a4565b505050565b60009081526020819052604090206002015490565b60045467ffffffffffffffff1681565b60065481565b6000828152602081905260409020600201546109a8906109a361252d565b611a77565b6109e35760405162461bcd60e51b815260040180806020018281038252602f815260200180613431602f913960400191505060405180910390fd5b6109ed8282612531565b5050565b60025481565b8080610a0161249e565b1115610a42576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b610a4a61248d565b80610a7c5750604080516c44454c45474154455f524f4c4560981b8152905190819003600d019020610a7c9033611a77565b610ab75760405162461bcd60e51b81526004018080602001828103825260248152602001806134606024913960400191505060405180910390fd5b610955836125a0565b610ac861252d565b6001600160a01b0316816001600160a01b031614610b175760405162461bcd60e51b815260040180806020018281038252602f815260200180613514602f913960400191505060405180910390fd5b6109ed82826125f6565b6205a66d81565b6001600160a01b03166000908152600f602052604090206002015490565b600c5481565b8080610b5661249e565b1115610b97576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b610b9f61249e565b60035411610be2576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b336000610bed61249e565b90506000610bfb8383612665565b50915050610c07613386565b610c17828863ffffffff6128c316565b9050610c2484828961293c565b50505050505050565b8080610c3761249e565b1115610c78576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b610c8061249e565b60035411610cc3576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b6000610ccd61249e565b9050336000610cdc8284612ae9565b90506000610cec82600201612c62565b9050610cf6613386565b8715610ef85781881115610d51576040805162461bcd60e51b815260206004820152601b60248201527f416d6f756e7420697320686967686572207468616e207374616b650000000000604482015290519081900360640190fd5b60045467ffffffffffffffff16610e29576001600160a01b0384166000908152601060205260409020610d8f9060028501908a63ffffffff612c7c16565b9050610da260078263ffffffff612ca116565b80516020808301516040805193845291830152805187926001600160a01b038816926000805160206134d483398151915292918290030190a38051602080830151604080519384529183015280516001600160a01b038716927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a2610ef3565b6001600160a01b0384166000908152600f6020908152604082206002810180546001810182559084529190922060045460039092020190610e7b90889067ffffffffffffffff1663ffffffff61241e16565b8155610e9460028601600183018c63ffffffff612c7c16565b9250610ea760098463ffffffff612ca116565b610eb7828463ffffffff612ca116565b80548351602080860151604080519384529183015280516001600160a01b038a16926000805160206134d483398151915292908290030190a350505b6110bc565b81610f07575050505050610955565b5060408051808201909152600283018054825260038401805460208401526000918290555560045467ffffffffffffffff16610ffd576001600160a01b0384166000908152601060205260409020610f65908263ffffffff612ca116565b610f7660078263ffffffff612ca116565b80516020808301516040805193845291830152805187926001600160a01b038816926000805160206134d483398151915292918290030190a38051602080830151604080519384529183015280516001600160a01b038716927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a26110bc565b6001600160a01b0384166000908152600f602090815260408220600281018054600181018255908452919092206004546003909202019061104f90889067ffffffffffffffff1663ffffffff61241e16565b8155825160018201556020830151600282015561107360098463ffffffff612ca116565b611083828463ffffffff612ca116565b805460018201546002830154604080519283526020830191909152805133926000805160206134d483398151915292908290030190a350505b5050505050505050565b80806110d061249e565b1115611111576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61111961248d565b611163576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156111ae57600080fd5b505afa1580156111c2573d6000803e3d6000fd5b505050506040513d60208110156111d857600080fd5b50516005546006549192506000916111f59163ffffffff61241e16565b90506000611209838363ffffffff612cdb16565b6001546040805163a9059cbb60e01b81526001600160a01b038a8116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b15801561126157600080fd5b505af1158015611275573d6000803e3d6000fd5b505050506040513d602081101561128b57600080fd5b50516112de576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e6473206f6e20636f6e74722e20616464722e604482015290519081900360640190fd5b604080516001600160a01b03881681526020810183905281517f7f66376a5ef2f39ab4ee2ee6e400606624e66929dba5d82df5b14dd0070a8a87929181900390910190a1505050505050565b6001600160a01b0381166000908152600f602052604090206002018054606091829182919080156114b4578067ffffffffffffffff8111801561136c57600080fd5b50604051908082528060200260200182016040528015611396578160200160208202803683370190505b5094508067ffffffffffffffff811180156113b057600080fd5b506040519080825280602002602001820160405280156113da578160200160208202803683370190505b5093508067ffffffffffffffff811180156113f457600080fd5b5060405190808252806020026020018201604052801561141e578160200160208202803683370190505b50925060005b818110156114b257600083828154811061143a57fe5b906000526020600020906003020190506000816001019050806000015488848151811061146357fe5b602002602001018181525050806001015487848151811061148057fe5b602002602001018181525050816000015486848151811061149d57fe5b60209081029190910101525050600101611424565b505b50509193909250565b80806114c761249e565b1115611508576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61151061249e565b60035411611553576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b33600061155e61249e565b9050600061156c8383612665565b50915050611578613386565b81548082526000835561158e908590839061293c565b505050505050565b6010602052600090815260409020805460019091015482565b80806115b961249e565b11156115fa576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61160261248d565b61164c576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b8361165b5760055493506116b2565b6005548411156116b2576040805162461bcd60e51b815260206004820152601f60248201527f416d6f756e7420686967686572207468616e207265776172647320706f6f6c00604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156116fd57600080fd5b505afa158015611711573d6000803e3d6000fd5b505050506040513d602081101561172757600080fd5b5051600654909150600090611742908763ffffffff61241e16565b905081811115611799576040805162461bcd60e51b815260206004820152601760248201527f436f6e747261637420696e636f6e73697374656e63792e000000000000000000604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038881166004830152602482018a90529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156117ef57600080fd5b505af1158015611803573d6000803e3d6000fd5b505050506040513d602081101561181957600080fd5b505161186c576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e6473206f6e20636f6e74722e20616464722e604482015290519081900360640190fd5b600580548790039055604080516001600160a01b03871681526020810188905281517f8a652d32cc9efc0a4f0fc3708c9fb81d5a924a7b9af2a37c46e9e4910d0dc325929181900390910190a1505050505050565b80806118cb61249e565b111561190c576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61191461249e565b60035411611957576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b826119a9576040805162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d75737420626520686967686572207468616e207a65726f00604482015290519081900360640190fd5b60006119b361249e565b905060006119c13383612665565b5091505060006119d13384612ae9565b90506119db613386565b6119ef83600284018963ffffffff612d1d16565b9050611a0260078263ffffffff612d2f16565b600182015481516020808401516040805193845291830152805133927f0fb741c5ad2cad8215be7b4cab4e3f202f907d4540668ebf954f8e742efd89cf92908290030190a350505050505050565b6000828152602081905260408120611a6e908363ffffffff612d5d16565b90505b92915050565b6000828152602081905260408120611a6e908363ffffffff612d6916565b8080611a9f61249e565b1115611ae0576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b611ae861248d565b611b32576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b611b3a61249e565b6002541015611b90576040805162461bcd60e51b815260206004820152601b60248201527f4561726c696573742064656c657465206e6f7420726561636865640000000000604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611bdb57600080fd5b505afa158015611bef573d6000803e3d6000fd5b505050506040513d6020811015611c0557600080fd5b50516001546040805163a9059cbb60e01b81526001600160a01b03888116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b158015611c5f57600080fd5b505af1158015611c73573d6000803e3d6000fd5b505050506040513d6020811015611c8957600080fd5b5051611c9457600080fd5b6040517fe4dedc7f698868c432fb679313d1381b06601dfb7174d9b18b2e35378b67633390600090a1836001600160a01b0316ff5b600081565b601155565b6001600160a01b03166000908152600f6020526040902080546001909101549091565b600d602052600090815260409020805460019091015482565b60055490565b8080611d1f61249e565b1115611d60576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b82611d6a57610955565b600154604080516323b872dd60e01b81523360048201523060248201526044810186905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b158015611dc457600080fd5b505af1158015611dd8573d6000803e3d6000fd5b505050506040513d6020811015611dee57600080fd5b5051611e33576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b600554611e46908463ffffffff61241e16565b600555604080513381526020810185905281517fb562e06b275d420e5848bb9083041a1c68466a478df92491b473ce99a4c68f68929181900390910190a1505050565b604080516c44454c45474154455f524f4c4560981b8152905190819003600d01902081565b6001600160a01b03166000908152600e60205260409020600281015460038201548254600190930154919390929190565b60075460085482565b6000818152602081905260408120611a7190612d7e565b600082815260208190526040902060020154611f1d906109a361252d565b610b175760405162461bcd60e51b81526004018080602001828103825260308152602001806134846030913960400191505060405180910390fd5b60115481565b8080611f6861249e565b1115611fa9576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b611fb161249e565b60035411611ff4576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b336000611fff61249e565b9050600061200d8383612665565b50915050612019613386565b60018201805460208301819052600090915561158e908590839061293c565b600954600a5482565b600b5481565b808061205161249e565b1115612092576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61209a61249e565b600354116120dd576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b3360006120e861249e565b905060006120f68383612665565b506040805180820190915281548152600182015460208201529092506121279150849061212284612c62565b61293c565b600060018201819055905550505050565b808061214261249e565b1115612183576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61218b61249e565b600354116121ce576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b821580159061230357600154604080516323b872dd60e01b81523360048201523060248201526044810187905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561223157600080fd5b505af1158015612245573d6000803e3d6000fd5b505050506040513d602081101561225b57600080fd5b50516122a0576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b6006546122b3908563ffffffff61241e16565b6006556007546122c9908563ffffffff61241e16565b60075560408051858152905133917f7ff07ce9a287649537e4b012e45cf012d90228b12e2b56bb03515a6b5436fcdf919081900360200190a25b600061230d61249e565b9050600061231b3383612665565b50915050821561158e578054612337908763ffffffff61241e16565b90555050505050565b6001546001600160a01b031681565b808061235961249e565b111561239a576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b6123a261248d565b806123d45750604080516c44454c45474154455f524f4c4560981b8152905190819003600d0190206123d49033611a77565b61240f5760405162461bcd60e51b81526004018080602001828103825260248152602001806134606024913960400191505060405180910390fd5b61095583612d89565b60035481565b600082820183811015611a6e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000611a6e836001600160a01b038416612ddf565b60006124998133611a77565b905090565b60115490565b600c5460408051808201909152806124ba61249e565b815260209081018490526000838152600d82526040902082518155910151600191820155600c546124f09163ffffffff61241e16565b600c5560408051838152905182917fbcd200f406c53d9438c6cdc2966a1e99c35f336588c95bc3639e539df21c2f53919081900360200190a25050565b3390565b600082815260208190526040902061254f908263ffffffff61247816565b156109ed5761255c61252d565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006125aa61249e565b90508082106125b957816125bb565b805b600381905560408051918252517f68b095021b1f40fe513109f513c66692f0b3219aee674a69f4efc57badb8201d9181900360200190a15050565b6000828152602081905260409020612614908263ffffffff612e2916565b156109ed5761262161252d565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b61266d613386565b6001600160a01b0383166000908152600f6020908152604080832060109092528220919060028101825b81548110156127d4576126a86133a0565b8282815481106126b457fe5b6000918252602091829020604080518082018252600390930290910180548352815180830190925260018101548252600201548184015291810191909152805190915088101561270757506001016127cf565b602081015151875161271e9163ffffffff61241e16565b87526020808201518101519088015161273c9163ffffffff61241e16565b602088015282546000190182811461279d5783818154811061275a57fe5b906000526020600020906003020184848154811061277457fe5b600091825260209091208254600390920201908155600180830154908201556002918201549101555b838054806127a757fe5b6000828152602081206003600019909301928302018181556001810182905560020155905550505b612697565b50805461280e576001600160a01b0387166000908152600f60205260408120818155600181018290559061280b60028301826133bf565b50505b84511515806128205750602085015115155b925082156128ba578451602080870151604080519384529183015280516001600160a01b038a16927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a261288260098663ffffffff612d2f16565b80541561289957612899828663ffffffff612d2f16565b6128aa60078663ffffffff612ca116565b6128ba848663ffffffff612ca116565b50509250925092565b6128cb613386565b818360010154106128fc5760018301546128eb908363ffffffff612cdb16565b600184015560208101829052611a71565b600183015461291290839063ffffffff612cdb16565b80825283546129269163ffffffff612cdb16565b8355600190920180546020840152600090555090565b8015610955578160200151600554101561299d576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e647320696e207265776172647320706f6f6c604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156129f357600080fd5b505af1158015612a07573d6000803e3d6000fd5b505050506040513d6020811015612a1d57600080fd5b5051612a62576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b6020820151600554612a799163ffffffff612cdb16565b6005558151600654612a909163ffffffff612cdb16565b600655612aa460078363ffffffff612d2f16565b81516020808401516040805193845291830152805133927ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56892908290030190a2505050565b6001600160a01b0382166000908152600e6020526040812090612b0e60028301612c62565b90508015612bed57815460018301545b600c54811015612bcf576000818152600d602052604090208054831015612b8c576040805162461bcd60e51b815260206004820152601860248201527f73696e6365426c6f636b20696e636f6e73697374656e63790000000000000000604482015290519081900360640190fd5b600c5486906001840190811015612baf576000818152600d602052604090205491505b612bc0868460010154878503612e3e565b95509093505050600101612b1e565b506002830154612be690839063ffffffff612cdb16565b6003840155505b828255600c54612bfe576000612c05565b6001600c54035b600183018190556002830154600384015460408051928352602083019190915280516001600160a01b038816927f6b6b43cdaf8f2ae06bdc6f6be433bb374b703ce8c88db4adce9dd8aefe44fe6d92908290030190a35092915050565b60018101548154600091611a71919063ffffffff61241e16565b612c84613386565b612c8e84836128c3565b9050612c9a8382612ca1565b9392505050565b80518254612cb49163ffffffff61241e16565b825560208101516001830154612ccf9163ffffffff61241e16565b82600101819055505050565b6000611a6e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612e7e565b612d25613386565b612c8e8483612f15565b80518254612d429163ffffffff612cdb16565b825560208101516001830154612ccf9163ffffffff612cdb16565b6000611a6e8383612f81565b6000611a6e836001600160a01b038416612fe5565b6000611a7182612ffd565b6004805467ffffffffffffffff831667ffffffffffffffff19909116811790915560408051918252517f6b24ea7c7a8ce7fd2e6a6cb675dbabcd38a90f83ddd581c4435610ce90456e8f9181900360200190a150565b6000612deb8383612fe5565b612e2157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611a71565b506000611a71565b6000611a6e836001600160a01b038416613001565b6000612e76612e70612e6a612e5360016130c7565b612e6587670de0b6b3a76400006130e5565b61311c565b84613150565b8561319e565b949350505050565b60008184841115612f0d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612ed2578181015183820152602001612eba565b50505050905090810190601f168015612eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b612f1d613386565b82548211612f41578254612f37908363ffffffff612cdb16565b8355818152611a71565b8254612f5490839063ffffffff612cdb16565b602082018190526001840154612f6f9163ffffffff612cdb16565b60018401558254815260009092555090565b81546000908210612fc35760405162461bcd60e51b815260040180806020018281038252602281526020018061340f6022913960400191505060405180910390fd5b826000018281548110612fd257fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b600081815260018301602052604081205480156130bd578354600019808301919081019060009087908390811061303457fe5b906000526020600020015490508087600001848154811061305157fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061308157fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611a71565b6000915050611a71565b6000677fffffffffffffff8211156130de57600080fd5b5060401b90565b6000816130f157600080fd5b60006130fd8484613206565b905060016001607f1b036001600160801b0382161115611a6e57600080fd5b6000600f83810b9083900b0160016001607f1b03198112801590613147575060016001607f1b038113155b611a6e57600080fd5b600061315c60016130c7565b90505b8115611a71576001821615613185576131788184613350565b9050600182039150613199565b61318f8384613350565b9250600182901c91505b61315f565b6000816131ad57506000611a71565b600083600f0b12156131be57600080fd5b600f83900b6001600160801b038316810260401c90608084901c026001600160c01b038111156131ed57600080fd5b60401b81198111156131fe57600080fd5b019392505050565b60008161321257600080fd5b60006001600160c01b0384116132375782604085901b8161322f57fe5b04905061333c565b60c084811c6401000000008110613250576020918201911c5b620100008110613262576010918201911c5b6101008110613273576008918201911c5b60108110613283576004918201911c5b60048110613293576002918201911c5b600281106132a2576001820191505b60bf820360018603901c6001018260ff0387901b816132bd57fe5b0492506001600160801b038311156132d457600080fd5b608085901c83026001600160801b038616840260c088901c604089901b82811015613300576001820391505b608084901b92900382811015613317576001820391505b829003608084901c821461332757fe5b88818161333057fe5b04870196505050505050505b6001600160801b03811115611a6e57600080fd5b6000600f83810b9083900b0260401d60016001607f1b03198112801590613147575060016001607f1b03811315611a6e57600080fd5b604051806040016040528060008152602001600081525090565b6040518060400160405280600081526020016133ba613386565b905290565b50805460008255600302906000526020600020908101906133e091906133e3565b50565b61088391905b8082111561340a5760008082556001820181905560028201556003016133e9565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7443616c6c6572206973206e656974686572206f776e6572206e6f722064656c6567617465416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b655472616e73616374696f6e2065787069726564000000000000000000000000005bfe1e16d75ca1fa001989652cd88c5b8ee8a59b5df6df99836337def4d1c82d436f6e747261637420686173206265656e207061757365640000000000000000416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220bbf4e8cb30fac391b5c6ab05c39ee67a4a820d55e4e0d85575586a0369f6f44164736f6c63430006080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102745760003560e01c806391d1485411610151578063ca15c873116100c3578063d9d8e78311610087578063d9d8e783146107fa578063dca2aa5c14610802578063e2bbb1581461081f578063ecd0c0c314610842578063f0895e521461084a578063f1209ef71461087757610274565b8063ca15c87314610784578063d547741f146107a1578063d7e0e975146107cd578063d8cd3999146107d5578063d9b202c9146107f257610274565b8063aa700ff211610115578063aa700ff2146106e0578063adf55101146106fd578063ba92a4c514610705578063c0ba241b14610728578063c30f75cf14610730578063c8984ab21461077c57610274565b806391d14854146106295780639608df4b14610669578063a217fddf14610695578063a8c3c8501461069d578063a8f1b4c4146106ba57610274565b806340e97903116101ea5780635f208f34116101ae5780635f208f3414610435578063658e28a41461053957806367ce50c01461055657806368bccfcf1461059557806388cedd5e146105c75780639010d07c146105ea57610274565b806340e97903146103955780634164b001146103bb578063441a3e70146103c357806352885d8d146103e657806353e052ac1461040957610274565b8063292911fb1161023c578063292911fb146103025780632f2ff15d1461030a57806332a1bd7014610336578063347908df1461033e57806336568abe14610361578063372646bb1461038d57610274565b8063085313ec146102795780630c450f9d14610293578063133840391461029b578063248a9ca3146102c05780632514c50a146102dd575b600080fd5b61028161087f565b60408051918252519081900360200190f35b610281610886565b6102be600480360360408110156102b157600080fd5b508035906020013561088c565b005b610281600480360360208110156102d657600080fd5b503561095a565b6102e561096f565b6040805167ffffffffffffffff9092168252519081900360200190f35b61028161097f565b6102be6004803603604081101561032057600080fd5b50803590602001356001600160a01b0316610985565b6102816109f1565b6102be6004803603604081101561035457600080fd5b50803590602001356109f7565b6102be6004803603604081101561037757600080fd5b50803590602001356001600160a01b0316610ac0565b610281610b21565b610281600480360360208110156103ab57600080fd5b50356001600160a01b0316610b28565b610281610b46565b6102be600480360360408110156103d957600080fd5b5080359060200135610b4c565b6102be600480360360408110156103fc57600080fd5b5080359060200135610c2d565b6102be6004803603604081101561041f57600080fd5b506001600160a01b0381351690602001356110c6565b61045b6004803603602081101561044b57600080fd5b50356001600160a01b031661132a565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156104a357818101518382015260200161048b565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156104e25781810151838201526020016104ca565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610521578181015183820152602001610509565b50505050905001965050505050505060405180910390f35b6102be6004803603602081101561054f57600080fd5b50356114bd565b61057c6004803603602081101561056c57600080fd5b50356001600160a01b0316611596565b6040805192835260208301919091528051918290030190f35b6102be600480360360608110156105ab57600080fd5b508035906001600160a01b0360208201351690604001356115af565b6102be600480360360408110156105dd57600080fd5b50803590602001356118c1565b61060d6004803603604081101561060057600080fd5b5080359060200135611a50565b604080516001600160a01b039092168252519081900360200190f35b6106556004803603604081101561063f57600080fd5b50803590602001356001600160a01b0316611a77565b604080519115158252519081900360200190f35b6102be6004803603604081101561067f57600080fd5b506001600160a01b038135169060200135611a95565b610281611cc9565b6102be600480360360208110156106b357600080fd5b5035611cce565b61057c600480360360208110156106d057600080fd5b50356001600160a01b0316611cd3565b61057c600480360360208110156106f657600080fd5b5035611cf6565b610281611d0f565b6102be6004803603604081101561071b57600080fd5b5080359060200135611d15565b610281611e89565b6107566004803603602081101561074657600080fd5b50356001600160a01b0316611eae565b604080519485526020850193909352838301919091526060830152519081900360800190f35b61057c611edf565b6102816004803603602081101561079a57600080fd5b5035611ee8565b6102be600480360360408110156107b757600080fd5b50803590602001356001600160a01b0316611eff565b610281611f58565b6102be600480360360208110156107eb57600080fd5b5035611f5e565b61057c612038565b610281612041565b6102be6004803603602081101561081857600080fd5b5035612047565b6102be6004803603604081101561083557600080fd5b5080359060200135612138565b61060d612340565b6102be6004803603604081101561086057600080fd5b5067ffffffffffffffff813516906020013561234f565b610281612418565b6002545b90565b60055481565b61089461248d565b806108c65750604080516c44454c45474154455f524f4c4560981b8152905190819003600d0190206108c69033611a77565b6109015760405162461bcd60e51b81526004018080602001828103825260248152602001806134606024913960400191505060405180910390fd5b808061090b61249e565b111561094c576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b610955836124a4565b505050565b60009081526020819052604090206002015490565b60045467ffffffffffffffff1681565b60065481565b6000828152602081905260409020600201546109a8906109a361252d565b611a77565b6109e35760405162461bcd60e51b815260040180806020018281038252602f815260200180613431602f913960400191505060405180910390fd5b6109ed8282612531565b5050565b60025481565b8080610a0161249e565b1115610a42576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b610a4a61248d565b80610a7c5750604080516c44454c45474154455f524f4c4560981b8152905190819003600d019020610a7c9033611a77565b610ab75760405162461bcd60e51b81526004018080602001828103825260248152602001806134606024913960400191505060405180910390fd5b610955836125a0565b610ac861252d565b6001600160a01b0316816001600160a01b031614610b175760405162461bcd60e51b815260040180806020018281038252602f815260200180613514602f913960400191505060405180910390fd5b6109ed82826125f6565b6205a66d81565b6001600160a01b03166000908152600f602052604090206002015490565b600c5481565b8080610b5661249e565b1115610b97576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b610b9f61249e565b60035411610be2576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b336000610bed61249e565b90506000610bfb8383612665565b50915050610c07613386565b610c17828863ffffffff6128c316565b9050610c2484828961293c565b50505050505050565b8080610c3761249e565b1115610c78576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b610c8061249e565b60035411610cc3576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b6000610ccd61249e565b9050336000610cdc8284612ae9565b90506000610cec82600201612c62565b9050610cf6613386565b8715610ef85781881115610d51576040805162461bcd60e51b815260206004820152601b60248201527f416d6f756e7420697320686967686572207468616e207374616b650000000000604482015290519081900360640190fd5b60045467ffffffffffffffff16610e29576001600160a01b0384166000908152601060205260409020610d8f9060028501908a63ffffffff612c7c16565b9050610da260078263ffffffff612ca116565b80516020808301516040805193845291830152805187926001600160a01b038816926000805160206134d483398151915292918290030190a38051602080830151604080519384529183015280516001600160a01b038716927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a2610ef3565b6001600160a01b0384166000908152600f6020908152604082206002810180546001810182559084529190922060045460039092020190610e7b90889067ffffffffffffffff1663ffffffff61241e16565b8155610e9460028601600183018c63ffffffff612c7c16565b9250610ea760098463ffffffff612ca116565b610eb7828463ffffffff612ca116565b80548351602080860151604080519384529183015280516001600160a01b038a16926000805160206134d483398151915292908290030190a350505b6110bc565b81610f07575050505050610955565b5060408051808201909152600283018054825260038401805460208401526000918290555560045467ffffffffffffffff16610ffd576001600160a01b0384166000908152601060205260409020610f65908263ffffffff612ca116565b610f7660078263ffffffff612ca116565b80516020808301516040805193845291830152805187926001600160a01b038816926000805160206134d483398151915292918290030190a38051602080830151604080519384529183015280516001600160a01b038716927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a26110bc565b6001600160a01b0384166000908152600f602090815260408220600281018054600181018255908452919092206004546003909202019061104f90889067ffffffffffffffff1663ffffffff61241e16565b8155825160018201556020830151600282015561107360098463ffffffff612ca116565b611083828463ffffffff612ca116565b805460018201546002830154604080519283526020830191909152805133926000805160206134d483398151915292908290030190a350505b5050505050505050565b80806110d061249e565b1115611111576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61111961248d565b611163576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156111ae57600080fd5b505afa1580156111c2573d6000803e3d6000fd5b505050506040513d60208110156111d857600080fd5b50516005546006549192506000916111f59163ffffffff61241e16565b90506000611209838363ffffffff612cdb16565b6001546040805163a9059cbb60e01b81526001600160a01b038a8116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b15801561126157600080fd5b505af1158015611275573d6000803e3d6000fd5b505050506040513d602081101561128b57600080fd5b50516112de576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e6473206f6e20636f6e74722e20616464722e604482015290519081900360640190fd5b604080516001600160a01b03881681526020810183905281517f7f66376a5ef2f39ab4ee2ee6e400606624e66929dba5d82df5b14dd0070a8a87929181900390910190a1505050505050565b6001600160a01b0381166000908152600f602052604090206002018054606091829182919080156114b4578067ffffffffffffffff8111801561136c57600080fd5b50604051908082528060200260200182016040528015611396578160200160208202803683370190505b5094508067ffffffffffffffff811180156113b057600080fd5b506040519080825280602002602001820160405280156113da578160200160208202803683370190505b5093508067ffffffffffffffff811180156113f457600080fd5b5060405190808252806020026020018201604052801561141e578160200160208202803683370190505b50925060005b818110156114b257600083828154811061143a57fe5b906000526020600020906003020190506000816001019050806000015488848151811061146357fe5b602002602001018181525050806001015487848151811061148057fe5b602002602001018181525050816000015486848151811061149d57fe5b60209081029190910101525050600101611424565b505b50509193909250565b80806114c761249e565b1115611508576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61151061249e565b60035411611553576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b33600061155e61249e565b9050600061156c8383612665565b50915050611578613386565b81548082526000835561158e908590839061293c565b505050505050565b6010602052600090815260409020805460019091015482565b80806115b961249e565b11156115fa576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61160261248d565b61164c576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b8361165b5760055493506116b2565b6005548411156116b2576040805162461bcd60e51b815260206004820152601f60248201527f416d6f756e7420686967686572207468616e207265776172647320706f6f6c00604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156116fd57600080fd5b505afa158015611711573d6000803e3d6000fd5b505050506040513d602081101561172757600080fd5b5051600654909150600090611742908763ffffffff61241e16565b905081811115611799576040805162461bcd60e51b815260206004820152601760248201527f436f6e747261637420696e636f6e73697374656e63792e000000000000000000604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038881166004830152602482018a90529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156117ef57600080fd5b505af1158015611803573d6000803e3d6000fd5b505050506040513d602081101561181957600080fd5b505161186c576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e6473206f6e20636f6e74722e20616464722e604482015290519081900360640190fd5b600580548790039055604080516001600160a01b03871681526020810188905281517f8a652d32cc9efc0a4f0fc3708c9fb81d5a924a7b9af2a37c46e9e4910d0dc325929181900390910190a1505050505050565b80806118cb61249e565b111561190c576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61191461249e565b60035411611957576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b826119a9576040805162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d75737420626520686967686572207468616e207a65726f00604482015290519081900360640190fd5b60006119b361249e565b905060006119c13383612665565b5091505060006119d13384612ae9565b90506119db613386565b6119ef83600284018963ffffffff612d1d16565b9050611a0260078263ffffffff612d2f16565b600182015481516020808401516040805193845291830152805133927f0fb741c5ad2cad8215be7b4cab4e3f202f907d4540668ebf954f8e742efd89cf92908290030190a350505050505050565b6000828152602081905260408120611a6e908363ffffffff612d5d16565b90505b92915050565b6000828152602081905260408120611a6e908363ffffffff612d6916565b8080611a9f61249e565b1115611ae0576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b611ae861248d565b611b32576040805162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604482015290519081900360640190fd5b611b3a61249e565b6002541015611b90576040805162461bcd60e51b815260206004820152601b60248201527f4561726c696573742064656c657465206e6f7420726561636865640000000000604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611bdb57600080fd5b505afa158015611bef573d6000803e3d6000fd5b505050506040513d6020811015611c0557600080fd5b50516001546040805163a9059cbb60e01b81526001600160a01b03888116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b158015611c5f57600080fd5b505af1158015611c73573d6000803e3d6000fd5b505050506040513d6020811015611c8957600080fd5b5051611c9457600080fd5b6040517fe4dedc7f698868c432fb679313d1381b06601dfb7174d9b18b2e35378b67633390600090a1836001600160a01b0316ff5b600081565b601155565b6001600160a01b03166000908152600f6020526040902080546001909101549091565b600d602052600090815260409020805460019091015482565b60055490565b8080611d1f61249e565b1115611d60576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b82611d6a57610955565b600154604080516323b872dd60e01b81523360048201523060248201526044810186905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b158015611dc457600080fd5b505af1158015611dd8573d6000803e3d6000fd5b505050506040513d6020811015611dee57600080fd5b5051611e33576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b600554611e46908463ffffffff61241e16565b600555604080513381526020810185905281517fb562e06b275d420e5848bb9083041a1c68466a478df92491b473ce99a4c68f68929181900390910190a1505050565b604080516c44454c45474154455f524f4c4560981b8152905190819003600d01902081565b6001600160a01b03166000908152600e60205260409020600281015460038201548254600190930154919390929190565b60075460085482565b6000818152602081905260408120611a7190612d7e565b600082815260208190526040902060020154611f1d906109a361252d565b610b175760405162461bcd60e51b81526004018080602001828103825260308152602001806134846030913960400191505060405180910390fd5b60115481565b8080611f6861249e565b1115611fa9576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b611fb161249e565b60035411611ff4576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b336000611fff61249e565b9050600061200d8383612665565b50915050612019613386565b60018201805460208301819052600090915561158e908590839061293c565b600954600a5482565b600b5481565b808061205161249e565b1115612092576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61209a61249e565b600354116120dd576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b3360006120e861249e565b905060006120f68383612665565b506040805180820190915281548152600182015460208201529092506121279150849061212284612c62565b61293c565b600060018201819055905550505050565b808061214261249e565b1115612183576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b61218b61249e565b600354116121ce576040805162461bcd60e51b815260206004820152601860248201526000805160206134f4833981519152604482015290519081900360640190fd5b821580159061230357600154604080516323b872dd60e01b81523360048201523060248201526044810187905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561223157600080fd5b505af1158015612245573d6000803e3d6000fd5b505050506040513d602081101561225b57600080fd5b50516122a0576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b6006546122b3908563ffffffff61241e16565b6006556007546122c9908563ffffffff61241e16565b60075560408051858152905133917f7ff07ce9a287649537e4b012e45cf012d90228b12e2b56bb03515a6b5436fcdf919081900360200190a25b600061230d61249e565b9050600061231b3383612665565b50915050821561158e578054612337908763ffffffff61241e16565b90555050505050565b6001546001600160a01b031681565b808061235961249e565b111561239a576040805162461bcd60e51b815260206004820152601360248201526000805160206134b4833981519152604482015290519081900360640190fd5b6123a261248d565b806123d45750604080516c44454c45474154455f524f4c4560981b8152905190819003600d0190206123d49033611a77565b61240f5760405162461bcd60e51b81526004018080602001828103825260248152602001806134606024913960400191505060405180910390fd5b61095583612d89565b60035481565b600082820183811015611a6e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000611a6e836001600160a01b038416612ddf565b60006124998133611a77565b905090565b60115490565b600c5460408051808201909152806124ba61249e565b815260209081018490526000838152600d82526040902082518155910151600191820155600c546124f09163ffffffff61241e16565b600c5560408051838152905182917fbcd200f406c53d9438c6cdc2966a1e99c35f336588c95bc3639e539df21c2f53919081900360200190a25050565b3390565b600082815260208190526040902061254f908263ffffffff61247816565b156109ed5761255c61252d565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006125aa61249e565b90508082106125b957816125bb565b805b600381905560408051918252517f68b095021b1f40fe513109f513c66692f0b3219aee674a69f4efc57badb8201d9181900360200190a15050565b6000828152602081905260409020612614908263ffffffff612e2916565b156109ed5761262161252d565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b61266d613386565b6001600160a01b0383166000908152600f6020908152604080832060109092528220919060028101825b81548110156127d4576126a86133a0565b8282815481106126b457fe5b6000918252602091829020604080518082018252600390930290910180548352815180830190925260018101548252600201548184015291810191909152805190915088101561270757506001016127cf565b602081015151875161271e9163ffffffff61241e16565b87526020808201518101519088015161273c9163ffffffff61241e16565b602088015282546000190182811461279d5783818154811061275a57fe5b906000526020600020906003020184848154811061277457fe5b600091825260209091208254600390920201908155600180830154908201556002918201549101555b838054806127a757fe5b6000828152602081206003600019909301928302018181556001810182905560020155905550505b612697565b50805461280e576001600160a01b0387166000908152600f60205260408120818155600181018290559061280b60028301826133bf565b50505b84511515806128205750602085015115155b925082156128ba578451602080870151604080519384529183015280516001600160a01b038a16927fa219ed960eef85ed4cd072d3a9f240ea94727c0d6fb15e9a91a8cd4bf18ee3a692908290030190a261288260098663ffffffff612d2f16565b80541561289957612899828663ffffffff612d2f16565b6128aa60078663ffffffff612ca116565b6128ba848663ffffffff612ca116565b50509250925092565b6128cb613386565b818360010154106128fc5760018301546128eb908363ffffffff612cdb16565b600184015560208101829052611a71565b600183015461291290839063ffffffff612cdb16565b80825283546129269163ffffffff612cdb16565b8355600190920180546020840152600090555090565b8015610955578160200151600554101561299d576040805162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f7567682066756e647320696e207265776172647320706f6f6c604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156129f357600080fd5b505af1158015612a07573d6000803e3d6000fd5b505050506040513d6020811015612a1d57600080fd5b5051612a62576040805162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b6020820151600554612a799163ffffffff612cdb16565b6005558151600654612a909163ffffffff612cdb16565b600655612aa460078363ffffffff612d2f16565b81516020808401516040805193845291830152805133927ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56892908290030190a2505050565b6001600160a01b0382166000908152600e6020526040812090612b0e60028301612c62565b90508015612bed57815460018301545b600c54811015612bcf576000818152600d602052604090208054831015612b8c576040805162461bcd60e51b815260206004820152601860248201527f73696e6365426c6f636b20696e636f6e73697374656e63790000000000000000604482015290519081900360640190fd5b600c5486906001840190811015612baf576000818152600d602052604090205491505b612bc0868460010154878503612e3e565b95509093505050600101612b1e565b506002830154612be690839063ffffffff612cdb16565b6003840155505b828255600c54612bfe576000612c05565b6001600c54035b600183018190556002830154600384015460408051928352602083019190915280516001600160a01b038816927f6b6b43cdaf8f2ae06bdc6f6be433bb374b703ce8c88db4adce9dd8aefe44fe6d92908290030190a35092915050565b60018101548154600091611a71919063ffffffff61241e16565b612c84613386565b612c8e84836128c3565b9050612c9a8382612ca1565b9392505050565b80518254612cb49163ffffffff61241e16565b825560208101516001830154612ccf9163ffffffff61241e16565b82600101819055505050565b6000611a6e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612e7e565b612d25613386565b612c8e8483612f15565b80518254612d429163ffffffff612cdb16565b825560208101516001830154612ccf9163ffffffff612cdb16565b6000611a6e8383612f81565b6000611a6e836001600160a01b038416612fe5565b6000611a7182612ffd565b6004805467ffffffffffffffff831667ffffffffffffffff19909116811790915560408051918252517f6b24ea7c7a8ce7fd2e6a6cb675dbabcd38a90f83ddd581c4435610ce90456e8f9181900360200190a150565b6000612deb8383612fe5565b612e2157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611a71565b506000611a71565b6000611a6e836001600160a01b038416613001565b6000612e76612e70612e6a612e5360016130c7565b612e6587670de0b6b3a76400006130e5565b61311c565b84613150565b8561319e565b949350505050565b60008184841115612f0d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612ed2578181015183820152602001612eba565b50505050905090810190601f168015612eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b612f1d613386565b82548211612f41578254612f37908363ffffffff612cdb16565b8355818152611a71565b8254612f5490839063ffffffff612cdb16565b602082018190526001840154612f6f9163ffffffff612cdb16565b60018401558254815260009092555090565b81546000908210612fc35760405162461bcd60e51b815260040180806020018281038252602281526020018061340f6022913960400191505060405180910390fd5b826000018281548110612fd257fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b600081815260018301602052604081205480156130bd578354600019808301919081019060009087908390811061303457fe5b906000526020600020015490508087600001848154811061305157fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061308157fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611a71565b6000915050611a71565b6000677fffffffffffffff8211156130de57600080fd5b5060401b90565b6000816130f157600080fd5b60006130fd8484613206565b905060016001607f1b036001600160801b0382161115611a6e57600080fd5b6000600f83810b9083900b0160016001607f1b03198112801590613147575060016001607f1b038113155b611a6e57600080fd5b600061315c60016130c7565b90505b8115611a71576001821615613185576131788184613350565b9050600182039150613199565b61318f8384613350565b9250600182901c91505b61315f565b6000816131ad57506000611a71565b600083600f0b12156131be57600080fd5b600f83900b6001600160801b038316810260401c90608084901c026001600160c01b038111156131ed57600080fd5b60401b81198111156131fe57600080fd5b019392505050565b60008161321257600080fd5b60006001600160c01b0384116132375782604085901b8161322f57fe5b04905061333c565b60c084811c6401000000008110613250576020918201911c5b620100008110613262576010918201911c5b6101008110613273576008918201911c5b60108110613283576004918201911c5b60048110613293576002918201911c5b600281106132a2576001820191505b60bf820360018603901c6001018260ff0387901b816132bd57fe5b0492506001600160801b038311156132d457600080fd5b608085901c83026001600160801b038616840260c088901c604089901b82811015613300576001820391505b608084901b92900382811015613317576001820391505b829003608084901c821461332757fe5b88818161333057fe5b04870196505050505050505b6001600160801b03811115611a6e57600080fd5b6000600f83810b9083900b0260401d60016001607f1b03198112801590613147575060016001607f1b03811315611a6e57600080fd5b604051806040016040528060008152602001600081525090565b6040518060400160405280600081526020016133ba613386565b905290565b50805460008255600302906000526020600020908101906133e091906133e3565b50565b61088391905b8082111561340a5760008082556001820181905560028201556003016133e9565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7443616c6c6572206973206e656974686572206f776e6572206e6f722064656c6567617465416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b655472616e73616374696f6e2065787069726564000000000000000000000000005bfe1e16d75ca1fa001989652cd88c5b8ee8a59b5df6df99836337def4d1c82d436f6e747261637420686173206265656e207061757365640000000000000000416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220bbf4e8cb30fac391b5c6ab05c39ee67a4a820d55e4e0d85575586a0369f6f44164736f6c63430006080033",
  "immutableReferences": {},
  "sourceMap": "871:733:7:-:0;;;943:447;5:9:-1;2:2;;;27:1;24;17:12;2:2;943:447:7;;;;;;;;;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;943:447:7;;;;;;;;;;;;;;;;;;;;;;;7012:42:6;1762:4:9;7043:10:6;-1:-1:-1;;;;;7012:10:6;:42;:::i;:::-;7065:6;:29;;-1:-1:-1;;;;;;7065:29:6;-1:-1:-1;;;;;7065:29:6;;;;;7122:47;4364:6;7122:17;:15;:17::i;:::-;:21;;;;;;:47;;;;:::i;:::-;7104:15;:65;7494:37;7512:18;-1:-1:-1;;;;;7494:17:6;:37;:::i;:::-;7541:38;7558:20;-1:-1:-1;;;;;7541:16:6;:38;:::i;:::-;7589:46;7601:16;-1:-1:-1;;;;;7589:11:6;:46;:::i;:::-;6829:813;;;;943:447:7;;;;871:733;;6578:110:9;6656:25;6667:4;6673:7;-1:-1:-1;;;;;6656:10:9;:25;:::i;:::-;6578:110;;:::o;1397:103:7:-;1481:12;;1397:103;:::o;874:176:10:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;-1:-1:-1;874:176:10;;;;;:::o;26522:148:6:-;26592:19;:33;;-1:-1:-1;;;;;26592:33:6;;-1:-1:-1;;;;;;26592:33:6;;;;;;;;26640:23;;;;;;;;;;;;;;;;26522:148;:::o;26015:390::-;26093:21;;26146:148;;;;;;;;;;26195:17;-1:-1:-1;;;;;26195:15:6;:17;:::i;:::-;26146:148;;;;;;;;;-1:-1:-1;26124:19:6;;;:14;:19;;;;;:170;;;;;;;;;;;;;26328:21;;:28;;:21;;:25;;;;;:28;;:::i;:::-;26304:21;:52;26372:26;;;;;;;;26388:3;;26372:26;;;;;;;;;;26015:390;;:::o;26933:255::-;26999:26;27028:17;-1:-1:-1;;;;;27028:15:6;:17;:::i;:::-;26999:46;;27089:18;27075:11;:32;:67;;27131:11;27075:67;;;27110:18;27075:67;27055:17;:87;;;27157:24;;;;;;;;;;;;;;;;26933:255;;:::o;7015:184:9:-;7088:6;:12;;;;;;;;;;;:33;;7113:7;;7088:24;;;;;:33;;:::i;:::-;7084:109;;;7169:12;-1:-1:-1;;;;;7169:10:9;:12;:::i;:::-;-1:-1:-1;;;;;7142:40:9;7160:7;-1:-1:-1;;;;;7142:40:9;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;4864:141:15:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:15;;-1:-1:-1;;;;;4957:4:15;:41;:::i;590:104:8:-;677:10;590:104;:::o;1611:404:15:-;1674:4;1695:21;1705:3;1710:5;-1:-1:-1;;;;;1695:9:15;:21;:::i;:::-;1690:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1732:11:15;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:15;1986:12;;3776:127;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;871:733:7:-;;;;;;;",
  "deployedSourceMap": "871:733:7:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;871:733:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;17935:104:6;;;:::i;:::-;;;;;;;;;;;;;;;;5441:34;;;:::i;8281:217::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;8281:217:6;;;;;;;:::i;:::-;;4272:112:9;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4272:112:9;;:::i;5280:33:6:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5608:38;;;:::i;4634:223:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4634:223:9;;;;;;-1:-1:-1;;;;;4634:223:9;;:::i;5201:30:6:-;;;:::i;21515:197::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;21515:197:6;;;;;;;:::i;5808:205:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5808:205:9;;;;;;-1:-1:-1;;;;;5808:205:9;;:::i;4313:57:6:-;;;:::i;18046:157::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;18046:157:6;-1:-1:-1;;;;;18046:157:6;;:::i;5813:36::-;;;:::i;9618:495::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;9618:495:6;;;;;;;:::i;14174:3640::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;14174:3640:6;;;;;;;:::i;23734:782::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;23734:782:6;;;;;;;;:::i;18723:846::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;18723:846:6;-1:-1:-1;;;;;18723:846:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18723:846:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18723:846:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18723:846:6;;;;;;;;;;;;;;;;;;;;;10248:529;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;10248:529:6;;:::i;6003:52::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6003:52:6;-1:-1:-1;;;;;6003:52:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21981:1120;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;21981:1120:6;;;-1:-1:-1;;;;;21981:1120:6;;;;;;;;;;:::i;12116:1291::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;12116:1291:6;;;;;;;:::i;3955:136:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3955:136:9;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3955:136:9;;;;;;;;;;;;;;2940:137;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2940:137:9;;;;;;-1:-1:-1;;;;;2940:137:9;;:::i;:::-;;;;;;;;;;;;;;;;;;24840:449:6;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;24840:449:6;;;;;;;;:::i;1717:49:9:-;;;:::i;1507:95:7:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1507:95:7;;:::i;18210:275:6:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;18210:275:6;-1:-1:-1;;;;;18210:275:6;;:::i;5855:62::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5855:62:6;;:::i;17821:107::-;;;:::i;20437:438::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;20437:438:6;;;;;;;:::i;4241:66::-;;;:::i;19576:424::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;19576:424:6;-1:-1:-1;;;;;19576:424:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5652:45;;;:::i;3245:125:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3245:125:9;;:::i;5091:226::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5091:226:9;;;;;;-1:-1:-1;;;;;5091:226:9;;:::i;909:27:7:-;;;:::i;10912:564:6:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;10912:564:6;;:::i;5712:42::-;;;:::i;5770:37::-;;;:::i;11618:491::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;11618:491:6;;:::i;8505:831::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;8505:831:6;;;;;;;:::i;4427:20::-;;;:::i;21018:208::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;21018:208:6;;;;;;;;;:::i;5242:32::-;;;:::i;17935:104::-;18017:15;;17935:104;;:::o;5441:34::-;;;;:::o;8281:217::-;6283:10;:8;:10::i;:::-;:48;;;-1:-1:-1;4281:26:6;;;-1:-1:-1;;;4281:26:6;;;;;;;;;;;;6297:34;;6320:10;6297:7;:34::i;:::-;6275:97;;;;-1:-1:-1;;;6275:97:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8438:15:::1;6488;6467:17;:15;:17::i;:::-;:36;;6459:68;;;::::0;;-1:-1:-1;;;6459:68:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;::::1;;8469:22:::2;8486:4;8469:16;:22::i;:::-;6382:1:::1;8281:217:::0;;:::o;4272:112:9:-;4329:7;4355:12;;;;;;;;;;:22;;;;4272:112::o;5280:33:6:-;;;;;;:::o;5608:38::-;;;;:::o;4634:223:9:-;4725:6;:12;;;;;;;;;;:22;;;4717:45;;4749:12;:10;:12::i;:::-;4717:7;:45::i;:::-;4709:105;;;;-1:-1:-1;;;4709:105:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;5201:30:6:-;;;;:::o;21515:197::-;21627:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6283:10:::1;:8;:10::i;:::-;:48;;;-1:-1:-1::0;4281:26:6::1;::::0;;-1:-1:-1;;;4281:26:6;;;;;;;;::::1;::::0;;;6297:34:::1;::::0;6320:10:::1;6297:7;:34::i;:::-;6275:97;;;;-1:-1:-1::0;;;6275:97:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21681:24:::2;21693:11;21681;:24::i;5808:205:9:-:0;5905:12;:10;:12::i;:::-;-1:-1:-1;;;;;5894:23:9;:7;-1:-1:-1;;;;;5894:23:9;;5886:83;;;;-1:-1:-1;;;5886:83:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;4313:57:6:-;4364:6;4313:57;:::o;18046:157::-;-1:-1:-1;;;;;18163:19:6;18128:14;18163:19;;;:7;:19;;;;;:26;;:33;;18046:157::o;5813:36::-;;;;:::o;9618:495::-;9749:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6616:17:::1;:15;:17::i;:::-;6596;;:37;6588:74;;;::::0;;-1:-1:-1;;;6588:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6588:74:6;;;;;;;;;;;;;::::1;;9823:10:::2;9806:14;9864:17;:15;:17::i;:::-;9843:38;;9894:32;9931:37;9949:6;9957:10;9931:17;:37::i;:::-;9891:77;;;;9979:29;;:::i;:::-;10011:43;:9:::0;10047:6;10011:43:::2;:35;:43;:::i;:::-;9979:75;;10064:42;10082:6;10090:7;10099:6;10064:17;:42::i;:::-;6672:1;;;;9618:495:::0;;;:::o;14174:3640::-;14353:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6616:17:::1;:15;:17::i;:::-;6596;;:37;6588:74;;;::::0;;-1:-1:-1;;;6588:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6588:74:6;;;;;;;;;;;;;::::1;;14410:18:::2;14431:17;:15;:17::i;:::-;14410:38:::0;-1:-1:-1;14475:10:6::2;14458:14;14517:48;14475:10:::0;14410:38;14517:28:::2;:48::i;:::-;14495:70;;14576:23;14602;:5;:11;;:21;:23::i;:::-;14576:49;;14635:29;;:::i;:::-;14679:10:::0;;14675:3133:::2;;15435:15;15425:6;:25;;15417:65;;;::::0;;-1:-1:-1;;;15417:65:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;15501:19;::::0;::::2;;15497:1049;;-1:-1:-1::0;;;;;15598:18:6;::::2;;::::0;;;:10:::2;:18;::::0;;;;15555:70:::2;::::0;:11:::2;::::0;::::2;::::0;15618:6;15555:70:::2;:42;:70;:::i;:::-;15545:80:::0;-1:-1:-1;15643:37:6::2;:23;15545:80:::0;15643:37:::2;:28;:37;:::i;:::-;15735:17:::0;;15754:24:::2;::::0;;::::2;::::0;15703:76:::2;::::0;;;;;;;::::2;::::0;;;15723:10;;-1:-1:-1;;;;;15703:76:6;::::2;::::0;-1:-1:-1;;;;;;;;;;;15703:76:6;;;;;;;::::2;15828:17:::0;;15847:24:::2;::::0;;::::2;::::0;15802:70:::2;::::0;;;;;;;::::2;::::0;;;-1:-1:-1;;;;;15802:70:6;::::2;::::0;::::2;::::0;;;;;;;::::2;15497:1049;;;-1:-1:-1::0;;;;;15935:15:6;::::2;15911:21;15935:15:::0;;;:7:::2;:15;::::0;;;;;;16005:13:::2;::::0;::::2;27:10:-1::0;;16005:20:6::2;23:18:-1::0;::::2;45:23:::0;;16005:20:6;;;;;;;16092:19:::2;::::0;16005:20:::2;::::0;;::::2;;::::0;16077:35:::2;::::0;:10;;16092:19:::2;;16077:35;:14;:35;:::i;:::-;16043:69:::0;;16140:72:::2;:11;::::0;::::2;16183:20;::::0;::::2;16205:6:::0;16140:72:::2;:42;:72;:::i;:::-;16130:82:::0;-1:-1:-1;16231:34:6::2;:20;16130:82:::0;16231:34:::2;:25;:34;:::i;:::-;16283:30;:6:::0;16305:7;16283:30:::2;:21;:30;:::i;:::-;16454:31:::0;;16487:17;;16506:24:::2;::::0;;::::2;::::0;16434:97:::2;::::0;;;;;;;::::2;::::0;;;-1:-1:-1;;;;;16434:97:6;::::2;::::0;-1:-1:-1;;;;;;;;;;;16434:97:6;;;;;;;::::2;15497:1049;;;14675:3133;;;16580:20:::0;16576:108:::2;;16663:7;;;;;;;16576:108;-1:-1:-1::0;16698:21:6::2;::::0;;;;::::2;::::0;;;16708:11:::2;::::0;::::2;16698:21:::0;;;;;;;;;::::2;::::0;::::2;::::0;-1:-1:-1;16733:25:6;;;;16772:32;16823:19:::2;::::0;::::2;;16819:979;;-1:-1:-1::0;;;;;16867:18:6;::::2;;::::0;;;:10:::2;:18;::::0;;;;:32:::2;::::0;16891:7;16867:32:::2;:23;:32;:::i;:::-;16917:37;:23;16946:7:::0;16917:37:::2;:28;:37;:::i;:::-;17009:17:::0;;17028:24:::2;::::0;;::::2;::::0;16977:76:::2;::::0;;;;;;;::::2;::::0;;;16997:10;;-1:-1:-1;;;;;16977:76:6;::::2;::::0;-1:-1:-1;;;;;;;;;;;16977:76:6;;;;;;;::::2;17102:17:::0;;17121:24:::2;::::0;;::::2;::::0;17076:70:::2;::::0;;;;;;;::::2;::::0;;;-1:-1:-1;;;;;17076:70:6;::::2;::::0;::::2;::::0;;;;;;;::::2;16819:979;;;-1:-1:-1::0;;;;;17209:15:6;::::2;17185:21;17209:15:::0;;;:7:::2;:15;::::0;;;;;;17279:13:::2;::::0;::::2;27:10:-1::0;;17279:20:6::2;23:18:-1::0;::::2;45:23:::0;;17279:20:6;;;;;;;17366:19:::2;::::0;17279:20:::2;::::0;;::::2;;::::0;17351:35:::2;::::0;:10;;17366:19:::2;;17351:35;:14;:35;:::i;:::-;17317:69:::0;;17404:30;;:20:::2;::::0;::::2;:30:::0;::::2;::::0;::::2;::::0;;;;;17453:34:::2;:20;17427:7:::0;17453:34:::2;:25;:34;:::i;:::-;17505:30;:6:::0;17527:7;17505:30:::2;:21;:30;:::i;:::-;17680:31:::0;;17713:20:::2;::::0;::::2;:30:::0;17745:37;;;;17656:127:::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;;17668:10:::2;::::0;-1:-1:-1;;;;;;;;;;;17656:127:6;;;;;;;::::2;16819:979;;;6672:1;;;;;14174:3640:::0;;;:::o;23734:782::-;23866:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6135:10:::1;:8;:10::i;:::-;6127:45;;;::::0;;-1:-1:-1;;;6127:45:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6127:45:6;;;;;;;;;;;;;::::1;;23943:6:::2;::::0;:31:::2;::::0;;-1:-1:-1;;;23943:31:6;;23968:4:::2;23943:31;::::0;::::2;::::0;;;23917:23:::2;::::0;-1:-1:-1;;;;;23943:6:6::2;::::0;:16:::2;::::0;:31;;;;;::::2;::::0;;;;;;;;:6;:31;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;23943:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;23943:31:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;23943:31:6;24049:19:::2;::::0;24021:23:::2;::::0;23943:31;;-1:-1:-1;23984:34:6::2;::::0;24021:48:::2;::::0;::::2;:27;:48;:::i;:::-;23984:85:::0;-1:-1:-1;24275:20:6::2;24298:47;:15:::0;23984:85;24298:47:::2;:19;:47;:::i;:::-;24363:6;::::0;:44:::2;::::0;;-1:-1:-1;;;24363:44:6;;-1:-1:-1;;;;;24363:44:6;;::::2;;::::0;::::2;::::0;;;;;;;;;24275:70;;-1:-1:-1;24363:6:6;::::2;::::0;:15:::2;::::0;:44;;;;;::::2;::::0;;;;;;;;;:6:::2;::::0;:44;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;24363:44:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;24363:44:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;24363:44:6;24355:89:::2;;;::::0;;-1:-1:-1;;;24355:89:6;;::::2;;::::0;::::2;::::0;;;;;;;::::2;::::0;;;;;;;;;;;;;::::2;;24459:50;::::0;;-1:-1:-1;;;;;24459:50:6;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;;;;;;;;::::2;6182:1;;;23734:782:::0;;;:::o;18723:846::-;-1:-1:-1;;;;;18962:19:6;;18925:34;18962:19;;;:7;:19;;;;;:26;;19015:19;;18813:26;;;;;;18962;19048:11;;19044:519;;19101:6;19087:21;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;19087:21:6;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;144:17;;-1:-1;19087:21:6;;19075:33;;19155:6;19141:21;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;19141:21:6;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;144:17;;-1:-1;19141:21:6;;19122:40;;19209:6;19195:21;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;19195:21:6;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;144:17;;-1:-1;19195:21:6;-1:-1:-1;19176:40:6;-1:-1:-1;19236:9:6;19231:322;19253:6;19249:1;:10;19231:322;;;19284:22;19309:12;19322:1;19309:15;;;;;;;;;;;;;;;;;;19284:40;;19342:24;19369:2;:8;;19342:35;;19410:1;:11;;;19395:9;19405:1;19395:12;;;;;;;;;;;;;:26;;;;;19461:1;:18;;;19439:16;19456:1;19439:19;;;;;;;;;;;;;:40;;;;;19519:2;:19;;;19497:16;19514:1;19497:19;;;;;;;;;;;;;;;;;:41;-1:-1:-1;;19261:3:6;;19231:322;;;;19044:519;18723:846;;;;;;;:::o;10248:529::-;10364:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6616:17:::1;:15;:17::i;:::-;6596;;:37;6588:74;;;::::0;;-1:-1:-1;;;6588:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6588:74:6;;;;;;;;;;;;;::::1;;10438:10:::2;10421:14;10479:17;:15;:17::i;:::-;10458:38;;10509:32;10547:37;10565:6;10573:10;10547:17;:37::i;:::-;10506:78;;;;10595:29;;:::i;:::-;10654:19:::0;;10634:39;;;10654:19:::2;10683:23:::0;;10717:53:::2;::::0;10735:6;;10634:7;;10717:17:::2;:53::i;:::-;6672:1;;;;10248:529:::0;;:::o;6003:52::-;;;;;;;;;;;;;;;;;;;:::o;21981:1120::-;22149:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6135:10:::1;:8;:10::i;:::-;6127:45;;;::::0;;-1:-1:-1;;;6127:45:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6127:45:6;;;;;;;;;;;;;::::1;;22204:11:::0;22200:174:::2;;22240:19;;22231:28;;22200:174;;;22308:19;;22298:6;:29;;22290:73;;;::::0;;-1:-1:-1;;;22290:73:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;22588:6;::::0;:31:::2;::::0;;-1:-1:-1;;;22588:31:6;;22613:4:::2;22588:31;::::0;::::2;::::0;;;22562:23:::2;::::0;-1:-1:-1;;;;;22588:6:6::2;::::0;:16:::2;::::0;:31;;;;;::::2;::::0;;;;;;;;:6;:31;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;22588:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;22588:31:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;22588:31:6;22666:23:::2;::::0;22588:31;;-1:-1:-1;22629:34:6::2;::::0;22666:35:::2;::::0;22694:6;22666:35:::2;:27;:35;:::i;:::-;22629:72;;22749:15;22719:26;:45;;22711:81;;;::::0;;-1:-1:-1;;;22711:81:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;22811:6;::::0;:38:::2;::::0;;-1:-1:-1;;;22811:38:6;;-1:-1:-1;;;;;22811:38:6;;::::2;;::::0;::::2;::::0;;;;;;;;;:6;;;::::2;::::0;:15:::2;::::0;:38;;;;;::::2;::::0;;;;;;;;:6:::2;::::0;:38;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;22811:38:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;22811:38:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;22811:38:6;22803:83:::2;;;::::0;;-1:-1:-1;;;22803:83:6;;::::2;;::::0;::::2;::::0;;;;;;;::::2;::::0;;;;;;;;;;;;;::::2;;23000:19;:29:::0;;;;::::2;::::0;;23045:49:::2;::::0;;-1:-1:-1;;;;;23045:49:6;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;;;;;;;;::::2;6182:1;;21981:1120:::0;;;;:::o;12116:1291::-;12248:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6616:17:::1;:15;:17::i;:::-;6596;;:37;6588:74;;;::::0;;-1:-1:-1;;;6588:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6588:74:6;;;;;;;;;;;;;::::1;;12313:11:::0;12305:55:::2;;;::::0;;-1:-1:-1;;;12305:55:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;12371:18;12392:17;:15;:17::i;:::-;12371:38;;12423:32;12461:41;12479:10;12491;12461:17;:41::i;:::-;12420:82;;;;12848:19;12870:52;12899:10;12911;12870:28;:52::i;:::-;12848:74;;12932:29;;:::i;:::-;12964:54;:9:::0;12998:11:::2;::::0;::::2;13011:6:::0;12964:54:::2;:33;:54;:::i;:::-;12932:86:::0;-1:-1:-1;13028:37:6::2;:23;12932:86:::0;13028:37:::2;:28;:37;:::i;:::-;13314:28;::::0;::::2;::::0;13344:17;;13363:24:::2;::::0;;::::2;::::0;13292:96:::2;::::0;;;;;;;::::2;::::0;;;13302:10:::2;::::0;13292:96:::2;::::0;;;;;;;::::2;6672:1;;;;12116:1291:::0;;;:::o;3955:136:9:-;4028:7;4054:12;;;;;;;;;;:30;;4078:5;4054:30;:23;:30;:::i;:::-;4047:37;;3955:136;;;;;:::o;2940:137::-;3009:4;3032:12;;;;;;;;;;:38;;3062:7;3032:38;:29;:38;:::i;24840:449:6:-;24958:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6135:10:::1;:8;:10::i;:::-;6127:45;;;::::0;;-1:-1:-1;;;6127:45:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6127:45:6;;;;;;;;;;;;;::::1;;25032:17:::2;:15;:17::i;:::-;25013:15;;:36;;25005:76;;;::::0;;-1:-1:-1;;;25005:76:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;25117:6;::::0;:31:::2;::::0;;-1:-1:-1;;;25117:31:6;;25142:4:::2;25117:31;::::0;::::2;::::0;;;25091:23:::2;::::0;-1:-1:-1;;;;;25117:6:6::2;::::0;:16:::2;::::0;:31;;;;;::::2;::::0;;;;;;;;:6;:31;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;25117:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;25117:31:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;25117:31:6;25166:6:::2;::::0;:47:::2;::::0;;-1:-1:-1;;;25166:47:6;;-1:-1:-1;;;;;25166:47:6;;::::2;;::::0;::::2;::::0;;;;;;;;;25117:31;;-1:-1:-1;25166:6:6;::::2;::::0;:15:::2;::::0;:47;;;;;25117:31:::2;::::0;25166:47;;;;;;;;:6:::2;::::0;:47;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;25166:47:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;25166:47:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;25166:47:6;25158:56:::2;;12:1:-1;9::::0;2:12:::2;25158:56:6;25229:16;::::0;::::2;::::0;;;::::2;25268:13;-1:-1:-1::0;;;;;25255:27:6::2;;1717:49:9::0;1762:4;1717:49;:::o;1507:95:7:-;1569:12;:26;1507:95::o;18210:275:6:-;-1:-1:-1;;;;;18383:19:6;18293:17;18383:19;;;:7;:19;;;;;18430;;18451:26;;;;;18430:19;;18210:275::o;5855:62::-;;;;;;;;;;;;;;;;;;;:::o;17821:107::-;17902:19;;17821:107;:::o;20437:438::-;20576:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;20613:11;20609:48:::1;;20640:7;;20609:48;20675:6;::::0;:54:::1;::::0;;-1:-1:-1;;;20675:54:6;;20695:10:::1;20675:54;::::0;::::1;::::0;20715:4:::1;20675:54:::0;;;;;;;;;;;;-1:-1:-1;;;;;20675:6:6;;::::1;::::0;:19:::1;::::0;:54;;;;;::::1;::::0;;;;;;;;;:6:::1;::::0;:54;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;20675:54:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;20675:54:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;20675:54:6;20667:82:::1;;;::::0;;-1:-1:-1;;;20667:82:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;20667:82:6;;;;;;;;;;;;;::::1;;20781:19;::::0;:31:::1;::::0;20805:6;20781:31:::1;:23;:31;:::i;:::-;20759:19;:53:::0;20827:41:::1;::::0;;20849:10:::1;20827:41:::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;;::::1;20437:438:::0;;;:::o;4241:66::-;4281:26;;;-1:-1:-1;;;4281:26:6;;;;;;;;;;;;4241:66;:::o;19576:424::-;-1:-1:-1;;;;;19772:19:6;19643:17;19772:19;;;:7;:19;;;;;19813:11;;;:21;19863:28;;;;19914:16;;19863:28;19965;;;;19813:21;;19863:28;;19914:16;19965:28;19576:424::o;5652:45::-;;;;;;:::o;3245:125:9:-;3308:7;3334:12;;;;;;;;;;:29;;:27;:29::i;5091:226::-;5183:6;:12;;;;;;;;;;:22;;;5175:45;;5207:12;:10;:12::i;5175:45::-;5167:106;;;;-1:-1:-1;;;5167:106:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:27:7;;;;:::o;10912:564:6:-;11035:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6616:17:::1;:15;:17::i;:::-;6596;;:37;6588:74;;;::::0;;-1:-1:-1;;;6588:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6588:74:6;;;;;;;;;;;;;::::1;;11109:10:::2;11092:14;11150:17;:15;:17::i;:::-;11129:38;;11180:32;11218:37;11236:6;11244:10;11218:17;:37::i;:::-;11177:78;;;;11266:29;;:::i;:::-;11332:26;::::0;::::2;::::0;;11305:24:::2;::::0;::::2;:53:::0;;;11397:1:::2;11368:30:::0;;;11409:60:::2;::::0;11427:6;;11305:7;;11409:17:::2;:60::i;5712:42::-:0;;;;;;:::o;5770:37::-;;;;:::o;11618:491::-;11739:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6616:17:::1;:15;:17::i;:::-;6596;;:37;6588:74;;;::::0;;-1:-1:-1;;;6588:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6588:74:6;;;;;;;;;;;;;::::1;;11813:10:::2;11796:14;11854:17;:15;:17::i;:::-;11833:38;;11884:32;11922:37;11940:6;11948:10;11922:17;:37::i;:::-;-1:-1:-1::0;11970:59:6::2;::::0;;;;::::2;::::0;;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;11881:78;;-1:-1:-1;11970:59:6::2;::::0;-1:-1:-1;11988:6:6;;12007:21:::2;11881:78:::0;12007:19:::2;:21::i;:::-;11970:17;:59::i;:::-;12068:1;12039:26;::::0;::::2;:30:::0;;;12079:23;;-1:-1:-1;;;;11618:491:6:o;8505:831::-;8635:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6616:17:::1;:15;:17::i;:::-;6596;;:37;6588:74;;;::::0;;-1:-1:-1;;;6588:74:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;6588:74:6;;;;;;;;;;;;;::::1;;8712:11:::0;;;::::2;::::0;8733:352:::2;;8773:6;::::0;:54:::2;::::0;;-1:-1:-1;;;8773:54:6;;8793:10:::2;8773:54;::::0;::::2;::::0;8813:4:::2;8773:54:::0;;;;;;;;;;;;-1:-1:-1;;;;;8773:6:6;;::::2;::::0;:19:::2;::::0;:54;;;;;::::2;::::0;;;;;;;;;:6:::2;::::0;:54;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;8773:54:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;8773:54:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;8773:54:6;8765:82:::2;;;::::0;;-1:-1:-1;;;8765:82:6;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;8765:82:6;;;;;;;;;;;;;::::2;;8887:23;::::0;:35:::2;::::0;8915:6;8887:35:::2;:27;:35;:::i;:::-;8861:23;:61:::0;8972:23:::2;:33:::0;:45:::2;::::0;9010:6;8972:45:::2;:37;:45;:::i;:::-;8936:23;:81:::0;9036:38:::2;::::0;;;;;;;9055:10:::2;::::0;9036:38:::2;::::0;;;;;::::2;::::0;;::::2;8733:352;9095:18;9116:17;:15;:17::i;:::-;9095:38;;9146:32;9183:41;9201:10;9213;9183:17;:41::i;:::-;9143:81;;;;9239:12;9235:95;;;9289:19:::0;;:31:::2;::::0;9313:6;9289:31:::2;:23;:31;:::i;:::-;9267:53:::0;;-1:-1:-1;;;;;8505:831:6:o;4427:20::-;;;-1:-1:-1;;;;;4427:20:6;;:::o;21018:208::-;21135:17;6488:15;6467:17;:15;:17::i;:::-;:36;;6459:68;;;;;-1:-1:-1;;;6459:68:6;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6459:68:6;;;;;;;;;;;;;;;6283:10:::1;:8;:10::i;:::-;:48;;;-1:-1:-1::0;4281:26:6::1;::::0;;-1:-1:-1;;;4281:26:6;;;;;;;;::::1;::::0;;;6297:34:::1;::::0;6320:10:::1;6297:7;:34::i;:::-;6275:97;;;;-1:-1:-1::0;;;6275:97:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21189:30:::2;21207:11;21189:17;:30::i;5242:32::-:0;;;;:::o;874:176:10:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;4864:141:15;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:15;;4957:4;:41::i;25673:111:6:-;25715:4;25738:39;25715:4;25766:10;25738:7;:39::i;:::-;25731:46;;25673:111;:::o;1397:103:7:-;1481:12;;1397:103;:::o;26015:390:6:-;26093:21;;26146:148;;;;;;;;;;26195:17;:15;:17::i;:::-;26146:148;;;;;;;;;-1:-1:-1;26124:19:6;;;:14;:19;;;;;:170;;;;;;;;;;;;26328:21;;:28;;;:25;:28;:::i;:::-;26304:21;:52;26372:26;;;;;;;;26388:3;;26372:26;;;;;;;;;;26015:390;;:::o;590:104:8:-;677:10;590:104;:::o;7015:184:9:-;7088:6;:12;;;;;;;;;;:33;;7113:7;7088:33;:24;:33;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:9;7160:7;-1:-1:-1;;;;;7142:40:9;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;26933:255:6:-;26999:26;27028:17;:15;:17::i;:::-;26999:46;;27089:18;27075:11;:32;:67;;27131:11;27075:67;;;27110:18;27075:67;27055:17;:87;;;27157:24;;;;;;;;;;;;;;;;26933:255;;:::o;7205:188:9:-;7279:6;:12;;;;;;;;;;:36;;7307:7;7279:36;:27;:36;:::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;-1:-1:-1;;;;;7336:40:9;7354:7;-1:-1:-1;;;;;7336:40:9;7348:4;7336:40;;;;;;;;;;7205:188;;:::o;31612:2694:6:-;31706:39;;:::i;:::-;-1:-1:-1;;;;;31835:15:6;;31747:32;31835:15;;;:7;:15;;;;;;;;31932:10;:18;;;;;;31747:32;31897:13;;;31747:32;31961:1673;31983:19;;31979:23;;31961:1673;;;32020:20;;:::i;:::-;32043:12;32056:1;32043:15;;;;;;;;;;;;;;;;;32020:38;;;;;;;;32043:15;;;;;;;32020:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32077:18;;32020:38;;-1:-1:-1;32077:29:6;-1:-1:-1;32073:191:6;;;-1:-1:-1;32126:3:6;;32241:8;;32073:191;32340:7;;;;:17;32308:27;;:50;;;:31;:50;:::i;:::-;32278:80;;32652:7;;;;;:24;;;32613:34;;;;:64;;;:38;:64;:::i;:::-;32576:34;;;:101;32978:19;;-1:-1:-1;;32978:23:6;33019:13;;;33015:92;;33070:12;33083:8;33070:22;;;;;;;;;;;;;;;;;;33052:12;33065:1;33052:15;;;;;;;;;;;;;;;;:40;;:15;;;;;:40;;;;;;;;;;;;;;;;;;;;33015:92;33605:12;:18;;;;;;;;;;;;;;;-1:-1:-1;;33605:18:6;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;31961:1673:6;;;;-1:-1:-1;33699:19:6;;33695:77;;-1:-1:-1;;;;;33746:15:6;;;;;;:7;:15;;;;;33739:22;;;;;;;;;33746:15;33739:22;;;;33746:15;33739:22;:::i;:::-;;;33695:77;33794:27;;:32;;;:75;;-1:-1:-1;33830:34:6;;;;:39;;33794:75;33782:87;;33883:9;33879:421;;;33940:27;;33969:34;;;;;33914:90;;;;;;;;;;;;-1:-1:-1;;;;;33914:90:6;;;;;;;;;;;;34019:44;:20;34045:17;34019:44;:25;:44;:::i;:::-;34081:19;;:24;34077:103;;34125:40;:6;34147:17;34125:40;:21;:40;:::i;:::-;34194:47;:23;34223:17;34194:47;:28;:47;:::i;:::-;34256:33;:9;34271:17;34256:33;:14;:33;:::i;:::-;31612:2694;;;;;;;:::o;2944:671:1:-;3040:20;;:::i;:::-;3105:6;3080:4;:21;;;:31;3076:533;;3151:21;;;;:33;;3177:6;3151:33;:25;:33;:::i;:::-;3127:21;;;:57;3198:24;;;:33;;;3076:533;;;3293:21;;;;3282:33;;:6;;:33;:10;:33;:::i;:::-;3262:53;;;3459:14;;:37;;;:18;:37;:::i;:::-;3442:54;;3538:21;;;;;;3511:24;;;:48;3442:14;3573:25;;-1:-1:-1;3511:24:1;2944:671::o;27885:818:6:-;27999:11;;27995:702;;28057:7;:24;;;28034:19;;:47;;28026:92;;;;;-1:-1:-1;;;28026:92:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28140:6;;:31;;;-1:-1:-1;;;28140:31:6;;-1:-1:-1;;;;;28140:31:6;;;;;;;;;;;;;;;:6;;;;;:15;;:31;;;;;;;;;;;;;;:6;;:31;;;2:2:-1;;;;27:1;24;17:12;2:2;28140:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28140:31:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;28140:31:6;28132:59;;;;;-1:-1:-1;;;28132:59:6;;;;;;;;;;;;-1:-1:-1;;;28132:59:6;;;;;;;;;;;;;;;28252:24;;;;28228:19;;:49;;;:23;:49;:::i;:::-;28206:19;:71;28345:17;;28317:23;;:46;;;:27;:46;:::i;:::-;28291:23;:72;28377:37;:23;28406:7;28377:37;:28;:37;:::i;:::-;28641:17;;28660:24;;;;;28620:65;;;;;;;;;;;;28629:10;;28620:65;;;;;;;;;27885:818;;;:::o;28710:2895::-;-1:-1:-1;;;;;28858:15:6;;28815:19;28858:15;;;:7;:15;;;;;;28903:23;:11;;;:21;:23::i;:::-;28883:43;-1:-1:-1;28940:14:6;;28936:1369;;29070:16;;29349:28;;;;29334:879;29383:21;;29379:1;:25;29334:879;;;29429:37;29469:17;;;:14;:17;;;;;29697:19;;:34;-1:-1:-1;29697:34:6;29689:71;;;;;-1:-1:-1;;;29689:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;29868:21;;29798:8;;29841:1;29837:5;;;29864:25;;29860:192;;;29913:42;29958:17;;;:14;:17;;;;;30009:24;;-1:-1:-1;29860:192:6;30082:75;30107:9;30118:8;:13;;;30145:11;30133:9;:23;30082:24;:75::i;:::-;30070:87;-1:-1:-1;30189:9:6;;-1:-1:-1;;;29406:3:6;;29334:879;;;-1:-1:-1;30272:11:6;;;:21;30258:36;;:9;;:36;:13;:36;:::i;:::-;30227:28;;;:67;-1:-1:-1;28936:1369:6;30315:27;;;30384:21;;:58;;30441:1;30384:58;;;30437:1;30413:21;;:25;30384:58;30352:28;;;:91;;;31546:11;;;:21;31569:28;;;;31486:112;;;;;;;;;;;;;;;-1:-1:-1;;;;;31486:112:6;;;;;;;;;;;;28710:2895;;;;;:::o;1046:150:1:-;1166:22;;;;1146:15;;1116:7;;1146:43;;:15;:43;:19;:43;:::i;4355:238::-;4474:20;;:::i;:::-;4520:39;4546:4;4552:6;4520:25;:39::i;:::-;4510:49;;4569:17;4574:2;4578:7;4569:4;:17::i;:::-;4355:238;;;;;:::o;1594:220::-;1710:16;;1693:12;;:34;;;:16;:34;:::i;:::-;1678:49;;1783:23;;;;1759:19;;;;:48;;;:23;:48;:::i;:::-;1737:2;:19;;:70;;;;1594:220;;:::o;1321:134:10:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;3873:224:1:-;3985:20;;:::i;:::-;4031:32;4050:4;4056:6;4031:18;:32::i;2065:230::-;2187:16;;2168:14;;:36;;;:18;:36;:::i;:::-;2151:53;;2264:23;;;;2238:21;;;;:50;;;:25;:50;:::i;6085:147:15:-;6159:7;6201:22;6205:3;6217:5;6201:3;:22::i;5401:156::-;5481:4;5504:46;5514:3;-1:-1:-1;;;;;5534:14:15;;5504:9;:46::i;5638:115::-;5701:7;5727:19;5735:3;5727:7;:19::i;26522:148:6:-;26592:19;:33;;;;;-1:-1:-1;;26592:33:6;;;;;;;;26640:23;;;;;;;;;;;;;;;;26522:148;:::o;1611:404:15:-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1732:11:15;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:15;1986:12;;5173:147;5246:4;5269:44;5277:3;-1:-1:-1;;;;;5297:14:15;;5269:7;:44::i;1391:457:3:-;1494:7;1524:317;1557:260;1579:197;1619:26;1643:1;1619:22;:26::i;:::-;1667:87;1714:5;1747:6;1667:18;:87::i;:::-;1579:17;:197::i;:::-;1798:1;1557:3;:260::i;:::-;1831:9;1524:18;:317::i;:::-;1517:324;1391:457;-1:-1:-1;;;;1391:457:3:o;1746:187:10:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1851:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:10;;;1746:187::o;2302:635:1:-;2391:20;;:::i;:::-;2431:14;;:24;-1:-1:-1;2427:504:1;;2488:14;;:26;;2507:6;2488:26;:18;:26;:::i;:::-;2471:43;;2528:26;;;2427:504;;;2622:14;;2611:26;;:6;;:26;:10;:26;:::i;:::-;2584:24;;;:53;;;2788:21;;;;:51;;;:25;:51;:::i;:::-;2764:21;;;:75;2874:14;;2854:34;;2874:14;2902:18;;;-1:-1:-1;2854:34:1;2302:635::o;4423:201:15:-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:15;;;;-1:-1:-1;;;4509:73:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;3984:107::-;4066:18;;3984:107::o;2183:1512::-;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:15;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;;1928:134:0;1981:6;2009:18;2004:1;:23;;1995:33;;12:1:-1;9;2:12;1995:33:0;-1:-1:-1;2054:2:0;2049:7;;1928:134::o;8234:203::-;8294:6;8317;8308:16;;12:1:-1;9;2:12;8308:16:0;8330:14;8347:12;8354:1;8357;8347:5;:12::i;:::-;8330:29;-1:-1:-1;;;;;;;;;;;8374:29:0;;;;8365:39;;12:1:-1;9;2:12;3364:191:0;3421:6;3451:13;:9;;;:13;;;;;-1:-1:-1;;;;;;3479:19:0;;;;;:42;;-1:-1:-1;;;;;;3502:19:0;;;3479:42;3470:52;;12:1:-1;9;2:12;1013:371:3;1079:8;1107:26;1131:1;1107:22;:26::i;:::-;1103:30;;1144:234;1151:6;;1144:234;;1182:1;1178:5;;1177:12;1173:195;;1213:24;1232:1;1235;1213:17;:24::i;:::-;1209:28;;1260:1;1255:6;;;;1173:195;;;1304:24;1323:1;1326;1304:17;:24::i;:::-;1300:28;;1352:1;1346:7;;;;;1173:195;1144:234;;5958:455:0;6017:7;6036:6;6032:20;;-1:-1:-1;6051:1:0;6044:8;;6032:20;6073:1;6068;:6;;;;6059:16;;12:1:-1;9;2:12;6059:16:0;6096:11;;;;-1:-1:-1;;;;;6111:38:0;;6096:54;;6155:2;6095:62;;6196:3;6191:8;;;6176:24;-1:-1:-1;;;;;6216:56:0;;;6207:66;;12:1:-1;9;2:12;6207:66:0;6286:2;6279:9;6316:71;;6304:83;;;6295:93;;12:1:-1;9;2:12;6295:93:0;6401:7;;5958:455;-1:-1:-1;;;5958:455:0:o;20447:1218::-;20507:7;20531:6;20522:16;;12:1:-1;9;2:12;20522:16:0;20545:14;-1:-1:-1;;;;;20570:1:0;:55;20566:1005;;20654:1;20648:2;20643:1;:7;;20642:13;;;;;;20633:22;;20566:1005;;;20688:3;20712:8;;;20738:11;20732:17;;20728:48;;20760:2;20764:9;;;;20753;20728:48;20793:7;20787:2;:13;20783:44;;20811:2;20815:9;;;;20804;20783:44;20844:5;20838:2;:11;20834:40;;20860:1;20863:8;;;;20853;20834:40;20891:4;20885:2;:10;20881:39;;20906:1;20909:8;;;;20899;20881:39;20937:3;20931:2;:9;20927:38;;20951:1;20954:8;;;;20944;20927:38;20982:3;20976:2;:9;20972:23;;20994:1;20987:8;;;;20972:23;21081:3;21075;:9;21070:1;21066;:5;:18;;21088:1;21065:24;21057:3;21051;:9;21046:1;:14;;21045:45;;;;;;21036:54;;-1:-1:-1;;;;;21107:6:0;:44;;21098:54;;12:1:-1;9;2:12;21098:54:0;21189:3;21184:8;;;21174:19;;-1:-1:-1;;;;;21224:38:0;;21214:49;;21290:3;21285:8;;;21319:2;21314:7;;;21334;;;21330:20;;;21349:1;21343:7;;;;21330:20;21422:3;21416:9;;;;21358:8;;21437:7;;;21433:20;;;21452:1;21446:7;;;;21433:20;21461:8;;;21535:3;21529:9;;;21523:15;;21515:24;;;;21563:1;21558:2;:6;;;;;;21548:16;;;;20566:1005;;;;;;;-1:-1:-1;;;;;21586:6:0;:44;;21577:54;;12:1:-1;9;2:12;4186:197:0;4243:6;4273:13;:9;;;:13;;;;;4290:2;4273:19;-1:-1:-1;;;;;;4307:19:0;;;;;:42;;-1:-1:-1;;;;;;4330:19:0;;;4298:52;;12:1:-1;9;2:12;-1:-1;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier:Apache-2.0\n//------------------------------------------------------------------------------\n//\n//   Copyright 2020 Fetch.AI Limited\n//\n//   Licensed under the Apache License, Version 2.0 (the \"License\");\n//   you may not use this file except in compliance with the License.\n//   You may obtain a copy of the License at\n//\n//       http://www.apache.org/licenses/LICENSE-2.0\n//\n//   Unless required by applicable law or agreed to in writing, software\n//   distributed under the License is distributed on an \"AS IS\" BASIS,\n//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//   See the License for the specific language governing permissions and\n//   limitations under the License.\n//\n//------------------------------------------------------------------------------\n\npragma solidity ^0.6.0;\n\nimport \"./Staking.sol\";\n\n\ncontract StakingMock is Staking {\n    uint256 public _blockNumber;\n\n    constructor(\n          address ERC20Address\n        , uint256 interestRatePerBlock\n        , uint256 pausedSinceBlock\n        , uint64  lockPeriodInBlocks) \n    public Staking(\n        ERC20Address, interestRatePerBlock, pausedSinceBlock, lockPeriodInBlocks)\n    {\n        // NOTE(pb): Unnecessary, only wastes gas. The data mamber is implicitly initialised to default value( zero in the case of integral types). \n        //_blockNumber = 0;\n    }\n\n\n    function _getBlockNumber() internal view override returns(uint256) {\n        return _blockNumber;\n    }\n\n\n    function setBlockNumber(uint256 blockNumber) public {\n        _blockNumber = blockNumber;\n    }\n}\n",
  "sourcePath": "/Users/pb/code/fetch/cosmos/ledger-staking-contract/contracts/StakingMock.sol",
  "ast": {
    "absolutePath": "/Users/pb/code/fetch/cosmos/ledger-staking-contract/contracts/StakingMock.sol",
    "exportedSymbols": {
      "StakingMock": [
        5535
      ]
    },
    "id": 5536,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5492,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "820:23:7"
      },
      {
        "absolutePath": "/Users/pb/code/fetch/cosmos/ledger-staking-contract/contracts/Staking.sol",
        "file": "./Staking.sol",
        "id": 5493,
        "nodeType": "ImportDirective",
        "scope": 5536,
        "sourceUnit": 5491,
        "src": "845:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5494,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5490,
              "src": "895:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$5490",
                "typeString": "contract Staking"
              }
            },
            "id": 5495,
            "nodeType": "InheritanceSpecifier",
            "src": "895:7:7"
          }
        ],
        "contractDependencies": [
          5490,
          5558,
          5841
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5535,
        "linearizedBaseContracts": [
          5535,
          5490,
          5841,
          5558
        ],
        "name": "StakingMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d7e0e975",
            "id": 5497,
            "mutability": "mutable",
            "name": "_blockNumber",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5535,
            "src": "909:27:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5496,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "909:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5514,
              "nodeType": "Block",
              "src": "1206:184:7",
              "statements": []
            },
            "documentation": null,
            "id": 5515,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5508,
                    "name": "ERC20Address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5499,
                    "src": "1128:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5509,
                    "name": "interestRatePerBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5501,
                    "src": "1142:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5510,
                    "name": "pausedSinceBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5503,
                    "src": "1164:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5511,
                    "name": "lockPeriodInBlocks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5505,
                    "src": "1182:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  }
                ],
                "id": 5512,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5507,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5490,
                  "src": "1111:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$5490_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1111:90:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5499,
                  "mutability": "mutable",
                  "name": "ERC20Address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5515,
                  "src": "966:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5501,
                  "mutability": "mutable",
                  "name": "interestRatePerBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5515,
                  "src": "997:28:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5503,
                  "mutability": "mutable",
                  "name": "pausedSinceBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5515,
                  "src": "1036:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5505,
                  "mutability": "mutable",
                  "name": "lockPeriodInBlocks",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5515,
                  "src": "1071:26:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 5504,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "954:144:7"
            },
            "returnParameters": {
              "id": 5513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1206:0:7"
            },
            "scope": 5535,
            "src": "943:447:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5019
            ],
            "body": {
              "id": 5523,
              "nodeType": "Block",
              "src": "1464:36:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5521,
                    "name": "_blockNumber",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5497,
                    "src": "1481:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5520,
                  "id": 5522,
                  "nodeType": "Return",
                  "src": "1474:19:7"
                }
              ]
            },
            "documentation": null,
            "id": 5524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getBlockNumber",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5517,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1438:8:7"
            },
            "parameters": {
              "id": 5516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1421:2:7"
            },
            "returnParameters": {
              "id": 5520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5519,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5524,
                  "src": "1455:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1454:9:7"
            },
            "scope": 5535,
            "src": "1397:103:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5533,
              "nodeType": "Block",
              "src": "1559:43:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5529,
                      "name": "_blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5497,
                      "src": "1569:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5530,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5526,
                      "src": "1584:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1569:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5532,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:26:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a8c3c850",
            "id": 5534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBlockNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5526,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5534,
                  "src": "1531:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1530:21:7"
            },
            "returnParameters": {
              "id": 5528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1559:0:7"
            },
            "scope": 5535,
            "src": "1507:95:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5536,
        "src": "871:733:7"
      }
    ],
    "src": "820:785:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/pb/code/fetch/cosmos/ledger-staking-contract/contracts/StakingMock.sol",
    "exportedSymbols": {
      "StakingMock": [
        5535
      ]
    },
    "id": 5536,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5492,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "820:23:7"
      },
      {
        "absolutePath": "/Users/pb/code/fetch/cosmos/ledger-staking-contract/contracts/Staking.sol",
        "file": "./Staking.sol",
        "id": 5493,
        "nodeType": "ImportDirective",
        "scope": 5536,
        "sourceUnit": 5491,
        "src": "845:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5494,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5490,
              "src": "895:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$5490",
                "typeString": "contract Staking"
              }
            },
            "id": 5495,
            "nodeType": "InheritanceSpecifier",
            "src": "895:7:7"
          }
        ],
        "contractDependencies": [
          5490,
          5558,
          5841
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5535,
        "linearizedBaseContracts": [
          5535,
          5490,
          5841,
          5558
        ],
        "name": "StakingMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d7e0e975",
            "id": 5497,
            "mutability": "mutable",
            "name": "_blockNumber",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5535,
            "src": "909:27:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5496,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "909:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5514,
              "nodeType": "Block",
              "src": "1206:184:7",
              "statements": []
            },
            "documentation": null,
            "id": 5515,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5508,
                    "name": "ERC20Address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5499,
                    "src": "1128:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5509,
                    "name": "interestRatePerBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5501,
                    "src": "1142:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5510,
                    "name": "pausedSinceBlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5503,
                    "src": "1164:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5511,
                    "name": "lockPeriodInBlocks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5505,
                    "src": "1182:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  }
                ],
                "id": 5512,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5507,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5490,
                  "src": "1111:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$5490_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1111:90:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5499,
                  "mutability": "mutable",
                  "name": "ERC20Address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5515,
                  "src": "966:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5501,
                  "mutability": "mutable",
                  "name": "interestRatePerBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5515,
                  "src": "997:28:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5503,
                  "mutability": "mutable",
                  "name": "pausedSinceBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5515,
                  "src": "1036:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5505,
                  "mutability": "mutable",
                  "name": "lockPeriodInBlocks",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5515,
                  "src": "1071:26:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 5504,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "954:144:7"
            },
            "returnParameters": {
              "id": 5513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1206:0:7"
            },
            "scope": 5535,
            "src": "943:447:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5019
            ],
            "body": {
              "id": 5523,
              "nodeType": "Block",
              "src": "1464:36:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5521,
                    "name": "_blockNumber",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5497,
                    "src": "1481:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5520,
                  "id": 5522,
                  "nodeType": "Return",
                  "src": "1474:19:7"
                }
              ]
            },
            "documentation": null,
            "id": 5524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getBlockNumber",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5517,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1438:8:7"
            },
            "parameters": {
              "id": 5516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1421:2:7"
            },
            "returnParameters": {
              "id": 5520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5519,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5524,
                  "src": "1455:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1454:9:7"
            },
            "scope": 5535,
            "src": "1397:103:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5533,
              "nodeType": "Block",
              "src": "1559:43:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5529,
                      "name": "_blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5497,
                      "src": "1569:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5530,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5526,
                      "src": "1584:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1569:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5532,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:26:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a8c3c850",
            "id": 5534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBlockNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5526,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5534,
                  "src": "1531:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1530:21:7"
            },
            "returnParameters": {
              "id": 5528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1559:0:7"
            },
            "scope": 5535,
            "src": "1507:95:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5536,
        "src": "871:733:7"
      }
    ],
    "src": "820:785:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.8+commit.0bbfe453.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-10-13T17:26:53.213Z",
  "devdoc": {
    "methods": {
      "addInterestRate(uint256,uint256)": {
        "details": "expiration period",
        "params": {
          "expirationBlock": "- block number beyond which is the carrier Tx considered expired, and so rejected.                    This is for protection of Tx sender to exactly define lifecycle length of the Tx,                    and so avoiding uncertainty of how long Tx sender needs to wait for Tx processing.                    Tx can be withheld",
          "rate": "- signed interest rate value in [10**18] units => real_rate [1] = rate [10**18] / 10**18"
        }
      },
      "deleteContract(address,uint256)": {
        "details": "owner only + only on or after `_earliestDelete` block",
        "params": {
          "payoutAddress": "address to transfer the balances to. Ensure that this is able to handle ERC20 tokens"
        }
      },
      "getLockedAssetsForUser(address)": {
        "details": "Returns locked assets decomposed in to 3 separate arrays (principal, compound interest, liquid since block)     NOTE(pb): This method might be quite expensive, depending on size of locked assets"
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "pauseSince(uint256,uint256)": {
        "details": "Delegate only",
        "params": {
          "blockNumber": "block number since which non-admin interaction will be paused (for all _getBlockNumber() >= blockNumber)"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "topUpRewardsPool(uint256,uint256)": {
        "details": "Even though this is considered as administrative action (is not affected by by contract paused state, it can be executed by anyone who wishes to top-up the rewards pool (funds are sent in to contract, *not* the other way around). The Rewards Pool is exclusively dedicated to cover withdrawals of user' compound interest, which is effectively the reward."
      },
      "unbindStake(uint256,uint256)": {
        "details": "public access",
        "params": {
          "amount": "- value to un-bind from the stake                If `amount=0` then the **WHOLE** stake (including                compound interest) will be unbound."
        }
      },
      "updateLockPeriod(uint64,uint256)": {
        "details": "Delegate only",
        "params": {
          "numOfBlocks": "length of the lock period"
        }
      },
      "withdraw(uint256,uint256)": {
        "details": "public access",
        "params": {
          "amount": "- value to withdraw"
        }
      },
      "withdrawCompoundInterest(uint256)": {
        "details": "public access"
      },
      "withdrawExcessTokens(address,uint256)": {
        "details": "Withdraw \"excess\" tokens, which were sent to contract directly via direct ERC20.transfer(...),     without interacting with API of this (Staking) contract, what could be done only by mistake.     Thus this method is meant to be used primarily for rescue purposes, enabling withdrawal of such     \"excess\" tokens out of contract.",
        "params": {
          "targetAddress": ": address to send tokens to",
          "txExpirationBlock": ": block number until which is the transaction valid (inclusive).                           When transaction is processed after this block, it fails."
        }
      },
      "withdrawFromRewardsPool(uint256,address,uint256)": {
        "details": "Withdraw tokens from rewards pool.",
        "params": {
          "amount": ": amount to withdraw.                If `amount == 0` then whole amount in rewards pool will be withdrawn.",
          "targetAddress": ": address to send tokens to"
        }
      },
      "withdrawPrincipal(uint256)": {
        "details": "public access"
      },
      "withdrawWholeLiquidity(uint256)": {
        "details": "public access"
      }
    }
  },
  "userdoc": {
    "methods": {
      "addInterestRate(uint256,uint256)": {
        "notice": "Add new interest rate in to the ordered container of previously added interest rates"
      },
      "deleteContract(address,uint256)": {
        "notice": "Delete the contract, transfers the remaining token and ether balance to the specified payoutAddress"
      },
      "pauseSince(uint256,uint256)": {
        "notice": "Pauses all NON-administrative interaction with the contract since the specidfed block number "
      },
      "unbindStake(uint256,uint256)": {
        "notice": "Unbinds amount from the stake of sender of the transaction,        and *LOCKS* it for number of blocks defined by value of the        `_lockPeriodInBlocks` state of this contract at the point        of this call.        The locked amount can *NOT* be withdrawn from the contract        *BEFORE* the lock period ends.     *         Unbinding (=calling this method) also means, that compound        interest will be calculated for period since la."
      },
      "updateLockPeriod(uint64,uint256)": {
        "notice": "Updates Lock Period value"
      },
      "withdraw(uint256,uint256)": {
        "notice": "Withdraws amount from sender' available liquidity pool back to sender address,        preferring withdrawal from compound interest dimension of liquidity."
      },
      "withdrawCompoundInterest(uint256)": {
        "notice": "Withdraws *WHOLE* compound interest amount available to sender."
      },
      "withdrawPrincipal(uint256)": {
        "notice": "Withdraws *WHOLE* compound interest amount available to sender."
      },
      "withdrawWholeLiquidity(uint256)": {
        "notice": "Withdraws whole liquidity available to sender back to sender' address,"
      }
    }
  }
}